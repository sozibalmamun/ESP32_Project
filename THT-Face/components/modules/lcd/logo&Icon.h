
#pragma once

#include "globalScope.h"

#define WIFI_WIDTH 16
#define WIFI_HEIGHT 15
#define BLE_W 11
#define BLE_H 15

#define NETWORK_ICON_POSS_X 295
#define NETWORK_ICON_POSS_Y 3

// #define DIGIT_WIDTH 8//910
// #define DIGIT_HEIGHT 10//13

// #define LETTER_WIDTH 9//910
// #define LETTER_HEIGHT 10//13
#define LETTER_HEIGHT 22//13

#define WHITE 0xFFFF
#define RED 0xf8c0
#define GREEN 0x4f00
#define GRAY 0x6b4d
#define BLACK 0x0000

#define ZERO "abcdef"
#define ONE "bc"
#define TWO "abged"
#define THREE "abcdg"
#define FOUR "bcfg"
#define FIVE "acdfg"
#define SIX "acdefg"
#define SEVEEN "abc"
#define EIGHT "abcdefg"
#define NINE "abcdfg"

TickType_t animationTime=0; 
extern const char* day_names[];

// #define DATA_FLASH __attribute__((section(".rodata")))

// Store an array in flash
// const MY_DATA_IN_FLASH uint8_t largeArray[] = {0x01, 0x02, 0x03, /* ... */};



#ifdef __cplusplus
extern "C"
{
#endif


const uint8_t rgb565Data []= {


	0x6A, 0x66, 0x6A, 0x65, 0x6A, 0x65, 0x62, 0x65, 0x62, 0x65, 0x62, 0x65, 0x5A, 0x65, 0x5A, 0x86, 0x62, 0x87, 0x62, 0x87, 0x62, 0x88, 0x62, 0xA8, 0x6A, 0xC9, 0x6A, 0xEA, 0x73, 0x2C, 0x73, 0x6D, 0x73, 0x8E, 0x73, 0xCF, 0x7B, 0xF0, 0x7C, 0x10, 0x84, 0x51, 0x84, 0x52, 0x84, 0x52, 0x8C, 0x73, 0x94, 0xB3, 0x94, 0xF4, 0x9D, 0x15, 0xA5, 0x56, 0xA5, 0x76, 0xAD, 0x97, 0xAD, 0x97, 0xAD, 0xB8, 0xAD, 0xB7, 0xAD,
	0x97, 0xAD, 0x97, 0xAD, 0x77, 0xAD, 0x77, 0xAD, 0x77, 0xAD, 0x98, 0xB5, 0xB8, 0xB5, 0xF9, 0xBE, 0x1A, 0xC6, 0x3A, 0xC6, 0x3A, 0xBE, 0x3A, 0xBE, 0x19, 0xBD, 0xD8, 0xB5, 0x96, 0xAD, 0x34, 0x9C, 0xF3, 0x94, 0x71, 0x8C, 0x0F, 0x7B, 0x8C, 0x6B, 0x0A, 0x62, 0x88, 0x5A, 0x66, 0x52, 0x25, 0x52, 0x04, 0x51, 0xE4, 0x51, 0xE4, 0x52, 0x05, 0x52, 0x26, 0x5A, 0x46, 0x5A, 0x67, 0x5A, 0x67, 0x5A, 0x88, 0x5A, 0x88, 
	0x5A, 0x88, 0x5A, 0x67, 0x5A, 0x67, 0x5A, 0x67, 0x5A, 0x67, 0x5A, 0x67, 0x5A, 0x67, 0x5A, 0x67, 0x6A, 0x65, 0x6A, 0x65, 0x62, 0x45, 0x62, 0x44, 0x62, 0x65, 0x5A, 0x65, 0x5A, 0x66, 0x5A, 0x86, 0x62, 0x88, 0x62, 0xA9, 0x6A, 0xC9, 0x6A, 0xEA, 0x73, 0x2B, 0x73, 0x6D, 0x7B, 0xCE, 0x84, 0x0F, 0x84, 0x30, 0x8C, 0x72, 0x8C, 0xB3, 0x94, 0xD4, 0x9C, 0xF5, 0x9D, 0x15, 0x9D, 0x36, 0xA5, 0x36, 0xAD, 0x97, 0xB5, 
	0xD8, 0xB5, 0xF9, 0xBE, 0x19, 0xBE, 0x3A, 0xC6, 0x5A, 0xC6, 0x5A, 0xC6, 0x5A, 0xBE, 0x5A, 0xBE, 0x5A, 0xBE, 0x3A, 0xC6, 0x3A, 0xC6, 0x5A, 0xC6, 0x5A, 0xCE, 0x7B, 0xCE, 0x9B, 0xCE, 0x9C, 0xD6, 0xDC, 0xD6, 0xFD, 0xDE, 0xFD, 0xDE, 0xFD, 0xDE, 0xFD, 0xD6, 0xDC, 0xD6, 0x9A, 0xCE, 0x59, 0xC6, 0x17, 0xB5, 0x95, 0xAD, 0x33, 0x9C, 0x91, 0x83, 0xCD, 0x73, 0x2A, 0x62, 0xC8, 0x52, 0x46, 0x49, 0xE4, 0x49, 0xC4, 
	0x41, 0xA4, 0x49, 0xC4, 0x49, 0xE5, 0x52, 0x26, 0x5A, 0x47, 0x5A, 0x67, 0x62, 0xA8, 0x5A, 0x88, 0x5A, 0x88, 0x5A, 0x67, 0x5A, 0x67, 0x5A, 0x67, 0x5A, 0x67, 0x5A, 0x67, 0x5A, 0x87, 0x52, 0x67, 0x6A, 0x65, 0x6A, 0x45, 0x62, 0x45, 0x62, 0x45, 0x62, 0x45, 0x62, 0x66, 0x5A, 0x87, 0x62, 0xC8, 0x62, 0xEA, 0x6B, 0x2C, 0x73, 0x4D, 0x73, 0x8E, 0x7B, 0xCF, 0x84, 0x10, 0x8C, 0x72, 0x8C, 0x93, 0x8C, 0xD4, 0x94, 
	0xF4, 0x9D, 0x16, 0x9D, 0x37, 0xA5, 0x78, 0xAD, 0x78, 0xAD, 0x98, 0xAD, 0xB8, 0xB5, 0xD9, 0xB5, 0xFA, 0xBE, 0x3A, 0xC6, 0x5B, 0xC6, 0x9C, 0xC6, 0x9C, 0xC6, 0x9C, 0xC6, 0x9C, 0xC6, 0x9B, 0xC6, 0x9B, 0xC6, 0x9B, 0xCE, 0x9B, 0xCE, 0x9C, 0xCE, 0x9C, 0xCE, 0xBC, 0xD6, 0xBC, 0xD6, 0xDD, 0xD6, 0xFD, 0xDF, 0x1D, 0xDF, 0x3E, 0xDF, 0x3E, 0xDF, 0x3E, 0xDF, 0x1D, 0xDF, 0x1D, 0xDE, 0xDC, 0xD6, 0x9A, 0xCE, 0x59, 
	0xC6, 0x17, 0xB5, 0x95, 0xA4, 0xD2, 0x8C, 0x4F, 0x83, 0xAD, 0x6B, 0x0A, 0x62, 0x88, 0x5A, 0x47, 0x52, 0x05, 0x49, 0xE5, 0x4A, 0x05, 0x52, 0x06, 0x52, 0x26, 0x5A, 0x47, 0x5A, 0x67, 0x5A, 0x67, 0x5A, 0x67, 0x5A, 0x67, 0x5A, 0x67, 0x5A, 0x67, 0x5A, 0x67, 0x5A, 0x67, 0x5A, 0x87, 0x52, 0x67, 0x6A, 0x45, 0x62, 0x45, 0x62, 0x45, 0x62, 0x45, 0x62, 0x66, 0x62, 0xA7, 0x62, 0xC9, 0x63, 0x0B, 0x6B, 0x4D, 0x73, 
	0xAF, 0x73, 0xD0, 0x7C, 0x12, 0x84, 0x53, 0x8C, 0x93, 0x94, 0xD5, 0x95, 0x15, 0x95, 0x36, 0x9D, 0x57, 0xA5, 0x78, 0xA5, 0x99, 0xAD, 0xBA, 0xAD, 0xDA, 0xB5, 0xDA, 0xB5, 0xFA, 0xBE, 0x1B, 0xBE, 0x3B, 0xC6, 0x5C, 0xC6, 0x7C, 0xCE, 0x9C, 0xCE, 0xBC, 0xCE, 0xBC, 0xCE, 0xBC, 0xCE, 0xBC, 0xCE, 0xBC, 0xCE, 0xBC, 0xCE, 0xBC, 0xCE, 0xDC, 0xD6, 0xDD, 0xD6, 0xDD, 0xD6, 0xDD, 0xD6, 0xFD, 0xD6, 0xFD, 0xDF, 0x1D, 
	0xDF, 0x3D, 0xDF, 0x3D, 0xE7, 0x3E, 0xE7, 0x3E, 0xE7, 0x3D, 0xE7, 0x3D, 0xDF, 0x1D, 0xDE, 0xFC, 0xD6, 0xDB, 0xCE, 0x59, 0xBD, 0xD6, 0xAD, 0x34, 0x9C, 0xB1, 0x83, 0xEE, 0x73, 0x4B, 0x6A, 0xE9, 0x5A, 0x67, 0x52, 0x06, 0x52, 0x06, 0x49, 0xE5, 0x52, 0x06, 0x52, 0x26, 0x52, 0x26, 0x52, 0x47, 0x52, 0x47, 0x5A, 0x67, 0x5A, 0x67, 0x5A, 0x67, 0x5A, 0x67, 0x5A, 0x67, 0x5A, 0x67, 0x5A, 0x67, 0x62, 0x45, 0x62, 
	0x45, 0x62, 0x46, 0x62, 0x66, 0x62, 0x87, 0x62, 0xA9, 0x63, 0x0B, 0x6B, 0x4D, 0x73, 0xD0, 0x7C, 0x33, 0x84, 0x74, 0x8C, 0xB5, 0x95, 0x16, 0x9D, 0x37, 0x9D, 0x78, 0xA5, 0x98, 0xA5, 0xB9, 0xA5, 0xB9, 0xAD, 0xDA, 0xB5, 0xFB, 0xB6, 0x3C, 0xB6, 0x1C, 0xBE, 0x1B, 0xBE, 0x3C, 0xC6, 0x5C, 0xC6, 0x5C, 0xCE, 0x7C, 0xCE, 0xBD, 0xCE, 0xBD, 0xCE, 0xDD, 0xCE, 0xDD, 0xCE, 0xDC, 0xCE, 0xDC, 0xD6, 0xFD, 0xD6, 0xFD, 
	0xD6, 0xFD, 0xD6, 0xFD, 0xDF, 0x1D, 0xDE, 0xFD, 0xDE, 0xFD, 0xD6, 0xFD, 0xDF, 0x1D, 0xDF, 0x1D, 0xDF, 0x3D, 0xE7, 0x3D, 0xE7, 0x5E, 0xEF, 0x7E, 0xEF, 0x7F, 0xEF, 0x9F, 0xEF, 0x9F, 0xEF, 0x9F, 0xEF, 0x9F, 0xE7, 0x5D, 0xD6, 0xDB, 0xCE, 0x79, 0xBD, 0xD6, 0xA5, 0x13, 0x8C, 0x2F, 0x7B, 0x8C, 0x62, 0xC9, 0x52, 0x47, 0x52, 0x26, 0x49, 0xE5, 0x49, 0xC5, 0x49, 0xE5, 0x4A, 0x05, 0x52, 0x26, 0x52, 0x46, 0x5A, 
	0x67, 0x5A, 0x67, 0x5A, 0x67, 0x5A, 0x67, 0x5A, 0x67, 0x5A, 0x67, 0x5A, 0x67, 0x62, 0x66, 0x62, 0x87, 0x6A, 0x88, 0x6A, 0xC9, 0x6A, 0xEA, 0x63, 0x2C, 0x6B, 0x6E, 0x6B, 0xB0, 0x74, 0x33, 0x7C, 0x75, 0x84, 0xB6, 0x8C, 0xF7, 0x95, 0x38, 0x9D, 0x58, 0x9D, 0x79, 0xA5, 0x99, 0xA5, 0x99, 0xA5, 0x99, 0xAD, 0xBA, 0xAD, 0xDB, 0xB5, 0xFB, 0xB5, 0xFB, 0xB6, 0x1B, 0xBE, 0x1B, 0xBE, 0x3B, 0xBE, 0x3B, 0xC6, 0x5C, 
	0xC6, 0x7C, 0xCE, 0x9C, 0xCE, 0xBC, 0xCE, 0xBC, 0xCE, 0xBC, 0xCE, 0xDC, 0xD6, 0xDC, 0xD6, 0xDC, 0xD6, 0xDD, 0xD6, 0xDC, 0xD6, 0xFD, 0xD6, 0xDC, 0xD6, 0xDC, 0xD6, 0xDC, 0xD6, 0xFC, 0xDE, 0xFC, 0xDF, 0x1C, 0xDF, 0x1C, 0xE7, 0x3D, 0xE7, 0x3D, 0xE7, 0x5E, 0xE7, 0x5E, 0xEF, 0x7E, 0xEF, 0x7E, 0xEF, 0x9E, 0xE7, 0x7E, 0xDF, 0x3D, 0xDE, 0xFB, 0xCE, 0x99, 0xC5, 0xF7, 0xAD, 0x75, 0x9C, 0xB2, 0x84, 0x0E, 0x73, 
	0x6C, 0x6B, 0x0A, 0x62, 0x88, 0x5A, 0x47, 0x52, 0x26, 0x4A, 0x05, 0x52, 0x05, 0x52, 0x26, 0x52, 0x46, 0x52, 0x47, 0x52, 0x67, 0x5A, 0x67, 0x52, 0x67, 0x5A, 0x67, 0x5A, 0x67, 0x62, 0x88, 0x62, 0xA9, 0x62, 0xEA, 0x6B, 0x0B, 0x6B, 0x4D, 0x6B, 0x6F, 0x6B, 0xD1, 0x74, 0x13, 0x7C, 0x75, 0x84, 0xB7, 0x8C, 0xF7, 0x95, 0x39, 0x9D, 0x79, 0x9D, 0x79, 0x9D, 0x99, 0xA5, 0x79, 0xA5, 0x99, 0xA5, 0x79, 0xA5, 0x99, 
	0xAD, 0xBA, 0xB5, 0xDA, 0xB5, 0xFA, 0xB5, 0xFA, 0xB5, 0xFA, 0xBE, 0x1B, 0xBE, 0x1B, 0xC6, 0x3B, 0xC6, 0x5B, 0xC6, 0x7B, 0xCE, 0x9B, 0xCE, 0x9C, 0xCE, 0xBC, 0xCE, 0xBC, 0xD6, 0xBC, 0xD6, 0xDC, 0xD6, 0xDC, 0xD6, 0xBC, 0xD6, 0xBC, 0xD6, 0xBC, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0xDB, 0xD6, 0xFB, 0xDE, 0xFB, 0xDE, 0xFC, 0xDF, 0x1C, 0xE7, 0x1D, 0xE7, 0x1D, 0xE7, 0x3D, 0xE7, 0x3E, 0xE7, 0x5E, 0xEF, 0x7E, 0xE7, 
	0x7E, 0xE7, 0x7E, 0xE7, 0x5D, 0xDF, 0x1C, 0xD6, 0xDB, 0xCE, 0x59, 0xBD, 0xB6, 0xA4, 0xF3, 0x94, 0x50, 0x83, 0xCE, 0x73, 0x2B, 0x62, 0xA9, 0x5A, 0x47, 0x49, 0xE5, 0x49, 0xE5, 0x4A, 0x05, 0x4A, 0x05, 0x52, 0x26, 0x52, 0x47, 0x5A, 0x67, 0x52, 0x67, 0x5A, 0x67, 0x5A, 0x67, 0x62, 0xCA, 0x62, 0xEB, 0x6B, 0x2C, 0x6B, 0x6E, 0x6B, 0xB0, 0x73, 0xF1, 0x74, 0x33, 0x7C, 0x75, 0x84, 0xB7, 0x8C, 0xF8, 0x95, 0x39, 
	0x9D, 0x7A, 0x9D, 0x9A, 0x9D, 0x79, 0x9D, 0x79, 0xA5, 0x79, 0xA5, 0x79, 0xA5, 0x79, 0xA5, 0x99, 0xAD, 0xB9, 0xAD, 0xDA, 0xAD, 0xDA, 0xB5, 0xDA, 0xB5, 0xDA, 0xB5, 0xFA, 0xBD, 0xFA, 0xBE, 0x1A, 0xC6, 0x3A, 0xC6, 0x5B, 0xC6, 0x7B, 0xCE, 0x7B, 0xCE, 0x9B, 0xCE, 0x9B, 0xD6, 0xBC, 0xD6, 0xBC, 0xD6, 0xBC, 0xD6, 0xBB, 0xD6, 0xBB, 0xCE, 0x9B, 0xCE, 0x9B, 0xCE, 0x9A, 0xD6, 0xBA, 0xD6, 0xDB, 0xD6, 0xDB, 0xDE, 
	0xDB, 0xDE, 0xFB, 0xDE, 0xFC, 0xDE, 0xFC, 0xDF, 0x1C, 0xE7, 0x1D, 0xE7, 0x3E, 0xE7, 0x5E, 0xEF, 0x7E, 0xEF, 0xBF, 0xF7, 0xDF, 0xF7, 0xBF, 0xEF, 0x9E, 0xE7, 0x5D, 0xDE, 0xDB, 0xC6, 0x18, 0xB5, 0x75, 0xA4, 0xB2, 0x8B, 0xEF, 0x73, 0x4C, 0x62, 0xC9, 0x52, 0x26, 0x49, 0xE5, 0x49, 0xE5, 0x49, 0xE5, 0x4A, 0x26, 0x52, 0x26, 0x52, 0x67, 0x52, 0x67, 0x5A, 0x67, 0x5A, 0x67, 0x63, 0x2D, 0x6B, 0x4E, 0x6B, 0x90, 
	0x73, 0xD1, 0x74, 0x12, 0x74, 0x33, 0x7C, 0x75, 0x7C, 0x96, 0x84, 0xD7, 0x8C, 0xF8, 0x8D, 0x19, 0x95, 0x59, 0x9D, 0x79, 0x9D, 0x79, 0x9D, 0x79, 0x9D, 0x78, 0xA5, 0x78, 0xA5, 0x79, 0xAD, 0x99, 0xAD, 0xB9, 0xB5, 0xDA, 0xB5, 0xDA, 0xB5, 0xDA, 0xB5, 0xDA, 0xB5, 0xFA, 0xBE, 0x1A, 0xBE, 0x3A, 0xC6, 0x5A, 0xC6, 0x5B, 0xC6, 0x7B, 0xCE, 0x7B, 0xCE, 0x7B, 0xCE, 0x9B, 0xCE, 0x9B, 0xCE, 0x9B, 0xD6, 0x9B, 0xCE, 
	0x9B, 0xCE, 0x9B, 0xCE, 0x9B, 0xCE, 0x9B, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0xDB, 0xDE, 0xFB, 0xDE, 0xFB, 0xDE, 0xFB, 0xDE, 0xFC, 0xDF, 0x1C, 0xDF, 0x1C, 0xDF, 0x1D, 0xE7, 0x3D, 0xE7, 0x3D, 0xE7, 0x5D, 0xEF, 0x7E, 0xEF, 0x9E, 0xEF, 0x9E, 0xEF, 0x9E, 0xEF, 0x7E, 0xE7, 0x3D, 0xDE, 0xDB, 0xCE, 0x59, 0xBD, 0xD7, 0xAD, 0x34, 0x9C, 0x71, 0x83, 0xCE, 0x6B, 0x0A, 0x5A, 0x88, 0x52, 0x46, 0x49, 0xE5, 0x4A, 0x05, 
	0x4A, 0x26, 0x52, 0x46, 0x52, 0x47, 0x5A, 0x47, 0x5A, 0x67, 0x63, 0x90, 0x6B, 0xB1, 0x6B, 0xF2, 0x74, 0x33, 0x74, 0x54, 0x7C, 0x75, 0x7C, 0x96, 0x7C, 0xB6, 0x84, 0xD7, 0x8C, 0xF8, 0x8D, 0x18, 0x95, 0x39, 0x9D, 0x58, 0x9D, 0x58, 0x9D, 0x58, 0x9D, 0x78, 0xA5, 0x78, 0xA5, 0x78, 0xAD, 0x99, 0xAD, 0xB9, 0xB5, 0xDA, 0xB5, 0xDA, 0xB5, 0xDA, 0xB5, 0xFA, 0xBE, 0x1A, 0xBE, 0x1A, 0xC6, 0x3A, 0xC6, 0x5A, 0xC6, 
	0x5B, 0xC6, 0x7B, 0xCE, 0x7B, 0xC6, 0x5A, 0xCE, 0x7B, 0xCE, 0x7B, 0xCE, 0x9B, 0xCE, 0x9B, 0xCE, 0x9B, 0xCE, 0x9B, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0xDB, 0xDE, 0xDB, 0xDE, 0xFB, 0xDE, 0xFC, 0xDE, 0xFC, 0xDE, 0xFC, 0xDF, 0x1C, 0xDF, 0x1D, 0xDF, 0x1D, 0xDF, 0x1D, 0xE7, 0x1D, 0xE7, 0x3D, 0xE7, 0x5D, 0xEF, 0x7E, 0xEF, 0x9E, 0xEF, 0x9E, 0xF7, 0x9E, 0xEF, 0x7E, 0xEF, 0x5D, 0xE7, 0x1C, 0xDE, 0xBB, 
	0xCE, 0x59, 0xB5, 0x75, 0x9C, 0xD2, 0x83, 0xCD, 0x6B, 0x0A, 0x5A, 0x88, 0x41, 0xE5, 0x4A, 0x05, 0x4A, 0x26, 0x4A, 0x26, 0x52, 0x46, 0x5A, 0x67, 0x5A, 0x67, 0x6B, 0xD3, 0x6C, 0x14, 0x74, 0x34, 0x74, 0x75, 0x74, 0x96, 0x7C, 0xB6, 0x7C, 0xD6, 0x84, 0xD6, 0x84, 0xD7, 0x8C, 0xF7, 0x8C, 0xF7, 0x95, 0x17, 0x95, 0x38, 0x9D, 0x38, 0x9D, 0x58, 0xA5, 0x58, 0xA5, 0x78, 0xAD, 0x98, 0xAD, 0xB9, 0xB5, 0xB9, 0xB5, 
	0xDA, 0xB5, 0xFA, 0xB5, 0xFA, 0xBD, 0xFA, 0xBE, 0x1A, 0xBE, 0x1A, 0xC6, 0x3A, 0xC6, 0x5A, 0xC6, 0x5B, 0xCE, 0x7B, 0xC6, 0x5A, 0xCE, 0x5A, 0xCE, 0x5B, 0xCE, 0x7B, 0xCE, 0x7B, 0xCE, 0x9B, 0xCE, 0x9B, 0xD6, 0xBC, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0xDB, 0xDE, 0xFB, 0xDE, 0xFC, 0xDF, 0x1C, 0xDF, 0x1C, 0xDF, 0x1C, 0xDF, 0x1C, 0xDF, 0x1D, 0xDF, 0x1D, 0xDF, 0x1C, 0xDF, 0x1C, 0xE7, 0x3D, 0xE7, 0x3D, 
	0xE7, 0x5D, 0xEF, 0x7E, 0xEF, 0x9E, 0xF7, 0xBF, 0xF7, 0xBF, 0xFF, 0xDF, 0xF7, 0xBF, 0xEF, 0x9E, 0xE7, 0x3D, 0xD6, 0x7A, 0xBD, 0xD6, 0x9C, 0xD2, 0x83, 0xEE, 0x6B, 0x2A, 0x4A, 0x47, 0x4A, 0x26, 0x4A, 0x26, 0x4A, 0x05, 0x52, 0x26, 0x5A, 0x47, 0x5A, 0x67, 0x6C, 0x15, 0x74, 0x35, 0x74, 0x56, 0x74, 0x76, 0x74, 0x96, 0x7C, 0xB6, 0x7C, 0xD6, 0x84, 0xD6, 0x84, 0xD6, 0x8C, 0xF7, 0x94, 0xF7, 0x95, 0x17, 0x9D, 
	0x17, 0x9D, 0x37, 0xA5, 0x58, 0xA5, 0x78, 0xAD, 0x78, 0xAD, 0x99, 0xB5, 0xB9, 0xB5, 0xD9, 0xB5, 0xFA, 0xB5, 0xFA, 0xBD, 0xFA, 0xBE, 0x1A, 0xBE, 0x1A, 0xBE, 0x3A, 0xC6, 0x5A, 0xC6, 0x5A, 0xC6, 0x5A, 0xC6, 0x5A, 0xC6, 0x5A, 0xCE, 0x5A, 0xCE, 0x5B, 0xCE, 0x7B, 0xCE, 0x7B, 0xCE, 0x9B, 0xCE, 0x9B, 0xD6, 0xBC, 0xD6, 0xBC, 0xD6, 0xBB, 0xD6, 0xBB, 0xDE, 0xDB, 0xDE, 0xFC, 0xDE, 0xFC, 0xDF, 0x1C, 0xDF, 0x1C, 
	0xDF, 0x1C, 0xDF, 0x1C, 0xDF, 0x1D, 0xDF, 0x1C, 0xDF, 0x1C, 0xDF, 0x1C, 0xE7, 0x1C, 0xE7, 0x3D, 0xE7, 0x3D, 0xE7, 0x5D, 0xEF, 0x7E, 0xF7, 0x9E, 0xF7, 0x9F, 0xF7, 0xBF, 0xF7, 0xBF, 0xEF, 0xBE, 0xEF, 0x9E, 0xE7, 0x1C, 0xD6, 0x99, 0xC5, 0xF7, 0xA5, 0x13, 0x8C, 0x2F, 0x6B, 0x2B, 0x5A, 0xC9, 0x52, 0x67, 0x4A, 0x05, 0x4A, 0x06, 0x52, 0x46, 0x5A, 0x47, 0x74, 0x56, 0x74, 0x76, 0x74, 0x76, 0x74, 0x76, 0x74, 
	0x96, 0x74, 0xB6, 0x7C, 0xB6, 0x84, 0xD6, 0x84, 0xD6, 0x8C, 0xD6, 0x94, 0xF7, 0x94, 0xF7, 0x9D, 0x17, 0x9D, 0x37, 0xA5, 0x57, 0xA5, 0x78, 0xAD, 0x78, 0xAD, 0x99, 0xB5, 0xD9, 0xB5, 0xD9, 0xB5, 0xFA, 0xBD, 0xFA, 0xBE, 0x1A, 0xBE, 0x1A, 0xBE, 0x3A, 0xC6, 0x5A, 0xC6, 0x5A, 0xC6, 0x5A, 0xC6, 0x5A, 0xC6, 0x5A, 0xC6, 0x5A, 0xCE, 0x5A, 0xCE, 0x5B, 0xCE, 0x7B, 0xCE, 0x7B, 0xCE, 0x9B, 0xCE, 0x9B, 0xD6, 0xBC, 
	0xD6, 0xBC, 0xD6, 0xBB, 0xD6, 0xBB, 0xDE, 0xDB, 0xDE, 0xFC, 0xDF, 0x1C, 0xDF, 0x1C, 0xDF, 0x1C, 0xDF, 0x1C, 0xDF, 0x1D, 0xDF, 0x3D, 0xDF, 0x1C, 0xE7, 0x1C, 0xDF, 0x1C, 0xDF, 0x1C, 0xDF, 0x1C, 0xE7, 0x3D, 0xE7, 0x3D, 0xEF, 0x5E, 0xEF, 0x7E, 0xEF, 0x9E, 0xEF, 0x9E, 0xEF, 0xBE, 0xF7, 0xBE, 0xF7, 0xBF, 0xEF, 0x9E, 0xE7, 0x5C, 0xDE, 0xFB, 0xC6, 0x17, 0xA5, 0x13, 0x84, 0x0E, 0x6B, 0x2B, 0x52, 0x88, 0x41, 
	0xE5, 0x4A, 0x06, 0x52, 0x26, 0x5A, 0x47, 0x74, 0x56, 0x74, 0x76, 0x74, 0x76, 0x74, 0x76, 0x74, 0x96, 0x7C, 0xB6, 0x7C, 0xB6, 0x84, 0xD6, 0x8C, 0xD6, 0x8C, 0xD6, 0x94, 0xD6, 0x94, 0xF6, 0x9D, 0x17, 0x9D, 0x37, 0xA5, 0x57, 0xA5, 0x78, 0xAD, 0x98, 0xAD, 0xB9, 0xB5, 0xB9, 0xB5, 0xD9, 0xBD, 0xFA, 0xBE, 0x1A, 0xBE, 0x1A, 0xBE, 0x3A, 0xBE, 0x3A, 0xC6, 0x5A, 0xC6, 0x5A, 0xC6, 0x5A, 0xC6, 0x5A, 0xC6, 0x5A, 
	0xC6, 0x5A, 0xC6, 0x5A, 0xCE, 0x7B, 0xCE, 0x7B, 0xCE, 0x7B, 0xCE, 0x9B, 0xCE, 0x9B, 0xD6, 0xBC, 0xD6, 0xBC, 0xD6, 0xDC, 0xD6, 0xDB, 0xDE, 0xDC, 0xDE, 0xFC, 0xDF, 0x1C, 0xDF, 0x1C, 0xDF, 0x1C, 0xDF, 0x1C, 0xDF, 0x3D, 0xDF, 0x3D, 0xE7, 0x3D, 0xE7, 0x1C, 0xDF, 0x1C, 0xDF, 0x1C, 0xDF, 0x1C, 0xE7, 0x1C, 0xE7, 0x3D, 0xE7, 0x5D, 0xEF, 0x5E, 0xEF, 0x7E, 0xEF, 0x7E, 0xEF, 0x9E, 0xF7, 0xBE, 0xF7, 0xDF, 0xF7, 
	0xDF, 0xF7, 0xBE, 0xF7, 0x9E, 0xDE, 0xDA, 0xC6, 0x17, 0xA5, 0x13, 0x83, 0xEE, 0x6B, 0x0A, 0x4A, 0x26, 0x52, 0x26, 0x52, 0x26, 0x52, 0x26, 0x74, 0x56, 0x7C, 0x76, 0x74, 0x76, 0x7C, 0x75, 0x7C, 0x95, 0x7C, 0xB5, 0x84, 0xB6, 0x84, 0xB5, 0x8C, 0xD6, 0x8C, 0xD6, 0x94, 0xD6, 0x94, 0xF6, 0x9D, 0x17, 0x9D, 0x17, 0xA5, 0x37, 0xA5, 0x57, 0xAD, 0x78, 0xB5, 0xB9, 0xB5, 0xD9, 0xB5, 0xD9, 0xBD, 0xFA, 0xBE, 0x1A, 
	0xBE, 0x3A, 0xBE, 0x3A, 0xC6, 0x5A, 0xC6, 0x7A, 0xC6, 0x7A, 0xC6, 0x5A, 0xC6, 0x5A, 0xC6, 0x3A, 0xC6, 0x5A, 0xC6, 0x5A, 0xCE, 0x5A, 0xCE, 0x7B, 0xCE, 0x7B, 0xCE, 0x9B, 0xD6, 0x9B, 0xD6, 0xBC, 0xD6, 0xBC, 0xD6, 0xDC, 0xDE, 0xDC, 0xDE, 0xFC, 0xDE, 0xFC, 0xDE, 0xFC, 0xDE, 0xFC, 0xDF, 0x1C, 0xDF, 0x1C, 0xDF, 0x1C, 0xDF, 0x1C, 0xDF, 0x1C, 0xDF, 0x1C, 0xDF, 0x1C, 0xDF, 0x1C, 0xDF, 0x1C, 0xE7, 0x1C, 0xE7, 
	0x3D, 0xE7, 0x3D, 0xE7, 0x5D, 0xE7, 0x5E, 0xEF, 0x7D, 0xEF, 0x7E, 0xEF, 0x9E, 0xEF, 0xBE, 0xF7, 0xBE, 0xF7, 0xBE, 0xF7, 0xDE, 0xE7, 0x5C, 0xDE, 0xBA, 0xC6, 0x37, 0xA4, 0xF2, 0x83, 0xED, 0x62, 0xC9, 0x5A, 0x67, 0x52, 0x26, 0x52, 0x05, 0x7C, 0x56, 0x7C, 0x75, 0x7C, 0x75, 0x7C, 0x75, 0x7C,	0x95, 0x7C, 0xB5, 0x84, 0xB5, 0x84, 0xB5, 0x8C, 0xB5, 0x8C, 0xD6, 0x94, 0xD6, 0x94, 0xD6, 0x9C, 0xF6, 0x9D, 0x16, 
	0x9D, 0x17, 0xA5, 0x57, 0xAD, 0x78, 0xB5, 0xB9, 0xB5, 0xD9, 0xB5, 0xD9, 0xBD, 0xF9, 0xBE, 0x1A, 0xBE, 0x3A, 0xC6, 0x5A, 0xC6, 0x7A, 0xC6, 0x7A, 0xC6, 0x7A, 0xC6, 0x5A, 0xC6, 0x5A, 0xC6, 0x3A, 0xC6, 0x3A, 0xC6, 0x5A, 0xCE, 0x5A, 0xCE, 0x7A, 0xCE, 0x7B, 0xCE, 0x9B, 0xD6, 0x9B, 0xD6, 0xBC, 0xD6, 0xBC, 0xDE, 0xDC, 0xDE, 0xFC, 0xDE, 0xFC, 0xDE, 0xFC, 0xDE, 0xFC, 0xDE, 0xFC, 0xDF, 0x1C, 0xDE, 0xFC, 0xDF, 
	0x1C, 0xDF, 0x1C, 0xDF, 0x1C, 0xDF, 0x1C, 0xDF, 0x1C, 0xDF, 0x1C, 0xDF, 0x1D, 0xE7, 0x1D, 0xE7, 0x3D, 0xE7, 0x3D, 0xE7, 0x5D, 0xE7, 0x5D, 0xE7, 0x5D, 0xE7, 0x7D, 0xE7, 0x7D, 0xEF, 0x7D, 0xEF, 0x9E, 0xF7, 0xBE, 0xFF, 0xDF, 0xF7, 0x9E, 0xEF, 0x7D, 0xE7, 0x1B, 0xBD, 0xB5, 0x94, 0x90, 0x73, 0x6B, 0x62, 0xC8, 0x52, 0x46, 0x49, 0xE5, 0x7C, 0x55, 0x7C, 0x75, 0x7C, 0x75, 0x7C, 0x95, 0x7C, 0x95, 0x84, 0xB5, 
	0x84, 0xD6, 0x8C, 0xD5, 0x8C, 0xD5, 0x94, 0xD6, 0x94, 0xD6, 0x94, 0xF6, 0x9C, 0xF6, 0x9D, 0x16, 0x9D, 0x16, 0xA5, 0x57, 0xAD, 0x78, 0xB5, 0xB9, 0xB5, 0xD9, 0xB5, 0xD9, 0xB6, 0x19, 0xBE, 0x1A, 0xBE, 0x3A, 0xC6, 0x5A, 0xC6, 0x7A, 0xC6, 0x7A, 0xC6, 0x7A, 0xC6, 0x5A, 0xC6, 0x3A, 0xC6, 0x3A, 0xC6, 0x5A, 0xC6, 0x5A, 0xCE, 0x5A, 0xCE, 0x7A, 0xCE, 0x7B, 0xCE, 0x9B, 0xCE, 0x9B, 0xD6, 0x9B, 0xD6, 0xBB, 0xDE, 
	0xDC, 0xDE, 0xDC, 0xDE, 0xFC, 0xDE, 0xFC, 0xDE, 0xFC, 0xDE, 0xFC, 0xDE, 0xFC, 0xDE, 0xFC, 0xDF, 0x1C, 0xDF, 0x1C, 0xDF, 0x1C, 0xDE, 0xFC, 0xDE, 0xFC, 0xDF, 0x1C, 0xE7, 0x1D, 0xE7, 0x1D, 0xE7, 0x3D, 0xE7, 0x3D, 0xE7, 0x3D, 0xE7, 0x5D, 0xE7, 0x5D, 0xE7, 0x5D, 0xE7, 0x5D, 0xE7, 0x5D, 0xEF, 0x7D, 0xEF, 0x9E, 0xF7, 0xBF, 0xF7, 0xBE, 0xF7, 0xBE, 0xF7, 0x9D, 0xCE, 0x78, 0xAD, 0x74, 0x8C, 0x4F, 0x73, 0x4B, 
	0x5A, 0x87, 0x49, 0xE5, 0x7C, 0x54, 0x7C, 0x54, 0x7C, 0x75, 0x7C, 0x95, 0x84, 0x95, 0x84, 0xB5, 0x8C, 0xD6, 0x8C, 0xD6, 0x94, 0xD6, 0x94, 0xD6, 0x94, 0xD6, 0x94, 0xF6, 0x9C, 0xF6, 0x9D, 0x16, 0x9D, 0x17, 0xA5, 0x57, 0xAD, 0x78, 0xAD, 0xB8, 0xB5, 0xD9, 0xB5, 0xD9, 0xB5, 0xF9, 0xBE, 0x19, 0xBE, 0x39, 0xC6, 0x5A, 0xC6, 0x5A, 0xC6, 0x5A, 0xC6, 0x5A, 0xC6, 0x5A, 0xC6, 0x5A, 0xC6, 0x3A, 0xC6, 0x5A, 0xC6, 
	0x5A, 0xCE, 0x7A, 0xCE, 0x7B, 0xCE, 0x9B, 0xCE, 0x9B, 0xCE, 0x9B, 0xCE, 0x9B, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0xDC, 0xD6, 0xDC, 0xDE, 0xFC, 0xDE, 0xFC, 0xDE, 0xFC, 0xDE, 0xFC, 0xDE, 0xFC, 0xDE, 0xFC, 0xDF, 0x1C, 0xDE, 0xFC, 0xDE, 0xFC, 0xDE, 0xFC, 0xDE, 0xFC, 0xDF, 0x1D, 0xE7, 0x3D, 0xE7, 0x3D, 0xE7, 0x3D, 0xE7, 0x3D, 0xE7, 0x3D, 0xE7, 0x5D, 0xE7, 0x5D, 0xE7, 0x5D, 0xE7, 0x5D, 0xEF, 0x5D, 0xEF, 0x7E, 
	0xEF, 0x9E, 0xF7, 0xBE, 0xF7, 0xBE, 0xF7, 0xDE, 0xDE, 0xFA, 0xC6, 0x57, 0xAD, 0x53, 0x84, 0x0D, 0x62, 0xE9, 0x4A, 0x05, 0x74, 0x34, 0x7C, 0x54, 0x7C, 0x75, 0x7C, 0x75, 0x84, 0x95, 0x84, 0xB5, 0x8C, 0xD6, 0x8C, 0xD6, 0x94, 0xF6, 0x94, 0xF6, 0x94, 0xF6, 0x94, 0xF6, 0x9C, 0xF6, 0x9D, 0x16, 0x9D, 0x17, 0xA5, 0x37, 0xA5, 0x77, 0xAD, 0x98, 0xB5, 0xD8, 0xB5, 0xD9, 0xB5, 0xF9, 0xBE, 0x19, 0xBE, 0x39, 0xC6, 
	0x5A, 0xC6, 0x5A, 0xC6, 0x3A, 0xC6, 0x5A, 0xC6, 0x3A, 0xC6, 0x3A, 0xC6, 0x3A, 0xC6, 0x5A, 0xC6, 0x5A, 0xCE, 0x5A, 0xCE, 0x7A, 0xCE, 0x9B, 0xCE, 0x9B, 0xCE, 0x9B, 0xCE, 0x9B, 0xCE, 0x9B, 0xD6, 0xBB, 0xD6, 0xDC, 0xD6, 0xDC, 0xDE, 0xFC, 0xDE, 0xFC, 0xDE, 0xFC, 0xDE, 0xFC, 0xDE, 0xFC, 0xDE, 0xFC, 0xDE, 0xFC, 0xDE, 0xFC, 0xDE, 0xFC, 0xDE, 0xFC, 0xDE, 0xFC, 0xDF, 0x1C, 0xE7, 0x3D, 0xE7, 0x3D, 0xE7, 0x3D, 
	0xE7, 0x3D, 0xE7, 0x3D, 0xE7, 0x5D, 0xE7, 0x3D, 0xE7, 0x3D, 0xE7, 0x3D, 0xE7, 0x3D, 0xE7, 0x5D, 0xEF, 0x5D, 0xEF, 0x9E, 0xF7, 0xBE, 0xFF, 0xFF, 0xEF, 0x7C, 0xDE, 0xFA, 0xC6, 0x37, 0x94, 0x90, 0x6B, 0x2A, 0x4A, 0x06, 0x74, 0x34, 0x7C, 0x54, 0x7C, 0x75, 0x84, 0x95, 0x84, 0x95, 0x84, 0xB6, 0x8C, 0xD6, 0x8C, 0xD6, 0x94, 0xF6, 0x94, 0xF7, 0x9C, 0xF6, 0x9C, 0xF6, 0x9C, 0xF6, 0x9D, 0x17, 0x9D, 0x17, 0xA5, 
	0x37, 0xA5, 0x77, 0xAD, 0x98, 0xAD, 0xB8, 0xB5, 0xD8, 0xB6, 0x19, 0xB6, 0x19, 0xBE, 0x39, 0xC6, 0x3A, 0xC6, 0x3A, 0xC6, 0x3A, 0xC6, 0x3A, 0xC6, 0x3A, 0xC6, 0x3A, 0xC6, 0x3A, 0xC6, 0x3A, 0xC6, 0x5A, 0xCE, 0x5A, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x9B, 0xCE, 0xBB, 0xD6, 0xDC, 0xD6, 0xDC, 0xDE, 0xFC, 0xDE, 0xFC, 0xDE, 0xFC, 0xDE, 0xFC, 0xDE, 0xFC, 0xDE, 0xFC, 0xDE, 0xFC, 
	0xDE, 0xFC, 0xDE, 0xFB, 0xD6, 0xDB, 0xDE, 0xFC, 0xDF, 0x1C, 0xE7, 0x3D, 0xE7, 0x3D, 0xE7, 0x3D, 0xE7, 0x3D, 0xE7, 0x3D, 0xE7, 0x3D, 0xE7, 0x3D, 0xE7, 0x3D, 0xE7, 0x3D, 0xE7, 0x3D, 0xE7, 0x5D, 0xEF, 0x5D, 0xEF, 0x7E, 0xF7, 0xBE, 0xFF, 0xFF, 0xEF, 0x9D, 0xE7, 0x5C, 0xD6, 0xD9, 0xA5, 0x32, 0x7B, 0xAC, 0x5A, 0x87, 0x74, 0x34, 0x7C, 0x54, 0x7C, 0x75, 0x84, 0x95, 0x84, 0xB6, 0x8C, 0xB6, 0x8C, 0xD6, 0x94, 
	0xD6, 0x94, 0xF6, 0x9D, 0x17, 0x9C, 0xF7, 0x9C, 0xF7, 0x9D, 0x17, 0x9D, 0x17, 0x9D, 0x37, 0xA5, 0x57, 0xA5, 0x77, 0xA5, 0x97, 0xAD, 0xB8, 0xAD, 0xD8, 0xB6, 0x19, 0xB6, 0x19, 0xBE, 0x19, 0xBE, 0x3A, 0xC6, 0x3A, 0xC6, 0x3A, 0xC6, 0x1A, 0xC6, 0x1A, 0xC6, 0x1A, 0xC6, 0x1A, 0xC6, 0x3A, 0xC6, 0x3A, 0xC6, 0x5A, 0xCE, 0x5A, 0xCE, 0x7A, 0xCE, 0x7A, 0xC6, 0x7A, 0xC6, 0x7A, 0xCE, 0x9B, 0xCE, 0xBB, 0xCE, 0xBC, 
	0xD6, 0xDC, 0xDE, 0xFD, 0xDE, 0xFD, 0xDE, 0xFC, 0xDF, 0x1C, 0xDF, 0x1C, 0xDF, 0x1C, 0xDE, 0xFC, 0xDE, 0xFB, 0xD6, 0xDB, 0xD6, 0xDB, 0xDE, 0xFC, 0xDF, 0x1C, 0xDF, 0x1C, 0xDF, 0x1C, 0xDF, 0x1C, 0xDF, 0x1C, 0xDF, 0x1C, 0xDF, 0x1C, 0xDF, 0x1C, 0xE7, 0x1C, 0xE7, 0x3D, 0xE7, 0x3D, 0xE7, 0x5D, 0xEF, 0x5D, 0xEF, 0x7E, 0xF7, 0xBE, 0xF7, 0xDF, 0xF7, 0xBE, 0xF7, 0xBE, 0xE7, 0x5C, 0xB5, 0x94, 0x8C, 0x2E, 0x62, 
	0xE9, 0x74, 0x34, 0x7C, 0x54, 0x7C, 0x95, 0x84, 0xB6, 0x84, 0xB6, 0x8C, 0xB6, 0x8C, 0xD6, 0x94, 0xD6, 0x94, 0xF6, 0x9D, 0x17, 0x9D, 0x17, 0x9C, 0xF6, 0x9D, 0x17, 0x9D, 0x17, 0x9D, 0x37, 0xA5, 0x57, 0xA5, 0x77, 0xA5, 0x77, 0xAD, 0xB8, 0xAD, 0xD8, 0xB6, 0x19, 0xB6, 0x19, 0xBE, 0x19, 0xBE, 0x19, 0xC6, 0x1A, 0xC6, 0x1A, 0xC6, 0x1A, 0xC6, 0x1A, 0xC6, 0x1A, 0xC6, 0x1A, 0xC6, 0x3A, 0xC6, 0x39, 0xC6, 0x5A, 
	0xC6, 0x5A, 0xC6, 0x7A, 0xC6, 0x7A, 0xC6, 0x7A, 0xC6, 0x7A, 0xCE, 0x7B, 0xCE, 0x9B, 0xCE, 0xBB, 0xD6, 0xDC, 0xD6, 0xFD, 0xDF, 0x1D, 0xDF, 0x1D, 0xDF, 0x1C, 0xDF, 0x1C, 0xDE, 0xFC, 0xDE, 0xFC, 0xDE, 0xFC, 0xD6, 0xDB, 0xD6, 0xDB, 0xD6, 0xDB, 0xDE, 0xFC, 0xDF, 0x1C, 0xDF, 0x1C, 0xDF, 0x1C, 0xDF, 0x1C, 0xDF, 0x1C, 0xDF, 0x1C, 0xDF, 0x1C, 0xDF, 0x1C, 0xE7, 0x3D, 0xE7, 0x3D, 0xE7, 0x5D, 0xEF, 0x5D, 0xEF, 
	0x7E, 0xEF, 0x9E, 0xF7, 0xDF, 0xF7, 0xDF, 0xFF, 0xFF, 0xF7, 0xBE, 0xC6, 0x16, 0x9C, 0xB0, 0x73, 0x4A, 0x7C, 0x54, 0x7C, 0x75, 0x84, 0x95, 0x84, 0xB6, 0x8C, 0xB6, 0x8C, 0xB5, 0x8C, 0xB5, 0x94, 0xD5, 0x94, 0xF6, 0x9C, 0xF6, 0x9C, 0xF6, 0x9C, 0xF6, 0x9C, 0xF6, 0x9D, 0x16, 0x9D, 0x37, 0xA5, 0x57, 0xA5, 0x57, 0xA5, 0x77, 0xAD, 0xB8, 0xAD, 0xB8, 0xB5, 0xF8, 0xB5, 0xF9, 0xBD, 0xF9, 0xBD, 0xF9, 0xBE, 0x19, 
	0xC5, 0xF9, 0xC5, 0xFA, 0xC5, 0xFA, 0xBD, 0xFA, 0xBD, 0xF9, 0xBE, 0x19, 0xBE, 0x19, 0xC6, 0x39, 0xC6, 0x59, 0xC6, 0x5A, 0xC6, 0x7A, 0xC6, 0x7A, 0xC6, 0x7A, 0xC6, 0x7A, 0xCE, 0x7A, 0xCE, 0x9B, 0xCE, 0xBB, 0xD6, 0xBB, 0xD6, 0xDC, 0xD6, 0xFC, 0xDE, 0xFC, 0xDF, 0x1C, 0xDF, 0x1C, 0xDF, 0x1C, 0xDE, 0xFC, 0xD6, 0xDB, 0xD6, 0xDB, 0xD6, 0xDB, 0xDE, 0xFC, 0xDF, 0x1C, 0xDF, 0x1C, 0xDE, 0xFC, 0xDE, 0xFC, 0xDE, 
	0xFC, 0xDF, 0x1C, 0xDF, 0x1C, 0xDF, 0x1C, 0xE7, 0x1D, 0xE7, 0x3D, 0xE7, 0x5D, 0xE7, 0x5D, 0xEF, 0x7E, 0xEF, 0x9E, 0xEF, 0x9E, 0xF7, 0xDF, 0xF7, 0xDF, 0xF7, 0xBE, 0xCE, 0x37, 0xA5, 0x12, 0x83, 0xCD, 0x7C, 0x74, 0x84, 0x95, 0x84, 0x96, 0x8C, 0xD6, 0x8C, 0xB6, 0x8C, 0xB5, 0x8C, 0xB5, 0x94, 0xD5, 0x94, 0xF6, 0x94, 0xF6, 0x9C, 0xF6, 0x9C, 0xF6, 0x9D, 0x16, 0x9D, 0x16, 0x9D, 0x36, 0x9D, 0x56, 0xA5, 0x77, 
	0xA5, 0x77, 0xAD, 0x97, 0xAD, 0xB8, 0xB5, 0xD8, 0xB5, 0xD8, 0xBD, 0xD8, 0xBD, 0xD9, 0xBD, 0xD9, 0xBD, 0xF9, 0xBD, 0xF9, 0xBD, 0xD9, 0xBD, 0xD9, 0xBD, 0xF9, 0xBD, 0xF9, 0xBD, 0xF9, 0xBE, 0x19, 0xC6, 0x39, 0xC6, 0x5A, 0xC6, 0x7A, 0xC6, 0x5A, 0xC6, 0x5A, 0xC6, 0x5A, 0xC6, 0x5A, 0xC6, 0x59, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x9A, 0xD6, 0xDB, 0xD6, 0xDB, 0xDE, 0xFC, 0xDF, 0x1C, 0xDF, 0x1C, 0xDF, 0x1C, 0xDE, 
	0xFB, 0xD6, 0xDB, 0xD6, 0xDB, 0xD6, 0xDB, 0xDE, 0xFC, 0xDE, 0xFC, 0xDE, 0xFC, 0xDE, 0xFC, 0xDE, 0xFC, 0xDE, 0xFC, 0xDE, 0xFC, 0xDF, 0x1C, 0xDF, 0x1C, 0xE7, 0x3D, 0xE7, 0x3D, 0xE7, 0x5D, 0xE7, 0x5D, 0xEF, 0x7E, 0xEF, 0x7E, 0xF7, 0xBF, 0xF7, 0xDF, 0xF7, 0xDE, 0xD6, 0x99, 0xB5, 0x94, 0x94, 0x4F, 0x84, 0x74, 0x84, 0x95, 0x84, 0xB6, 0x8C, 0xD6, 0x8C, 0xB6, 0x8C, 0xB5, 0x94, 0xB5, 0x94, 0xB5, 0x94, 0xD5, 
	0x94, 0xF6, 0x94, 0xF6, 0x9C, 0xF6, 0x9D, 0x16, 0x9D, 0x16, 0x9D, 0x36, 0x9D, 0x56, 0xA5, 0x56, 0xA5, 0x77, 0xAD, 0x97, 0xAD, 0xB7, 0xB5, 0xB8, 0xB5, 0xB8, 0xB5, 0xB8, 0xBD, 0xB8, 0xBD, 0xD9, 0xBD, 0xD9, 0xBD, 0xD9, 0xBD, 0xD9, 0xBD, 0xD9, 0xBD, 0xD9, 0xBD, 0xD9, 0xB5, 0xD9, 0xBD, 0xF9, 0xBE, 0x39, 0xC6, 0x5A, 0xC6, 0x5A, 0xC6, 0x59, 0xC6, 0x59, 0xC6, 0x39, 0xC6, 0x18, 0xC6, 0x18, 0xC6, 0x38, 0xC6, 
	0x39, 0xCE, 0x59, 0xCE, 0x9A, 0xD6, 0xBB, 0xD6, 0xDB, 0xDF, 0x1C, 0xE7, 0x3D, 0xDF, 0x1C, 0xDE, 0xFC, 0xD6, 0xDB, 0xD6, 0xDB, 0xD6, 0xDB, 0xDE, 0xFC, 0xD6, 0xDB, 0xD6, 0xDB, 0xD6, 0xDB, 0xD6, 0xDB, 0xDE, 0xFB, 0xDE, 0xFC, 0xDF, 0x1C, 0xDF, 0x1C, 0xE7, 0x3D, 0xE7, 0x5D, 0xE7, 0x5D, 0xE7, 0x5E, 0xE7, 0x5E, 0xE7, 0x5E, 0xEF, 0x9E, 0xF7, 0xDF, 0xFF, 0xDF, 0xDE, 0xDA, 0xC5, 0xD6, 0xA4, 0xD1, 0x84, 0x94, 
	0x84, 0x95, 0x8C, 0xB6, 0x8C, 0xD6, 0x8C, 0xD6, 0x8C, 0xD5, 0x94, 0xD5, 0x94, 0xD5, 0x94, 0xD5, 0x94, 0xF5, 0x94, 0xF5, 0x94, 0xF6, 0x9C, 0xF6, 0x9D, 0x16, 0x9D, 0x16, 0x9D, 0x36, 0xA5, 0x56, 0xA5, 0x77, 0xAD, 0x97, 0xAD, 0x97, 0xB5, 0xB8, 0xB5, 0x97, 0xB5, 0x97, 0xB5, 0x97, 0xBD, 0xB8, 0xBD, 0xB8, 0xBD, 0xD8, 0xBD, 0xD8, 0xBD, 0xD9, 0xBD, 0xD9, 0xB5, 0xD9, 0xB5, 0xD8, 0xB5, 0xF8, 0xBE, 0x19, 0xC6, 
	0x39, 0xC6, 0x39, 0xC6, 0x18, 0xC6, 0x18, 0xBD, 0xB7, 0xB5, 0x76, 0xAD, 0x55, 0xB5, 0x55, 0xB5, 0x75, 0xB5, 0x96, 0xBD, 0xF7, 0xC6, 0x59, 0xCE, 0x9A, 0xD6, 0xDB, 0xDF, 0x1C, 0xDF, 0x1C, 0xDE, 0xFC, 0xD6, 0xDB, 0xD6, 0xDB, 0xD6, 0xDB, 0xD6, 0xDB, 0xD6, 0xDB, 0xD6, 0xDB, 0xD6, 0xDB, 0xD6, 0xDB, 0xDE, 0xDB, 0xDE, 0xFC, 0xDE, 0xFC, 0xDF, 0x1C, 0xE7, 0x3C, 0xE7, 0x3D, 0xE7, 0x5D, 0xE7, 0x5D, 0xE7, 0x5E, 
	0xE7, 0x5E, 0xEF, 0x9E, 0xF7, 0xDF, 0xFF, 0xDF, 0xE6, 0xFB, 0xCE, 0x38, 0xAD, 0x33, 0x84, 0x94, 0x84, 0xB5, 0x8C, 0xB6, 0x8C, 0xD6, 0x94, 0xD6, 0x94, 0xD6, 0x94, 0xD5, 0x94, 0xD5, 0x94, 0xD5, 0x94, 0xD5, 0x94, 0xF5, 0x94, 0xF5, 0x94, 0xF5, 0x95, 0x15, 0x9D, 0x16, 0x9D, 0x36, 0xA5, 0x56, 0xA5, 0x77, 0xAD, 0x97, 0xAD, 0x97, 0xB5, 0x97, 0xAD, 0x97, 0xAD, 0x77, 0xB5, 0x77, 0xB5, 0x97, 0xB5, 0xB7, 0xBD, 
	0xB8, 0xBD, 0xD8, 0xB5, 0xD8, 0xB5, 0xD9, 0xB5, 0xD9, 0xB5, 0xB8, 0xB5, 0xD8, 0xBD, 0xF8, 0xBE, 0x18, 0xBE, 0x18, 0xBD, 0xD7, 0xBD, 0xD7, 0xB5, 0x55, 0xA4, 0xD3, 0x9C, 0x92, 0x9C, 0x92, 0x9C, 0xB2, 0xA4, 0xF3, 0xAD, 0x55, 0xBD, 0xD7, 0xC6, 0x38, 0xD6, 0x9A, 0xDF, 0x1B, 0xDF, 0x1C, 0xDE, 0xFC, 0xDE, 0xFB, 0xD6, 0xDB, 0xD6, 0xDB, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0xDB, 0xD6, 0xDB, 
	0xDE, 0xFC, 0xDE, 0xFC, 0xDF, 0x1C, 0xE7, 0x1D, 0xE7, 0x3D, 0xE7, 0x3D, 0xE7, 0x5D, 0xE7, 0x5D, 0xEF, 0x5E, 0xF7, 0x9E, 0xFF, 0xDF, 0xFF, 0xDF, 0xE7, 0x1C, 0xDE, 0x99, 0xBD, 0x95, 0x84, 0xB4, 0x8C, 0xB5, 0x8C, 0xD6, 0x94, 0xD6, 0x94, 0xF6, 0x94, 0xF6, 0x9C, 0xF6, 0x94, 0xF5, 0x94, 0xF5, 0x94, 0xD5, 0x94, 0xF5, 0x94, 0xD5, 0x94, 0xF5, 0x94, 0xF5, 0x9D, 0x15, 0x9D, 0x36, 0xA5, 0x56, 0xA5, 0x77, 0xAD, 
	0x76, 0xAD, 0x77, 0xAD, 0x76, 0xAD, 0x76, 0xAD, 0x76, 0xAD, 0x76, 0xB5, 0x97, 0xB5, 0x97, 0xB5, 0xB7, 0xBD, 0xD8, 0xB5, 0xD8, 0xB5, 0xD9, 0xB5, 0xD9, 0xB5, 0xB8, 0xB5, 0xD8, 0xBD, 0xD8, 0xBD, 0xF7, 0xBD, 0xB6, 0xB5, 0x95, 0xB5, 0x75, 0xA4, 0xB2, 0x94, 0x10, 0x83, 0xAF, 0x8B, 0xCF, 0x8B, 0xEF, 0x94, 0x50, 0x9C, 0xD2, 0xAD, 0x54, 0xBD, 0xD6, 0xCE, 0x58, 0xDE, 0xDA, 0xDE, 0xFB, 0xDE, 0xFB, 0xD6, 0xDB, 
	0xD6, 0xDB, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0xDB, 0xDE, 0xDB, 0xDE, 0xFC, 0xDE, 0xFC, 0xE7, 0x1C, 0xE7, 0x3D, 0xE7, 0x3D, 0xE7, 0x3D, 0xE7, 0x5D, 0xEF, 0x5D, 0xF7, 0x9E, 0xFF, 0xDF, 0xFF, 0xDF, 0xEF, 0x5C, 0xDE, 0xDA, 0xBD, 0xD6, 0x8C, 0xB5, 0x8C, 0xD5, 0x94, 0xD6, 0x94, 0xD6, 0x94, 0xF6, 0x9D, 0x16, 0x9D, 0x16, 0x9C, 0xF6, 0x94, 0xF6, 0x94, 0xF5, 0x94, 
	0xF5, 0x94, 0xF5, 0x94, 0xD5, 0x94, 0xF5, 0x9C, 0xF5, 0x9D, 0x36, 0xA5, 0x56, 0xA5, 0x56, 0xAD, 0x76, 0xAD, 0x76, 0xAD, 0x76, 0xAD, 0x56, 0xAD, 0x55, 0xAD, 0x56, 0xAD, 0x76, 0xB5, 0x96, 0xB5, 0xB7, 0xB5, 0xD8, 0xBD, 0xD8, 0xBD, 0xD8, 0xBD, 0xD9, 0xBD, 0xD8, 0xB5, 0xB8, 0xB5, 0xB7, 0xB5, 0x96, 0xAD, 0x54, 0xA4, 0xD2, 0x9C, 0x91, 0x8B, 0xCE, 0x73, 0x0C, 0x6A, 0xAA, 0x6A, 0xCB, 0x6A, 0xEC, 0x73, 0x4D, 
	0x83, 0xEF, 0x9C, 0xB2, 0xAD, 0x14, 0xBD, 0xB6, 0xCE, 0x38, 0xCE, 0x79, 0xD6, 0xBA, 0xDE, 0xDB, 0xD6, 0xDB, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0xBA, 0xD6, 0xBA, 0xD6, 0xBB, 0xD6, 0xBB, 0xDE, 0xDB, 0xDE, 0xFC, 0xDE, 0xFC, 0xDF, 0x1C, 0xE7, 0x1C, 0xE7, 0x3D, 0xE7, 0x3D, 0xE7, 0x3D, 0xEF, 0x5D, 0xF7, 0x9E, 0xFF, 0xBF, 0xFF, 0xDF, 0xEF, 0x7D, 0xDE, 0xFB, 0xC6, 0x17, 0x94, 0xD5, 0x94, 0xD5, 0x94, 
	0xD6, 0x94, 0xF6, 0x9C, 0xF6, 0x9D, 0x16, 0x9D, 0x37, 0x9D, 0x36, 0x9D, 0x16, 0x94, 0xF5, 0x94, 0xF5, 0x94, 0xF5, 0x94, 0xF5, 0x94, 0xF5, 0x9C, 0xF5, 0x9D, 0x16, 0xA5, 0x36, 0xA5, 0x56, 0xA5, 0x56, 0xA5, 0x56, 0xA5, 0x55, 0xA5, 0x55, 0xAD, 0x35, 0xAD, 0x55, 0xAD, 0x76, 0xAD, 0x96, 0xB5, 0xB7, 0xB5, 0xD8, 0xBD, 0xF8, 0xBD, 0xF8, 0xBD, 0xD8, 0xBD, 0xD8, 0xBD, 0xB7, 0xB5, 0x75, 0xAD, 0x34, 0xA4, 0xB1, 
	0x94, 0x2F, 0x83, 0xAD, 0x72, 0xCA, 0x52, 0x08, 0x49, 0xA6, 0x49, 0xC7, 0x49, 0xE8, 0x52, 0x49, 0x6B, 0x2C, 0x83, 0xEF, 0x94, 0x71, 0xA5, 0x13, 0xBD, 0xB5, 0xC6, 0x17, 0xCE, 0x79, 0xDE, 0xDB, 0xD6, 0xDB, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0x9B, 0xD6, 0x9A, 0xD6, 0x9A, 0xD6, 0x9B, 0xD6, 0x9B, 0xDE, 0xBB, 0xDE, 0xDB, 0xDE, 0xFC, 0xDF, 0x1C, 0xE7, 0x1C, 0xE7, 0x3D, 0xE7, 0x3D, 0xEF, 0x3D, 0xEF, 0x5D, 0xF7, 
	0x9E, 0xFF, 0xBF, 0xFF, 0xFF, 0xEF, 0x7D, 0xDF, 0x3B, 0xC6, 0x58, 0x94, 0xF5, 0x94, 0xF6, 0x94, 0xF6, 0x9D, 0x17, 0x9D, 0x17, 0xA5, 0x37, 0xA5, 0x57, 0xA5, 0x37, 0x9D, 0x36, 0x9D, 0x16, 0x9D, 0x16, 0x94, 0xF5, 0x9C, 0xF5, 0x9D, 0x16, 0x9D, 0x16, 0x9D, 0x36, 0xA5, 0x36, 0xA5, 0x56, 0xA5, 0x56, 0xA5, 0x55, 0xA5, 0x35, 0xA5, 0x35, 0xA5, 0x35, 0xA5, 0x35, 0xAD, 0x55, 0xAD, 0x76, 0xB5, 0x96, 0xB5, 0xB7, 
	0xBD, 0xD8, 0xBD, 0xF8, 0xC5, 0xF8, 0xC5, 0xF8, 0xBD, 0x96, 0xB5, 0x34, 0xAC, 0xD2, 0x9C, 0x2F, 0x83, 0x6C, 0x72, 0xEA, 0x5A, 0x28, 0x41, 0x65, 0x31, 0x04, 0x31, 0x25, 0x31, 0x66, 0x39, 0xC7, 0x52, 0x8A, 0x6B, 0x4D, 0x83, 0xEE, 0x94, 0x71, 0xAD, 0x13, 0xB5, 0x95, 0xC6, 0x18, 0xD6, 0xBA, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0x9A, 0xD6, 0x9A, 0xD6, 0x9A, 0xD6, 0x9A, 0xD6, 0x9B, 0xD6, 0xBB, 0xDE, 
	0xDB, 0xDE, 0xDC, 0xDE, 0xFC, 0xE7, 0x1C, 0xE7, 0x1C, 0xE7, 0x3D, 0xEF, 0x3D, 0xEF, 0x5D, 0xF7, 0x9E, 0xF7, 0xBF, 0xFF, 0xDF, 0xEF, 0x7D, 0xDF, 0x3C, 0xC6, 0x78, 0x9D, 0x16, 0x9D, 0x16, 0x9D, 0x37, 0xA5, 0x37, 0xA5, 0x57, 0xA5, 0x78, 0xAD, 0x78, 0xA5, 0x77, 0xA5, 0x77, 0xA5, 0x56, 0xA5, 0x56, 0x9D, 0x36, 0x9D, 0x36, 0x9D, 0x36, 0xA5, 0x36, 0xA5, 0x56, 0xA5, 0x56, 0xAD, 0x76, 0xAD, 0x56, 0xA5, 0x55, 
	0xA5, 0x35, 0xA5, 0x35, 0xA5, 0x35, 0xA5, 0x35, 0xA5, 0x55, 0xAD, 0x76, 0xAD, 0x76, 0xB5, 0xB7, 0xB5, 0xD8, 0xBD, 0xF8, 0xC5, 0xD8, 0xC5, 0xF7, 0xBD, 0x95, 0xB4, 0xF2, 0xA4, 0x70, 0x8B, 0x8C, 0x6A, 0xA9, 0x51, 0xE6, 0x41, 0x44, 0x28, 0xC3, 0x18, 0x82, 0x18, 0xA3, 0x20, 0xC4, 0x29, 0x25, 0x39, 0xC7, 0x52, 0x8A, 0x63, 0x0B, 0x7B, 0xAD, 0x94, 0x50, 0xA4, 0xF2, 0xBD, 0xB6, 0xCE, 0x59, 0xCE, 0x7A, 0xD6, 
	0x9A, 0xD6, 0xBB, 0xD6, 0x9A, 0xD6, 0x9A, 0xCE, 0x7A, 0xD6, 0x9A, 0xD6, 0x9B, 0xD6, 0xBB, 0xDE, 0xBB, 0xDE, 0xDB, 0xDE, 0xFC, 0xDE, 0xFC, 0xE7, 0x1C, 0xE7, 0x1D, 0xEF, 0x3D, 0xEF, 0x3D, 0xEF, 0x7E, 0xF7, 0xBF, 0xFF, 0xDF, 0xEF, 0x9D, 0xDF, 0x3C, 0xC6, 0x58, 0x9D, 0x36, 0xA5, 0x37, 0xA5, 0x57, 0xA5, 0x58, 0xAD, 0x78, 0xAD, 0x98, 0xAD, 0xB8, 0xAD, 0xB8, 0xAD, 0x98, 0xA5, 0x77, 0xA5, 0x77, 0xA5, 0x77, 
	0xA5, 0x57, 0xA5, 0x57, 0xAD, 0x57, 0xAD, 0x56, 0xAD, 0x76, 0xAD, 0x96, 0xAD, 0x76, 0xA5, 0x55, 0xA5, 0x35, 0xA5, 0x35, 0xA5, 0x15, 0xA5, 0x14, 0xA5, 0x35, 0xA5, 0x35, 0xA5, 0x56, 0xAD, 0x97, 0xB5, 0xD7, 0xBD, 0xD8, 0xC5, 0xF7, 0xCD, 0xF7, 0xC5, 0x74, 0xAC, 0x90, 0x9B, 0xEE, 0x7A, 0xE9, 0x51, 0xC6, 0x30, 0xE2, 0x20, 0x81, 0x10, 0x41, 0x08, 0x00, 0x08, 0x21, 0x08, 0x42, 0x10, 0x83, 0x21, 0x25, 0x39, 
	0xC7, 0x4A, 0x48, 0x62, 0xEB, 0x7B, 0x8D, 0x94, 0x50, 0xAD, 0x34, 0xC6, 0x18, 0xCE, 0x39, 0xD6, 0x7A, 0xD6, 0xBB, 0xD6, 0x9A, 0xCE, 0x7A, 0xCE, 0x5A, 0xD6, 0x7A, 0xD6, 0x9A, 0xD6, 0x9B, 0xD6, 0xBB, 0xD6, 0xBB, 0xDE, 0xDB, 0xDE, 0xDC, 0xE6, 0xFC, 0xE7, 0x1C, 0xE7, 0x1D, 0xE7, 0x3D, 0xF7, 0x7E, 0xF7, 0xBF, 0xFF, 0xDF, 0xEF, 0x7D, 0xDF, 0x1B, 0xC6, 0x58, 0xA5, 0x57, 0xA5, 0x57, 0xA5, 0x78, 0xAD, 0x98, 
	0xAD, 0x98, 0xAD, 0xB8, 0xB5, 0xD9, 0xAD, 0xD8, 0xAD, 0xB8, 0xAD, 0xB8, 0xAD, 0xB8, 0xAD, 0x97, 0xAD, 0x97, 0xAD, 0x97, 0xAD, 0x97, 0xB5, 0x97, 0xB5, 0x97, 0xB5, 0x97, 0xAD, 0x96, 0xAD, 0x76, 0xA5, 0x55, 0xA5, 0x35, 0xA5, 0x35, 0xA5, 0x35, 0xA5, 0x35, 0xA5, 0x55, 0xAD, 0x76, 0xAD, 0x97, 0xB5, 0xB7, 0xBD, 0xD7, 0xC5, 0xD7, 0xCD, 0xD6, 0xC5, 0x53, 0xAC, 0x6F, 0x9B, 0xCD, 0x72, 0x88, 0x49, 0x64, 0x20, 
	0x81, 0x18, 0x41, 0x08, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0x08, 0x62, 0x18, 0xC3, 0x29, 0x45, 0x39, 0xC7, 0x52, 0x69, 0x6B, 0x2B, 0x83, 0xCE, 0xA4, 0xD2, 0xBD, 0xB6, 0xC5, 0xF8, 0xCE, 0x59, 0xD6, 0x9A, 0xD6, 0x9A, 0xCE, 0x7A, 0xCE, 0x5A, 0xCE, 0x7A, 0xD6, 0x9A, 0xD6, 0x9B, 0xD6, 0x9B, 0xD6, 0xBB, 0xDE, 0xDB, 0xDE, 0xDB, 0xDE, 0xFC, 0xE6, 0xFC, 0xE7, 0x1C, 0xE7, 0x1D, 0xEF, 0x7E, 0xF7, 0x9F, 
	0xFF, 0xDF, 0xEF, 0x7D, 0xDF, 0x1B, 0xC6, 0x38, 0xA5, 0x57, 0xA5, 0x77, 0xA5, 0x78, 0xAD, 0x98, 0xAD, 0xB8, 0xB5, 0xD9, 0xB5, 0xF9, 0xB5, 0xF9, 0xB5, 0xF9, 0xB5, 0xF9, 0xB5, 0xF9, 0xB5, 0xD8, 0xB5, 0xD8, 0xB5, 0xD8, 0xB5, 0xB8, 0xB5, 0xB8, 0xB5, 0xB7, 0xB5, 0xB7, 0xB5, 0x97, 0xB5, 0x96, 0xAD, 0x76, 0xAD, 0x55, 0xA5, 0x55, 0xA5, 0x55, 0xA5, 0x55, 0xAD, 0x56, 0xAD, 0x76, 0xB5, 0x97, 0xB5, 0xB7, 0xBD, 
	0xD7, 0xC5, 0xD6, 0xCD, 0xD6, 0xC5, 0x53, 0xAC, 0x4F, 0x93, 0x8C, 0x6A, 0x68, 0x41, 0x44, 0x18, 0x40, 0x10, 0x20, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x21, 0x10, 0x82, 0x18, 0xC3, 0x29, 0x24, 0x49, 0xE7, 0x62, 0xAA, 0x7B, 0x6D, 0x9C, 0x51, 0xB5, 0x55, 0xBD, 0xB6, 0xCE, 0x38, 0xD6, 0x9A, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x5A, 0xCE, 0x7A, 0xCE, 0x7A, 0xD6, 0x9A, 0xD6, 0x9A, 0xD6, 0x9B, 
	0xD6, 0xBB, 0xDE, 0xDB, 0xDE, 0xFC, 0xE6, 0xFC, 0xE7, 0x1C, 0xE7, 0x1D, 0xEF, 0x5E, 0xF7, 0x9E, 0xF7, 0xDF, 0xEF, 0x5D, 0xDE, 0xFB, 0xBE, 0x37, 0xA5, 0x77, 0xA5, 0x77, 0xAD, 0x98, 0xAD, 0xB8, 0xB5, 0xD9, 0xB5, 0xF9, 0xBE, 0x19, 0xBE, 0x19, 0xBE, 0x19, 0xBE, 0x3A, 0xBE, 0x19, 0xBE, 0x19, 0xBE, 0x19, 0xBD, 0xF9, 0xBD, 0xF9, 0xBD, 0xF8, 0xBD, 0xD8, 0xBD, 0xD8, 0xBD, 0xB7, 0xB5, 0xB7, 0xB5, 0x96, 0xAD, 
	0x96, 0xAD, 0x76, 0xAD, 0x76, 0xAD, 0x76, 0xAD, 0x76, 0xAD, 0x77, 0xB5, 0x97, 0xB5, 0x97, 0xBD, 0xB7, 0xC5, 0xD6, 0xCD, 0xD6, 0xC5, 0x33, 0xAC, 0x4F, 0x93, 0x6C, 0x6A, 0x47, 0x31, 0x03, 0x08, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x08, 0x20, 0x18, 0xA2, 0x39, 0x65, 0x52, 0x28, 0x72, 0xEB, 0x8B, 0xEF, 0xAC, 0xF3, 0xB5, 0x75, 0xC5, 0xF8, 0xCE, 0x7A, 
	0xCE, 0x7A, 0xCE, 0x59, 0xCE, 0x59, 0xCE, 0x5A, 0xCE, 0x7A, 0xCE, 0x7A, 0xD6, 0x9A, 0xD6, 0x9A, 0xD6, 0xBB, 0xDE, 0xDB, 0xDE, 0xDC, 0xE6, 0xFC, 0xE6, 0xFC, 0xE7, 0x1D, 0xEF, 0x5E, 0xF7, 0x9E, 0xF7, 0xDF, 0xE7, 0x5D, 0xDE, 0xFB, 0xBE, 0x17, 0xAD, 0x78, 0xAD, 0x98, 0xAD, 0x98, 0xAD, 0x98, 0xAD, 0xB8, 0xB5, 0xD9, 0xBD, 0xF9, 0xBE, 0x19, 0xBE, 0x39, 0xBE, 0x3A, 0xBE, 0x39, 0xC6, 0x39, 0xC6, 0x39, 0xC6, 
	0x19, 0xC6, 0x19, 0xC5, 0xF8, 0xBD, 0xF8, 0xBD, 0xD8, 0xBD, 0xD7, 0xB5, 0xB7, 0xB5, 0xB7, 0xB5, 0xB7, 0xAD, 0x96, 0xAD, 0x96, 0xAD, 0x97, 0xAD, 0x97, 0xB5, 0xB7, 0xB5, 0xB7, 0xBD, 0xD7, 0xC5, 0xD7, 0xCD, 0xF7, 0xCD, 0xF6, 0xC5, 0x73, 0xB4, 0x90, 0x9B, 0xEE, 0x72, 0xA9, 0x41, 0x64, 0x18, 0x61, 0x10, 0x40, 0x08, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x08, 0x20, 0x18, 0x82, 
	0x39, 0x65, 0x5A, 0x48, 0x72, 0xEB, 0x8B, 0xCE, 0xA4, 0xB2, 0xB5, 0x34, 0xC5, 0xD7, 0xCE, 0x59, 0xCE, 0x59, 0xCE, 0x39, 0xC6, 0x39, 0xCE, 0x59, 0xCE, 0x59, 0xCE, 0x7A, 0xCE, 0x7A, 0xD6, 0x9A, 0xD6, 0xBA, 0xD6, 0xBB, 0xDE, 0xDB, 0xDE, 0xFC, 0xDE, 0xFC, 0xE7, 0x1C, 0xEF, 0x5E, 0xF7, 0x9E, 0xF7, 0xDF, 0xE7, 0x5C, 0xD6, 0xDA, 0xBD, 0xF7, 0xAD, 0x98, 0xAD, 0x98, 0xAD, 0x98, 0xAD, 0x98, 0xAD, 0xB8, 0xB5, 
	0xD8, 0xBD, 0xF9, 0xBE, 0x19, 0xBE, 0x39, 0xC6, 0x5A, 0xC6, 0x3A, 0xC6, 0x5A, 0xC6, 0x3A, 0xC6, 0x39, 0xC6, 0x19, 0xC6, 0x19, 0xC5, 0xF8, 0xBD, 0xF8, 0xBD, 0xD7, 0xBD, 0xD7, 0xB5, 0xD7, 0xB5, 0xD7, 0xB5, 0xD7, 0xB5, 0xD7, 0xB5, 0xD8, 0xB5, 0xD8, 0xBD, 0xF8, 0xBD, 0xF8, 0xBD, 0xF8, 0xC5, 0xF8, 0xCE, 0x17, 0xD6, 0x17, 0xCD, 0xB5, 0xBD, 0x12, 0xAC, 0x70, 0x83, 0x4B, 0x51, 0xE6, 0x28, 0xE3, 0x20, 0x82, 
	0x10, 0x41, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x08, 0x20, 0x18, 0xA2, 0x39, 0x85, 0x5A, 0x48, 0x72, 0xEB, 0x8B, 0xAE, 0xA4, 0x91, 0xAD, 0x13, 0xBD, 0xB6, 0xC6, 0x38, 0xC6, 0x38, 0xC6, 0x18, 0xC6, 0x18, 0xC6, 0x39, 0xCE, 0x39, 0xCE, 0x59, 0xCE, 0x79, 0xCE, 0x7A, 0xD6, 0x9A, 0xD6, 0xBA, 0xD6, 0xBB, 0xDE, 0xFB, 0xDE, 0xFC, 0xE7, 0x1C, 0xEF, 0x5D, 0xF7, 0x9E, 0xF7, 0xDF, 0xE7, 
	0x3C, 0xD6, 0xDA, 0xBD, 0xF6, 0xB5, 0xB9, 0xB5, 0xB8, 0xAD, 0x98, 0xAD, 0x78, 0xAD, 0x98, 0xB5, 0xD8, 0xBD, 0xF9, 0xBE, 0x19, 0xC6, 0x39, 0xC6, 0x5A, 0xC6, 0x5A, 0xC6, 0x5A, 0xC6, 0x5A, 0xC6, 0x59, 0xC6, 0x39, 0xC6, 0x19, 0xC6, 0x18, 0xBD, 0xF8, 0xBD, 0xF8, 0xBD, 0xF8, 0xBD, 0xD7, 0xBD, 0xF8, 0xBD, 0xF8, 0xBE, 0x18, 0xBE, 0x19, 0xBE, 0x19, 0xBE, 0x19, 0xC6, 0x19, 0xC6, 0x19, 0xCE, 0x38, 0xCE, 0x38, 
	0xD6, 0x37, 0xCD, 0xF6, 0xC5, 0x74, 0xBD, 0x12, 0x93, 0xED, 0x6A, 0x89, 0x41, 0x85, 0x31, 0x03, 0x18, 0x82, 0x10, 0x20, 0x08, 0x20, 0x08, 0x00, 0x08, 0x20, 0x08, 0x40, 0x10, 0x40, 0x20, 0xC2, 0x41, 0x85, 0x62, 0x48, 0x72, 0xEB, 0x8B, 0x8D, 0x9C, 0x50, 0xAC, 0xD3, 0xBD, 0x75, 0xC6, 0x18, 0xC6, 0x18, 0xC5, 0xF8, 0xC6, 0x18, 0xC6, 0x18, 0xC6, 0x38, 0xCE, 0x39, 0xCE, 0x59, 0xCE, 0x7A, 0xD6, 0x7A, 0xD6, 
	0x9A, 0xD6, 0xBB, 0xDE, 0xDB, 0xDE, 0xFB, 0xE7, 0x1C, 0xEF, 0x5D, 0xF7, 0x9E, 0xFF, 0xDF, 0xE7, 0x3C, 0xD6, 0xBA, 0xB5, 0xB6, 0xB5, 0xD9, 0xB5, 0xB9, 0xB5, 0xB8, 0xAD, 0x98, 0xB5, 0x98, 0xB5, 0xB8, 0xB5, 0xD8, 0xBD, 0xF9, 0xBE, 0x19, 0xC6, 0x39, 0xC6, 0x5A, 0xC6, 0x5A, 0xC6, 0x5A, 0xC6, 0x59, 0xC6, 0x39, 0xC6, 0x39, 0xBE, 0x18, 0xBD, 0xF8, 0xBD, 0xF8, 0xBD, 0xF8, 0xBD, 0xD7, 0xBD, 0xF8, 0xBD, 0xF8, 
	0xBE, 0x19, 0xC6, 0x39, 0xC6, 0x39, 0xC6, 0x39, 0xC6, 0x39, 0xC6, 0x59, 0xCE, 0x59, 0xCE, 0x58, 0xD6, 0x58, 0xCE, 0x17, 0xCD, 0xD5, 0xC5, 0x94, 0xAC, 0xB0, 0x83, 0x8C, 0x6A, 0xA9, 0x51, 0xE7, 0x39, 0x44, 0x28, 0xE3, 0x20, 0xC2, 0x20, 0xA2, 0x18, 0xA2, 0x20, 0xC2, 0x21, 0x03, 0x31, 0x44, 0x49, 0xE7, 0x6A, 0x89, 0x7B, 0x0B, 0x93, 0xAE, 0xA4, 0x51, 0xAC, 0xD3, 0xBD, 0x75, 0xC5, 0xF7, 0xC5, 0xF7, 0xC5, 
	0xF7, 0xC5, 0xF8, 0xC5, 0xF8, 0xC6, 0x18, 0xC6, 0x38, 0xCE, 0x39, 0xCE, 0x59, 0xD6, 0x7A, 0xD6, 0x9A, 0xD6, 0xBA, 0xD6, 0xBB, 0xDE, 0xDB, 0xDE, 0xFC, 0xEF, 0x5D, 0xF7, 0x9E, 0xF7, 0xBF, 0xE7, 0x3C, 0xD6, 0x99, 0xB5, 0x95, 0xB5, 0xD9, 0xB5, 0xD9, 0xB5, 0xB9, 0xB5, 0x98, 0xB5, 0x98, 0xB5, 0xB8, 0xB5, 0xB8, 0xBD, 0xF8, 0xC6, 0x19, 0xC6, 0x39, 0xC6, 0x39, 0xC6, 0x59, 0xC6, 0x59, 0xC6, 0x59, 0xC6, 0x39, 
	0xC6, 0x39, 0xBE, 0x18, 0xBD, 0xF8, 0xBD, 0xF8, 0xBD, 0xF8, 0xBD, 0xD8, 0xBD, 0xF8, 0xBE, 0x19, 0xC6, 0x39, 0xC6, 0x39, 0xC6, 0x5A, 0xC6, 0x5A, 0xCE, 0x5A, 0xCE, 0x7A, 0xCE, 0x79, 0xCE, 0x79, 0xD6, 0x79, 0xD6, 0x78, 0xD6, 0x57, 0xD6, 0x37, 0xBD, 0x73, 0xA4, 0xB0, 0x93, 0xED, 0x73, 0x0A, 0x5A, 0x27, 0x49, 0xA5, 0x41, 0x85, 0x39, 0x44, 0x31, 0x44, 0x39, 0x84, 0x41, 0xC5, 0x4A, 0x06, 0x62, 0x68, 0x72, 
	0xC9, 0x83, 0x2B, 0x93, 0xAE, 0xA4, 0x51, 0xAC, 0xD3, 0xB5, 0x55, 0xBD, 0xD7, 0xBD, 0xD7, 0xBD, 0xD7, 0xBD, 0xF7, 0xC5, 0xF7, 0xC5, 0xF8, 0xC6, 0x18, 0xCE, 0x38, 0xCE, 0x59, 0xD6, 0x79, 0xD6, 0x9A, 0xD6, 0x9A, 0xD6, 0xBA, 0xDE, 0xDB, 0xDE, 0xFB, 0xEF, 0x5D, 0xF7, 0x9E, 0xFF, 0xDF, 0xE7, 0x1C, 0xCE, 0x79, 0xAD, 0x75, 0xBD, 0xF9, 0xBD, 0xD9, 0xB5, 0xD9, 0xB5, 0xB8, 0xB5, 0xB8, 0xB5, 0xB8, 0xB5, 0xB8, 
	0xBD, 0xD8, 0xBE, 0x19, 0xC6, 0x39, 0xC6, 0x39, 0xC6, 0x59, 0xC6, 0x59, 0xC6, 0x39, 0xC6, 0x39, 0xC6, 0x39, 0xBE, 0x18, 0xBD, 0xF8, 0xBD, 0xF8, 0xBD, 0xF8, 0xBD, 0xF8, 0xBE, 0x18, 0xC6, 0x39, 0xC6, 0x39, 0xC6, 0x59, 0xCE, 0x5A, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x9A, 0xCE, 0x99, 0xD6, 0x99, 0xD6, 0x99, 0xD6, 0xB9, 0xDE, 0xB8, 0xCE, 0x36, 0xBD, 0x94, 0xB5, 0x12, 0x9C, 0x2F, 0x7B, 0x2B, 0x6A, 
	0xA9, 0x62, 0x68, 0x5A, 0x27, 0x52, 0x27, 0x5A, 0x67, 0x5A, 0xA8, 0x62, 0xC9, 0x72, 0xE9, 0x7B, 0x2A, 0x8B, 0x6C, 0x93, 0xCE, 0xA4, 0x51, 0xAC, 0xD2, 0xB5, 0x54, 0xBD, 0xB7, 0xBD, 0xD7, 0xBD, 0xD7, 0xBD, 0xD7, 0xBD, 0xF7, 0xC5, 0xF7, 0xC6, 0x18, 0xCE, 0x38, 0xCE, 0x59, 0xCE, 0x79, 0xD6, 0x79, 0xD6, 0x9A, 0xD6, 0x9A, 0xD6, 0xBA, 0xDE, 0xDB, 0xE7, 0x3C, 0xF7, 0x9E, 0xFF, 0xDF, 0xE7, 0x1B, 0xCE, 0x79, 
	0xAD, 0x74, 0xBD, 0xD9, 0xBD, 0xD9, 0xB5, 0xD9, 0xB5, 0xD9, 0xB5, 0xD9, 0xB5, 0xD8, 0xB5, 0xB8, 0xBD, 0xF8, 0xBE, 0x19, 0xC6, 0x39, 0xC6, 0x39, 0xC6, 0x39, 0xC6, 0x39, 0xC6, 0x39, 0xC6, 0x39, 0xBE, 0x18, 0xBE, 0x18, 0xBD, 0xF8, 0xBD, 0xF8, 0xBD, 0xF8, 0xBD, 0xF8, 0xBE, 0x18, 0xC6, 0x19, 0xC6, 0x39, 0xC6, 0x39, 0xC6, 0x59, 0xCE, 0x5A, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x99, 0xCE, 0x99, 0xCE, 0x79, 0xD6, 
	0x99, 0xD6, 0xB9, 0xDE, 0xD9, 0xD6, 0x77, 0xCE, 0x15, 0xC5, 0xB4, 0xB4, 0xF1, 0x9C, 0x2F, 0x8B, 0xAD, 0x8B, 0x6C, 0x7B, 0x4B, 0x7B, 0x4A, 0x7B, 0x6A, 0x7B, 0x6B, 0x7B, 0x8B, 0x83, 0x6B, 0x8B, 0x8C, 0x93, 0xAD, 0x9C, 0x0F, 0xA4, 0x71, 0xAC, 0xD3, 0xB5, 0x55, 0xBD, 0xB7, 0xBD, 0xD7, 0xBD, 0xF7, 0xC5, 0xF8, 0xC5, 0xF8, 0xC5, 0xF8, 0xC6, 0x18, 0xC6, 0x38, 0xCE, 0x59, 0xCE, 0x79, 0xCE, 0x79, 0xD6, 0x9A, 
	0xD6, 0x9A, 0xD6, 0xBA, 0xDE, 0xDB, 0xE7, 0x3C, 0xF7, 0x9E, 0xFF, 0xDF, 0xE7, 0x1B, 0xCE, 0x79, 0xAD, 0x74, 0xBD, 0xD9, 0xBD, 0xD9, 0xBD, 0xF9, 0xBD, 0xF9, 0xBD, 0xF9, 0xBD, 0xD9, 0xBD, 0xD8, 0xBD, 0xF8, 0xBE, 0x19, 0xC6, 0x39, 0xC6, 0x39, 0xC6, 0x39, 0xC6, 0x39, 0xC6, 0x39, 0xC6, 0x39, 0xC6, 0x19, 0xBE, 0x18, 0xBE, 0x18, 0xBD, 0xF8, 0xBD, 0xF8, 0xBD, 0xF8, 0xBE, 0x18, 0xC6, 0x19, 0xC6, 0x39, 0xC6, 
	0x39, 0xC6, 0x39, 0xC6, 0x59, 0xC6, 0x59, 0xC6, 0x79, 0xCE, 0x79, 0xCE, 0x99, 0xCE, 0x99, 0xCE, 0x99, 0xD6, 0xB9, 0xDE, 0xD9, 0xDE, 0xD9, 0xDE, 0x98, 0xDE, 0x98, 0xCD, 0xF5, 0xC5, 0x73, 0xBD, 0x11, 0xB4, 0xD1, 0xA4, 0x90, 0xA4, 0x8F, 0x9C, 0x8F, 0x9C, 0x8F, 0x9C, 0x6E, 0x94, 0x2E, 0x93, 0xED, 0x9C, 0x0E, 0xA4, 0x50, 0xA4, 0x91, 0xAC, 0xF3, 0xB5, 0x55, 0xBD, 0xB7, 0xBD, 0xD7, 0xC5, 0xF8, 0xC5, 0xF8, 
	0xC6, 0x18, 0xC6, 0x18, 0xC6, 0x38, 0xCE, 0x38, 0xCE, 0x58, 0xCE, 0x79, 0xCE, 0x79, 0xD6, 0x9A, 0xD6, 0x9A, 0xD6, 0xBA, 0xD6, 0xBB, 0xE7, 0x3C, 0xF7, 0x9E, 0xFF, 0xDF, 0xE7, 0x1B, 0xCE, 0x79, 0xAD, 0x74, 0xBD, 0xD9, 0xBD, 0xF9, 0xBE, 0x1A, 0xBE, 0x1A, 0xBE, 0x19, 0xBD, 0xF9, 0xBD, 0xF8, 0xBE, 0x18, 0xBE, 0x19, 0xC6, 0x39, 0xC6, 0x39, 0xC6, 0x39, 0xC6, 0x39, 0xC6, 0x18, 0xC6, 0x19, 0xC6, 0x18, 0xBE, 
	0x18, 0xBE, 0x18, 0xBE, 0x18, 0xBE, 0x18, 0xBE, 0x18, 0xBE, 0x18, 0xC6, 0x39, 0xC6, 0x39, 0xC6, 0x39, 0xC6, 0x39, 0xC6, 0x59, 0xC6, 0x59, 0xC6, 0x59, 0xCE, 0x79, 0xCE, 0x79, 0xCE, 0x79, 0xCE, 0x99, 0xD6, 0xBA, 0xD6, 0xDA, 0xDE, 0xDA, 0xDE, 0xFA, 0xE6, 0xFA, 0xDE, 0x98, 0xDE, 0x36, 0xD5, 0xF5, 0xCD, 0xB4, 0xC5, 0x94, 0xBD, 0x73, 0xBD, 0x72, 0xB5, 0x52, 0xB5, 0x31, 0xAC, 0xD0, 0xA4, 0x90, 0xA4, 0x90, 
	0xAC, 0xB2, 0xAC, 0xD3, 0xB5, 0x34, 0xBD, 0x96, 0xBD, 0xD7, 0xC5, 0xF8, 0xC6, 0x18, 0xC6, 0x18, 0xC6, 0x38, 0xC6, 0x38, 0xCE, 0x38, 0xCE, 0x58, 0xCE, 0x59, 0xCE, 0x79, 0xCE, 0x79, 0xD6, 0x9A, 0xD6, 0x9A, 0xD6, 0xBA, 0xD6, 0xBA, 0xE7, 0x3C, 0xF7, 0x9E, 0xFF, 0xDE, 0xE7, 0x3C, 0xD6, 0xB9, 0xB5, 0x95, 0xBD, 0xF9, 0xBD, 0xF9, 0xBE, 0x1A, 0xC6, 0x3A, 0xC6, 0x39, 0xBE, 0x19, 0xBE, 0x19, 0xBE, 0x19, 0xC6, 
	0x39, 0xC6, 0x39, 0xC6, 0x39, 0xC6, 0x39, 0xBE, 0x18, 0xC6, 0x18, 0xC6, 0x18, 0xC6, 0x18, 0xBE, 0x18, 0xBE, 0x18, 0xBE, 0x18, 0xBE, 0x18, 0xBE, 0x18, 0xBE, 0x18, 0xC6, 0x39, 0xC6, 0x39, 0xC6, 0x39, 0xCE, 0x59, 0xCE, 0x59, 0xCE, 0x59, 0xCE, 0x59, 0xCE, 0x79, 0xCE, 0x79, 0xCE, 0x79, 0xCE, 0x9A, 0xCE, 0x9A, 0xD6, 0xBA, 0xD6, 0xDA, 0xDE, 0xFA, 0xE6, 0xFA, 0xE6, 0xB9, 0xDE, 0x98, 0xDE, 0x77, 0xDE, 0x36, 
	0xD6, 0x16, 0xCE, 0x16, 0xC5, 0xF5, 0xC5, 0xF5, 0xC5, 0xB4, 0xBD, 0x73, 0xB5, 0x12, 0xB5, 0x13, 0xB5, 0x34, 0xB5, 0x35, 0xBD, 0x76, 0xBD, 0xD7, 0xC6, 0x18, 0xC6, 0x18, 0xC6, 0x18, 0xC6, 0x38, 0xCE, 0x38, 0xCE, 0x58, 0xCE, 0x58, 0xCE, 0x59, 0xCE, 0x79, 0xCE, 0x99, 0xD6, 0x99, 0xD6, 0x9A, 0xD6, 0xBA, 0xDE, 0xBA, 0xDE, 0xBA, 0xE7, 0x3C, 0xF7, 0x9E, 0xFF, 0xDF, 0xEF, 0x5C, 0xDE, 0xDA, 0xBD, 0xF6, 0xBD, 
	0xF9, 0xBE, 0x19, 0xC6, 0x1A, 0xC6, 0x3A, 0xC6, 0x3A, 0xC6, 0x39, 0xC6, 0x39, 0xC6, 0x39, 0xC6, 0x39, 0xC6, 0x39, 0xC6, 0x39, 0xC6, 0x19, 0xBE, 0x18, 0xBE, 0x18, 0xBE, 0x18, 0xBE, 0x18, 0xBE, 0x18, 0xC6, 0x39, 0xC6, 0x19, 0xBE, 0x18, 0xBE, 0x18, 0xC6, 0x19, 0xC6, 0x39, 0xC6, 0x39, 0xC6, 0x59, 0xCE, 0x5A, 0xCE, 0x5A, 0xCE, 0x59, 0xCE, 0x59, 0xCE, 0x59, 0xCE, 0x79, 0xCE, 0x79, 0xCE, 0x79, 0xCE, 0x9A, 
	0xCE, 0x9A, 0xD6, 0xBA, 0xDE, 0xDB, 0xE6, 0xFB, 0xE6, 0xFA, 0xE6, 0xFA, 0xEE, 0xFA, 0xE6, 0xD9, 0xE6, 0xB9, 0xDE, 0x99, 0xDE, 0x98, 0xD6, 0x78, 0xD6, 0x57, 0xCE, 0x16, 0xC5, 0xD5, 0xC5, 0xB5, 0xC5, 0xB6, 0xC5, 0xB7, 0xC5, 0xF7, 0xC6, 0x18, 0xCE, 0x39, 0xCE, 0x39, 0xCE, 0x38, 0xCE, 0x38, 0xCE, 0x58, 0xCE, 0x59, 0xCE, 0x79, 0xCE, 0x79, 0xCE, 0x79, 0xCE, 0x9A, 0xD6, 0x9A, 0xD6, 0xBA, 0xDE, 0xBA, 0xDE, 
	0xBA, 0xDE, 0xDB, 0xE7, 0x3C, 0xF7, 0x9E, 0xFF, 0xDF, 0xEF, 0x7D, 0xE7, 0x1B, 0xCE, 0x38, 0xBE, 0x19, 0xC6, 0x19, 0xC6, 0x39, 0xC6, 0x3A, 0xC6, 0x59, 0xC6, 0x59, 0xC6, 0x59, 0xC6, 0x39, 0xC6, 0x39, 0xC6, 0x59, 0xC6, 0x39, 0xC6, 0x39, 0xBE, 0x18, 0xBE, 0x18, 0xBE, 0x18, 0xBE, 0x18, 0xC6, 0x39, 0xC6, 0x39, 0xC6, 0x39, 0xC6, 0x19, 0xBE, 0x18, 0xC6, 0x39, 0xC6, 0x39, 0xC6, 0x59, 0xCE, 0x5A, 0xCE, 0x5A, 
	0xCE, 0x7A, 0xCE, 0x5A, 0xCE, 0x59, 0xCE, 0x59, 0xCE, 0x59, 0xCE, 0x79, 0xCE, 0x79, 0xCE, 0x7A, 0xCE, 0x7A, 0xD6, 0xBA, 0xDE, 0xDB, 0xDE, 0xFB, 0xE7, 0x1B, 0xEF, 0x1B, 0xEF, 0x3B, 0xEF, 0x1B, 0xE6, 0xFB, 0xE6, 0xFB, 0xDE, 0xDA, 0xDE, 0xDA, 0xDE, 0xBA, 0xD6, 0x99, 0xD6, 0x58, 0xCE, 0x58, 0xCE, 0x59, 0xCE, 0x59, 0xCE, 0x59, 0xD6, 0x7A, 0xD6, 0x7A, 0xCE, 0x59, 0xCE, 0x38, 0xC6, 0x18, 0xC6, 0x38, 0xC6, 
	0x38, 0xCE, 0x58, 0xCE, 0x79, 0xCE, 0x99, 0xD6, 0x9A, 0xD6, 0xBA, 0xD6, 0xBA, 0xDE, 0xDB, 0xDE, 0xDB, 0xDE, 0xFB, 0xEF, 0x3C, 0xF7, 0x7E, 0xFF, 0xDF, 0xF7, 0x9E, 0xEF, 0x5D, 0xD6, 0xBA, 0xC6, 0x3A, 0xC6, 0x3A, 0xC6, 0x3A, 0xC6, 0x39, 0xC6, 0x59, 0xCE, 0x5A, 0xCE, 0x7A, 0xCE, 0x5A, 0xC6, 0x59, 0xC6, 0x59, 0xC6, 0x59, 0xC6, 0x39, 0xC6, 0x39, 0xC6, 0x19, 0xC6, 0x39, 0xC6, 0x39, 0xC6, 0x39, 0xC6, 0x39, 
	0xC6, 0x39, 0xC6, 0x39, 0xC6, 0x19, 0xC6, 0x39, 0xC6, 0x39, 0xC6, 0x5A, 0xCE, 0x5A, 0xCE, 0x7A, 0xCE, 0x5A, 0xCE, 0x5A, 0xCE, 0x59, 0xCE, 0x59, 0xCE, 0x59, 0xCE, 0x59, 0xCE, 0x79, 0xCE, 0x79, 0xCE, 0x7A, 0xD6, 0x9B, 0xD6, 0xBB, 0xDE, 0xDB, 0xE6, 0xFC, 0xE7, 0x1C, 0xEF, 0x3C, 0xEF, 0x3C, 0xE7, 0x1C, 0xE7, 0x1C, 0xE7, 0x1C, 0xE7, 0x1B, 0xE6, 0xFB, 0xE6, 0xFB, 0xDE, 0xDB, 0xDE, 0xDB, 0xDE, 0xDB, 0xDE, 
	0xDB, 0xDE, 0xDB, 0xDE, 0xDB, 0xDE, 0xBB, 0xD6, 0x7A, 0xCE, 0x38, 0xC5, 0xF7, 0xC5, 0xF7, 0xC5, 0xF7, 0xC6, 0x17, 0xCE, 0x58, 0xD6, 0x9A, 0xD6, 0xBA, 0xD6, 0xBA, 0xDE, 0xBB, 0xDE, 0xDB, 0xE6, 0xDB, 0xE6, 0xFB, 0xEF, 0x3D, 0xF7, 0x7E, 0xF7, 0xBF, 0xF7, 0x9E, 0xF7, 0x9E, 0xE7, 0x1B, 0xC6, 0x5A, 0xC6, 0x5A, 0xC6, 0x3A, 0xC6, 0x39, 0xCE, 0x5A, 0xCE, 0x7A, 0xCE, 0x9A, 0xCE, 0x7A, 0xC6, 0x7A, 0xC6, 0x59, 
	0xC6, 0x59, 0xC6, 0x39, 0xC6, 0x39, 0xC6, 0x19, 0xC6, 0x19, 0xC6, 0x39, 0xC6, 0x39, 0xC6, 0x39, 0xC6, 0x39, 0xC6, 0x39, 0xC6, 0x19, 0xC6, 0x39, 0xC6, 0x59, 0xC6, 0x5A, 0xC6, 0x7A, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x5A, 0xCE, 0x59, 0xCE, 0x59, 0xCE, 0x59, 0xCE, 0x59, 0xCE, 0x79, 0xCE, 0x79, 0xCE, 0x7A, 0xD6, 0x9A, 0xD6, 0xBB, 0xDE, 0xDC, 0xDE, 0xFC, 0xE7, 0x1C, 0xEF, 0x3D, 0xEF, 0x3D, 0xE7, 0x3D, 0xE7, 
	0x3D, 0xE7, 0x3D, 0xE7, 0x3C, 0xE7, 0x3C, 0xE7, 0x3D, 0xEF, 0x3D, 0xEF, 0x3D, 0xE7, 0x3D, 0xEF, 0x5D, 0xE7, 0x3D, 0xE7, 0x1C, 0xE6, 0xFC, 0xDE, 0x9A, 0xCE, 0x18, 0xC5, 0xD6, 0xC5, 0xD6, 0xBD, 0xB6, 0xC5, 0xD7, 0xCE, 0x38, 0xD6, 0x9A, 0xDE, 0xBA, 0xDE, 0xBB, 0xDE, 0xBB, 0xE6, 0xDB, 0xE6, 0xFB, 0xE7, 0x1C, 0xEF, 0x5D, 0xF7, 0x7E, 0xF7, 0x9E, 0xF7, 0xBE, 0xF7, 0xBE, 0xEF, 0x7D, 0xC6, 0x3A, 0xC6, 0x5A, 
	0xC6, 0x5A, 0xCE, 0x5A, 0xCE, 0x7A, 0xCE, 0x9A, 0xD6, 0x9B, 0xCE, 0x9A, 0xCE, 0x7A, 0xC6, 0x59, 0xC6, 0x59, 0xC6, 0x39, 0xC6, 0x39, 0xC6, 0x39, 0xC6, 0x39, 0xC6, 0x39, 0xC6, 0x39, 0xC6, 0x59, 0xC6, 0x59, 0xC6, 0x39, 0xC6, 0x39, 0xC6, 0x59, 0xC6, 0x5A, 0xCE, 0x5A, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x79, 0xCE, 0x79, 0xCE, 0x79, 0xCE, 0x79, 0xCE, 0x7A, 0xCE, 0x7A, 0xD6, 
	0x9A, 0xD6, 0xBB, 0xDE, 0xDB, 0xDE, 0xFC, 0xE7, 0x1D, 0xE7, 0x3D, 0xE7, 0x3D, 0xE7, 0x3D, 0xE7, 0x3D, 0xE7, 0x1D, 0xE7, 0x1C, 0xE7, 0x3D, 0xEF, 0x3D, 0xEF, 0x5D, 0xEF, 0x7E, 0xEF, 0x7E, 0xEF, 0x7E, 0xEF, 0x5D, 0xEF, 0x3D, 0xE6, 0xFC, 0xDE, 0x9A, 0xCE, 0x17, 0xC5, 0x96, 0xBD, 0x75, 0xB5, 0x34, 0xBD, 0x75, 0xC5, 0xD7, 0xD6, 0x59, 0xD6, 0x9A, 0xDE, 0xBA, 0xDE, 0xDB, 0xE6, 0xDB, 0xE6, 0xFC, 0xE7, 0x1C, 
	0xEF, 0x3D, 0xEF, 0x5D, 0xF7, 0x7E, 0xF7, 0x9E, 0xF7, 0xBF, 0xF7, 0x9E, 0xC6, 0x3A, 0xC6, 0x3A, 0xCE, 0x5A, 0xCE, 0x7A, 0xCE, 0x9A, 0xD6, 0x9B, 0xD6, 0xBB, 0xCE, 0x9A, 0xCE, 0x7A, 0xC6, 0x59, 0xC6, 0x59, 0xC6, 0x39, 0xC6, 0x39, 0xC6, 0x39, 0xC6, 0x39, 0xC6, 0x39, 0xC6, 0x59, 0xCE, 0x7A, 0xC6, 0x59, 0xC6, 0x59, 0xC6, 0x59, 0xC6, 0x5A, 0xCE, 0x5A, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 
	0x7A, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x59, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x7A, 0xD6, 0x9A, 0xD6, 0xBB, 0xDE, 0xDB, 0xDE, 0xFC, 0xE7, 0x1C, 0xE7, 0x1C, 0xE7, 0x1C, 0xE7, 0x1C, 0xE7, 0x1C, 0xE7, 0x1C, 0xE6, 0xFC, 0xE7, 0x1C, 0xE7, 0x3D, 0xEF, 0x5E, 0xEF, 0x7E, 0xEF, 0x7E, 0xF7, 0x9E, 0xEF, 0x7E, 0xEF, 0x3D, 0xE6, 0xFC, 0xDE, 0x7A, 0xCD, 0xF7, 0xC5, 0x75, 0xBD, 0x14, 0xAC, 0xD3, 0xAC, 0xF3, 
	0xBD, 0x76, 0xCE, 0x18, 0xD6, 0x7A, 0xDE, 0x9A, 0xE6, 0xDB, 0xE6, 0xFB, 0xE6, 0xFC, 0xE6, 0xFC, 0xE7, 0x1D, 0xEF, 0x3D, 0xEF, 0x5E, 0xF7, 0x9E, 0xF7, 0xBE, 0xF7, 0x9E, 0xC6, 0x19, 0xC6, 0x3A, 0xCE, 0x5A, 0xD6, 0x9B, 0xD6, 0x9B, 0xD6, 0xBB, 0xD6, 0xBB, 0xCE, 0x9A, 0xCE, 0x7A, 0xC6, 0x59, 0xC6, 0x59, 0xC6, 0x39, 0xC6, 0x39, 0xC6, 0x39, 0xC6, 0x39, 0xC6, 0x59, 0xC6, 0x59, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 
	0x5A, 0xC6, 0x59, 0xCE, 0x5A, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x9A, 0xCE, 0x9A, 0xCE, 0x9A, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x7A, 0xD6, 0x9A, 0xD6, 0xBB, 0xDE, 0xDB, 0xDE, 0xDC, 0xDE, 0xFC, 0xE7, 0x1C, 0xE7, 0x1C, 0xE6, 0xFC, 0xDE, 0xFC, 0xDE, 0xFC, 0xDE, 0xFC, 0xE7, 0x1C, 0xE7, 0x3D, 0xEF, 0x7E, 0xEF, 0x7E, 0xF7, 0x9F, 0xF7, 0xBF, 0xF7, 0x7E, 
	0xEF, 0x3D, 0xE6, 0xFC, 0xDE, 0x79, 0xCD, 0xD7, 0xBD, 0x34, 0xB4, 0xD3, 0xA4, 0x51, 0xAC, 0x72, 0xBD, 0x15, 0xCD, 0xD8, 0xD6, 0x59, 0xDE, 0x9A, 0xE6, 0xDB, 0xE6, 0xFC, 0xE6, 0xFC, 0xE6, 0xFC, 0xE7, 0x1C, 0xE7, 0x3D, 0xEF, 0x3D, 0xEF, 0x7E, 0xF7, 0x9E, 0xF7, 0xBE, 0xBE, 0x19, 0xC6, 0x3A, 0xCE, 0x7A, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0xBB, 0xCE, 0x9A, 0xCE, 0x7A, 0xCE, 0x5A, 0xC6, 0x59, 0xC6, 
	0x39, 0xC6, 0x39, 0xC6, 0x39, 0xC6, 0x39, 0xC6, 0x59, 0xC6, 0x7A, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x5A, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x9A, 0xCE, 0x9A, 0xCE, 0x9A, 0xCE, 0x9A, 0xCE, 0x9A, 0xCE, 0x9A, 0xCE, 0x9A, 0xCE, 0x9A, 0xCE, 0x9A, 0xCE, 0x7A, 0xD6, 0x9A, 0xD6, 0x9B, 0xD6, 0xBB, 0xDE, 0xDB, 0xDE, 0xFC, 0xE6, 0xFC, 0xDE, 0xFC, 0xDE, 0xFC, 0xDE, 0xFC, 0xDE, 0xFC, 
	0xDE, 0xDC, 0xDE, 0xFC, 0xE7, 0x1D, 0xE7, 0x3D, 0xE7, 0x5D, 0xEF, 0x5E, 0xEF, 0x7E, 0xEF, 0x5D, 0xE7, 0x1D, 0xE6, 0xFC, 0xDE, 0x7A, 0xD6, 0x17, 0xCD, 0x75, 0xBD, 0x14, 0xB4, 0x92, 0xAC, 0x72, 0xB4, 0xD4, 0xBD, 0x56, 0xC5, 0xB7, 0xD6, 0x18, 0xDE, 0x7A, 0xDE, 0xBA, 0xDE, 0xDB, 0xE6, 0xFC, 0xE7, 0x1C, 0xE7, 0x1D, 0xE7, 0x3D, 0xEF, 0x7D, 0xEF, 0x7E, 0xF7, 0x9E, 0xBE, 0x19, 0xC6, 0x5A, 0xCE, 0x9B, 0xD6, 
	0xDC, 0xD6, 0xDB, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0x9B, 0xCE, 0x7A, 0xCE, 0x7A, 0xC6, 0x59, 0xC6, 0x39, 0xC6, 0x39, 0xC6, 0x39, 0xC6, 0x59, 0xC6, 0x59, 0xCE, 0x7A, 0xCE, 0x9A, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x9A, 0xD6, 0x9B, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0xBA, 0xCE, 0x9A, 0xCE, 0x9A, 0xD6, 0x9A, 0xD6, 0x9A, 
	0xD6, 0x9B, 0xDE, 0xBB, 0xDE, 0xDC, 0xDE, 0xFC, 0xDE, 0xFC, 0xDE, 0xFC, 0xDE, 0xDC, 0xDE, 0xDC, 0xDE, 0xDC, 0xDE, 0xDC, 0xDE, 0xFC, 0xDE, 0xFC, 0xE7, 0x1D, 0xE7, 0x3D, 0xE7, 0x3D, 0xE7, 0x3D, 0xE7, 0x1C, 0xE6, 0xDB, 0xDE, 0x9A, 0xDE, 0x38, 0xD5, 0xD7, 0xCD, 0x55, 0xBC, 0xD3, 0xB4, 0x93, 0xB4, 0xB3, 0xB4, 0xB4, 0xBD, 0x15, 0xC5, 0x96, 0xCE, 0x18, 0xD6, 0x79, 0xDE, 0xBB, 0xE6, 0xFC, 0xE7, 0x1C, 0xE7, 
	0x3D, 0xE7, 0x3D, 0xE7, 0x5D, 0xEF, 0x7D, 0xEF, 0x9D, 0xBE, 0x19, 0xC6, 0x5A, 0xCE, 0x9B, 0xD6, 0xDC, 0xD6, 0xDB, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0x9B, 0xCE, 0x9A, 0xCE, 0x7A, 0xCE, 0x7A, 0xC6, 0x59, 0xC6, 0x39, 0xC6, 0x59, 0xC6, 0x59, 0xCE, 0x5A, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x9A, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0xDB, 0xD6, 0xDB, 
	0xD6, 0xDB, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0x9A, 0xD6, 0x9A, 0xD6, 0x9A, 0xD6, 0x9A, 0xD6, 0x9A, 0xD6, 0xBB, 0xDE, 0xDB, 0xDE, 0xFC, 0xDE, 0xFC, 0xDE, 0xDC, 0xDE, 0xDC, 0xDE, 0xDC, 0xDE, 0xDC, 0xDE, 0xDC, 0xDE, 0xDB, 0xDE, 0xDC, 0xDE, 0xFC, 0xDE, 0xFC, 0xE7, 0x1D, 0xE7, 0x1C, 0xDE, 0xFC, 0xE6, 0xDB, 0xDE, 0xBA, 0xDE, 0x79, 0xDE, 0x18, 0xD5, 0x96, 0xC5, 0x14, 0xBC, 0xD3, 0xB4, 0x93, 0xA4, 
	0x72, 0xAC, 0xB3, 0xB5, 0x15, 0xC5, 0xB7, 0xCE, 0x18, 0xD6, 0x7A, 0xDE, 0xFB, 0xDF, 0x1C, 0xDF, 0x1C, 0xE7, 0x1C, 0xE7, 0x5D, 0xE7, 0x5C, 0xEF, 0x7D, 0xC6, 0x3A, 0xC6, 0x5A, 0xD6, 0x9B, 0xD6, 0xDC, 0xD6, 0xDB, 0xD6, 0xBB, 0xCE, 0x9A, 0xCE, 0x9A, 0xCE, 0x9A, 0xCE, 0x9A, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x9A, 0xCE, 0x9A, 0xCE, 0x7A, 0xCE, 0x7A, 
	0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x9A, 0xD6, 0xBB, 0xD6, 0xDB, 0xD6, 0xDB, 0xD6, 0xDB, 0xDE, 0xDB, 0xDE, 0xDB, 0xD6, 0xDB, 0xD6, 0xDB, 0xD6, 0xBB, 0xD6, 0x9A, 0xD6, 0x9A, 0xD6, 0x9A, 0xD6, 0x9A, 0xD6, 0xBB, 0xDE, 0xDB, 0xDE, 0xDC, 0xDE, 0xDC, 0xDE, 0xFC, 0xDE, 0xFC, 0xDE, 0xFC, 0xDE, 0xFC, 0xDE, 0xFC, 0xDE, 0xFC, 0xDE, 0xDC, 0xDE, 0xDB, 0xDE, 0xFC, 0xDE, 0xFC, 0xDE, 0xFC, 0xE6, 0xFC, 0xE6, 
	0xFC, 0xE6, 0xDB, 0xE6, 0xBA, 0xE6, 0x99, 0xDE, 0x38, 0xD5, 0xD7, 0xCD, 0x76, 0xBC, 0xF4, 0xA4, 0x52, 0xA4, 0x72, 0xAC, 0xB3, 0xB5, 0x14, 0xC5, 0x76, 0xCD, 0xF8, 0xD6, 0x79, 0xD6, 0x9A, 0xD6, 0xBB, 0xDE, 0xDB, 0xDE, 0xFB, 0xE7, 0x1B, 0xEF, 0x5C, 0xC6, 0x5A, 0xCE, 0x7B, 0xD6, 0xBB, 0xD6, 0xDC, 0xD6, 0xBB, 0xD6, 0x9B, 0xCE, 0x9A, 0xCE, 0x9A, 0xCE, 0x9A, 0xD6, 0x9B, 0xD6, 0x9B, 0xCE, 0x9A, 0xCE, 0x9A, 
	0xCE, 0x9A, 0xCE, 0x7A, 0xCE, 0x9A, 0xCE, 0x9A, 0xCE, 0x9A, 0xCE, 0x9A, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x9B, 0xD6, 0xBB, 0xD6, 0xDB, 0xD6, 0xDB, 0xD6, 0xDB, 0xDE, 0xFC, 0xDE, 0xFC, 0xDE, 0xFC, 0xD6, 0xDB, 0xD6, 0xBB, 0xD6, 0x9B, 0xD6, 0x9A, 0xCE, 0x9A, 0xD6, 0x9A, 0xD6, 0xBB, 0xDE, 0xBB, 0xDE, 0xDB, 0xDE, 0xDB, 0xDE, 0xFC, 0xDE, 0xFC, 0xE6, 0xFC, 0xE7, 0x1C, 0xDF, 
	0x1C, 0xDE, 0xFC, 0xDE, 0xDB, 0xDE, 0xDB, 0xD6, 0xDB, 0xD6, 0xDB, 0xDE, 0xDB, 0xDE, 0xFC, 0xE7, 0x1C, 0xE7, 0x1B, 0xEF, 0x1B, 0xEE, 0xFB, 0xEE, 0xDA, 0xE6, 0x9A, 0xD6, 0x18, 0xC5, 0x55, 0xA4, 0x72, 0x9C, 0x31, 0xA4, 0x51, 0xA4, 0x72, 0xB4, 0xF4, 0xBD, 0x76, 0xCD, 0xF8, 0xCE, 0x38, 0xCE, 0x59, 0xD6, 0x9A, 0xD6, 0xBA, 0xDE, 0xDA, 0xE7, 0x1B, 0xCE, 0x7A, 0xCE, 0x9B, 0xD6, 0x9B, 0xD6, 0xDB, 0xD6, 0xBB, 
	0xCE, 0x9A, 0xCE, 0x7A, 0xCE, 0x9A, 0xD6, 0x9B, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0xBB, 0xCE, 0x9A, 0xCE, 0x9A, 0xD6, 0x9B, 0xD6, 0x9B, 0xCE, 0x9A, 0xCE, 0x9A, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x9A, 0xD6, 0x9B, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0xDB, 0xDE, 0xFB, 0xDE, 0xFC, 0xDE, 0xFC, 0xDE, 0xFC, 0xDE, 0xFB, 0xD6, 0xDB, 0xD6, 0xBB, 0xD6, 0x9A, 0xD6, 0x9A, 0xD6, 0x9A, 0xD6, 
	0xBB, 0xD6, 0xDB, 0xDE, 0xDB, 0xDE, 0xFC, 0xDE, 0xFC, 0xDE, 0xFC, 0xE7, 0x1C, 0xE7, 0x1C, 0xE7, 0x1C, 0xDE, 0xFC, 0xDE, 0xDB, 0xDE, 0xDB, 0xD6, 0xDB, 0xD6, 0xBB, 0xDE, 0xDB, 0xDE, 0xFB, 0xE7, 0x1C, 0xE7, 0x3C, 0xEF, 0x3C, 0xEF, 0x3C, 0xEF, 0x1C, 0xEF, 0x1B, 0xDE, 0x79, 0xC5, 0xB6, 0xAC, 0xB2, 0xA4, 0x51, 0x9C, 0x31, 0x9C, 0x31, 0xAC, 0x92, 0xB4, 0xF4, 0xBD, 0x75, 0xC5, 0xB6, 0xC5, 0xF7, 0xCE, 0x38, 
	0xD6, 0x59, 0xD6, 0x79, 0xDE, 0xBA, 0xCE, 0x7B, 0xCE, 0x9B, 0xCE, 0x9B, 0xD6, 0xBB, 0xCE, 0x9B, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x7A, 0xD6, 0x9B, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0xDB, 0xD6, 0xDB, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0x9B, 0xCE, 0x9A, 0xCE, 0x9A, 0xD6, 0x9B, 0xD6, 0x9B, 0xD6, 0x9B, 0xD6, 0x9B, 0xD6, 0x9B, 0xD6, 0xBB, 0xD6, 0xDB, 0xD6, 0xDB, 0xDE, 
	0xFB, 0xDE, 0xFB, 0xD6, 0xDB, 0xD6, 0xDB, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0xDB, 0xD6, 0xDB, 0xDE, 0xFC, 0xDE, 0xFC, 0xDF, 0x1C, 0xDF, 0x1C, 0xE7, 0x1C, 0xE7, 0x1C, 0xDF, 0x1C, 0xDE, 0xFC, 0xDE, 0xFB, 0xDE, 0xDB, 0xD6, 0xBB, 0xD6, 0xDB, 0xDE, 0xFB, 0xDE, 0xFB, 0xE7, 0x1C, 0xEF, 0x3C, 0xEF, 0x5C, 0xEF, 0x5D, 0xEF, 0x5D, 0xE6, 0xDB, 0xD6, 0x38, 0xBD, 0x75, 0xB4, 0xF3, 
	0xAC, 0x92, 0x9C, 0x31, 0xA4, 0x51, 0xA4, 0x72, 0xAC, 0xB2, 0xAC, 0xF3, 0xB5, 0x14, 0xBD, 0x55, 0xC5, 0xB6, 0xC5, 0xD7, 0xD6, 0x38, 0xCE, 0x7B, 0xCE, 0x9B, 0xCE, 0x9B, 0xCE, 0x9B, 0xCE, 0x7A, 0xCE, 0x7A, 0xC6, 0x59, 0xCE, 0x7A, 0xD6, 0x9B, 0xD6, 0xBB, 0xD6, 0xDB, 0xD6, 0xDB, 0xDE, 0xDC, 0xDE, 0xDC, 0xD6, 0xDB, 0xD6, 0xDB, 0xD6, 0xDB, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 
	0xBB, 0xD6, 0xBB, 0xD6, 0xBB, 0xCE, 0x9A, 0xCE, 0x7A, 0xCE, 0x9A, 0xD6, 0xBB, 0xD6, 0xDB, 0xD6, 0xDB, 0xD6, 0xFB, 0xD6, 0xDB, 0xD6, 0xDB, 0xD6, 0xBB, 0xD6, 0xDB, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0xDB, 0xDE, 0xFC, 0xDE, 0xFC, 0xDF, 0x1C, 0xE7, 0x1C, 0xE7, 0x3C, 0xE7, 0x3C, 0xE7, 0x3C, 0xE7, 0x3C, 0xDF, 0x1C, 0xDE, 0xDB, 0xD6, 0xBA, 0xD6, 0xDB, 0xDE, 0xDB, 0xDE, 0xFB, 0xDF, 0x1C, 
	0xE7, 0x3C, 0xEF, 0x5D, 0xEF, 0x7D, 0xF7, 0x9E, 0xEF, 0x3D, 0xDE, 0xDB, 0xCE, 0x38, 0xBD, 0x76, 0xB4, 0xD3, 0xA4, 0x51, 0x9B, 0xF0, 0x9B, 0xF0, 0x93, 0xCF, 0x9C, 0x10, 0xA4, 0x51, 0xAC, 0x92, 0xB4, 0xF3, 0xBD, 0x34, 0xC5, 0x75, 0xCE, 0x9B, 0xCE, 0x9B, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x5A, 0xC6, 0x59, 0xCE, 0x7A, 0xD6, 0xBB, 0xD6, 0xDB, 0xD6, 0xDB, 0xDE, 0xDC, 0xDE, 0xFC, 0xDE, 0xFC, 0xDE, 
	0xDC, 0xD6, 0xDB, 0xD6, 0xDB, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0xDB, 0xD6, 0xDB, 0xD6, 0xDB, 0xD6, 0xBB, 0xCE, 0x9A, 0xCE, 0x7A, 0xCE, 0x9A, 0xCE, 0xBA, 0xD6, 0xBB, 0xD6, 0xDB, 0xD6, 0xDB, 0xD6, 0xDB, 0xD6, 0xDB, 0xD6, 0xDB, 0xD6, 0xDB, 0xD6, 0xDB, 0xD6, 0xDB, 0xD6, 0xDB, 0xD6, 0xDB, 0xD6, 0xDB, 0xDE, 0xFC, 0xDF, 0x1C, 0xDF, 0x1C, 0xDF, 0x1C, 0xE7, 0x3C, 0xE7, 0x3C, 0xE7, 0x3C, 
	0xE7, 0x3C, 0xDF, 0x1C, 0xDE, 0xFB, 0xD6, 0xDA, 0xD6, 0xDB, 0xD6, 0xFB, 0xDE, 0xFB, 0xDF, 0x1C, 0xE7, 0x3C, 0xE7, 0x5D, 0xEF, 0x7D, 0xEF, 0x9E, 0xEF, 0x7D, 0xE7, 0x1C, 0xDE, 0x9A, 0xCD, 0xF8, 0xBD, 0x55, 0xAC, 0x92, 0xA4, 0x31, 0x9B, 0xF0, 0x93, 0xAE, 0x9B, 0xCF, 0xA3, 0xEF, 0xA4, 0x30, 0xAC, 0x71, 0xB4, 0xB2, 0xC5, 0x14, 0xCE, 0x9A, 0xCE, 0x9A, 0xCE, 0x7A, 0xCE, 0x5A, 0xC6, 0x59, 0xC6, 0x59, 0xC6, 
	0x59, 0xCE, 0x7A, 0xD6, 0xBB, 0xDE, 0xFC, 0xD6, 0xDB, 0xDE, 0xFC, 0xDE, 0xDC, 0xDE, 0xDC, 0xDE, 0xDC, 0xD6, 0xDB, 0xD6, 0xBB, 0xD6, 0x9B, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0xDB, 0xDE, 0xFC, 0xDE, 0xFC, 0xDE, 0xFC, 0xD6, 0xDB, 0xD6, 0xBB, 0xCE, 0x9A, 0xCE, 0x9A, 0xCE, 0x9A, 0xCE, 0x9A, 0xCE, 0xBA, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0xDB, 0xD6, 0xDB, 0xD6, 0xDB, 0xD6, 0xDB, 0xD6, 0xDB, 0xD6, 0xDB, 0xDE, 0xFC, 
	0xDE, 0xFC, 0xDF, 0x1C, 0xDF, 0x1C, 0xDF, 0x1C, 0xE7, 0x3C, 0xE7, 0x3C, 0xE7, 0x3C, 0xE7, 0x3C, 0xE7, 0x3C, 0xE7, 0x1C, 0xDE, 0xFB, 0xD6, 0xDB, 0xD6, 0xDB, 0xD6, 0xFB, 0xD6, 0xFB, 0xDF, 0x1B, 0xDF, 0x1C, 0xE7, 0x3C, 0xE7, 0x5D, 0xEF, 0x7E, 0xEF, 0x7E, 0xE7, 0x3D, 0xE6, 0xFC, 0xD6, 0x7A, 0xCE, 0x18, 0xC5, 0x76, 0xB4, 0xF3, 0xAC, 0x71, 0x9B, 0xEF, 0x9B, 0xCF, 0xA3, 0xCF, 0xA3, 0xCF, 0xAC, 0x10, 0xB4, 
	0x71, 0xBC, 0xB2, 0xCE, 0x9A, 0xCE, 0x9A, 0xCE, 0x5A, 0xC6, 0x39, 0xC6, 0x59, 0xC6, 0x59, 0xCE, 0x5A, 0xCE, 0x9A, 0xD6, 0xDB, 0xDE, 0xFC, 0xDE, 0xFB, 0xDE, 0xFC, 0xDE, 0xDC, 0xDE, 0xFC, 0xD6, 0xDB, 0xD6, 0xBB, 0xD6, 0xBB, 0xCE, 0x9A, 0xD6, 0xBB, 0xD6, 0xDB, 0xDE, 0xFC, 0xDF, 0x1C, 0xE7, 0x1D, 0xE7, 0x3D, 0xDE, 0xFC, 0xD6, 0xDB, 0xD6, 0xBB, 0xCE, 0x9A, 0xCE, 0x9A, 0xCE, 0x9A, 0xCE, 0x9A, 0xCE, 0x9A, 
	0xCE, 0xBA, 0xD6, 0xBB, 0xD6, 0xDB, 0xD6, 0xDB, 0xD6, 0xDB, 0xD6, 0xDB, 0xDE, 0xFC, 0xDE, 0xFC, 0xDF, 0x1C, 0xDF, 0x1C, 0xDF, 0x3C, 0xDF, 0x3C, 0xE7, 0x3C, 0xE7, 0x3C, 0xE7, 0x3C, 0xE7, 0x3C, 0xE7, 0x3C, 0xE7, 0x3C, 0xDF, 0x1B, 0xDE, 0xFB, 0xDE, 0xFB, 0xD6, 0xFB, 0xD6, 0xFB, 0xDE, 0xFB, 0xDE, 0xFB, 0xDE, 0xFC, 0xE7, 0x1D, 0xEF, 0x5D, 0xEF, 0x5E, 0xEF, 0x5E, 0xEF, 0x5D, 0xE7, 0x1C, 0xDE, 0xBB, 0xD6, 
	0x59, 0xC5, 0x96, 0xBC, 0xF3, 0xA4, 0x50, 0xA3, 0xEF, 0x9B, 0xAF, 0x9B, 0x6E, 0xA3, 0xCF, 0xAC, 0x10, 0xB4, 0x51, 0xCE, 0xBB, 0xCE, 0x9A, 0xCE, 0x7A, 0xC6, 0x39, 0xC6, 0x59, 0xC6, 0x59, 0xCE, 0x5A, 0xCE, 0x9A, 0xD6, 0xDB, 0xDE, 0xFC, 0xDE, 0xFC, 0xDE, 0xDC, 0xD6, 0xDB, 0xD6, 0xDB, 0xD6, 0xDB, 0xD6, 0xBB, 0xD6, 0xBB, 0xCE, 0x9A, 0xD6, 0x9B, 0xD6, 0xBB, 0xDE, 0xFC, 0xDE, 0xFC, 0xDF, 0x1C, 0xE7, 0x3D, 
	0xDE, 0xFC, 0xDE, 0xFC, 0xD6, 0xDB, 0xD6, 0xBB, 0xCE, 0x9A, 0xCE, 0x9A, 0xCE, 0x9A, 0xCE, 0x9A, 0xCE, 0x9A, 0xD6, 0xBB, 0xD6, 0xDB, 0xD6, 0xDB, 0xD6, 0xDB, 0xDE, 0xFC, 0xDE, 0xFC, 0xDE, 0xFC, 0xDF, 0x1C, 0xDF, 0x3C, 0xE7, 0x3C, 0xE7, 0x3C, 0xE7, 0x3C, 0xE7, 0x3D, 0xE7, 0x3D, 0xE7, 0x3D, 0xE7, 0x3C, 0xE7, 0x3C, 0xDF, 0x1C, 0xDE, 0xFB, 0xDE, 0xFB, 0xDE, 0xFB, 0xD6, 0xDB, 0xD6, 0xDB, 0xD6, 0xDB, 0xDE, 
	0xBB, 0xDE, 0xDB, 0xE6, 0xFC, 0xE7, 0x1D, 0xE7, 0x3D, 0xE7, 0x3D, 0xE6, 0xFC, 0xDE, 0xDB, 0xDE, 0x7A, 0xCD, 0xF7, 0xC5, 0x75, 0xB4, 0xD3, 0xB4, 0x71, 0xAC, 0x31, 0xA3, 0xF0, 0xAC, 0x10, 0xB4, 0x51, 0xBC, 0x72, 0xD6, 0xBB, 0xCE, 0xBB, 0xCE, 0x7A, 0xC6, 0x59, 0xC6, 0x59, 0xC6, 0x5A, 0xCE, 0x7A, 0xD6, 0x9B, 0xDE, 0xFB, 0xDF, 0x1C, 0xDE, 0xFC, 0xD6, 0xDB, 0xD6, 0xDB, 0xD6, 0xDB, 0xD6, 0xDB, 0xD6, 0xBB, 
	0xD6, 0x9B, 0xCE, 0x9A, 0xD6, 0x9B, 0xD6, 0xBB, 0xD6, 0xDB, 0xDE, 0xFC, 0xDE, 0xFC, 0xDF, 0x1C, 0xDF, 0x1C, 0xDE, 0xFC, 0xDE, 0xFC, 0xD6, 0xDB, 0xD6, 0xDB, 0xD6, 0xBA, 0xCE, 0x9A, 0xCE, 0x7A, 0xCE, 0x9A, 0xD6, 0xBA, 0xD6, 0xDB, 0xD6, 0xDB, 0xDE, 0xDC, 0xDE, 0xFC, 0xDE, 0xFC, 0xDE, 0xFC, 0xDF, 0x1C, 0xDF, 0x1C, 0xE7, 0x5D, 0xE7, 0x5D, 0xE7, 0x5D, 0xE7, 0x5D, 0xE7, 0x5D, 0xE7, 0x5D, 0xE7, 0x5D, 0xE7, 
	0x3C, 0xE7, 0x3C, 0xE7, 0x3C, 0xDF, 0x1B, 0xDE, 0xFB, 0xD6, 0xDB, 0xD6, 0xBA, 0xD6, 0x7A, 0xD6, 0x7A, 0xD6, 0x7A, 0xD6, 0x7A, 0xDE, 0x9B, 0xDE, 0xBB, 0xDE, 0xDC, 0xDE, 0xDC, 0xDE, 0xBB, 0xDE, 0x9A, 0xD6, 0x59, 0xCD, 0xF7, 0xCD, 0x96, 0xC5, 0x34, 0xBC, 0xD4, 0xBC, 0x93, 0xBC, 0xB3, 0xBC, 0xB3, 0xC4, 0xB3, 0xD6, 0xDB, 0xD6, 0xBB, 0xCE, 0x7A, 0xC6, 0x5A, 0xC6, 0x5A, 0xCE, 0x5A, 0xCE, 0x7A, 0xD6, 0xBB, 
	0xDE, 0xFC, 0xDF, 0x1C, 0xDE, 0xFC, 0xD6, 0xDB, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0x9B, 0xCE, 0x9A, 0xCE, 0x9A, 0xD6, 0xBB, 0xD6, 0xDB, 0xDE, 0xDC, 0xDE, 0xFC, 0xDE, 0xFC, 0xDF, 0x1C, 0xDF, 0x1C, 0xDF, 0x1C, 0xDE, 0xFC, 0xDE, 0xFC, 0xD6, 0xDB, 0xCE, 0x9A, 0xCE, 0x79, 0xCE, 0x79, 0xCE, 0x9A, 0xD6, 0xDB, 0xD6, 0xDB, 0xDE, 0xDC, 0xDE, 0xFC, 0xDE, 0xFC, 0xDE, 0xFC, 0xDF, 0x1C, 0xE7, 
	0x3D, 0xE7, 0x5D, 0xE7, 0x7D, 0xEF, 0x7D, 0xEF, 0x7D, 0xEF, 0x7D, 0xE7, 0x5D, 0xE7, 0x5D, 0xE7, 0x5D, 0xE7, 0x3C, 0xE7, 0x5C, 0xE7, 0x1C, 0xDE, 0xDB, 0xD6, 0xBA, 0xD6, 0x7A, 0xCE, 0x39, 0xCE, 0x18, 0xCE, 0x18, 0xCD, 0xF8, 0xCE, 0x19, 0xD6, 0x5A, 0xDE, 0x9A, 0xDE, 0xBB, 0xDE, 0xBB, 0xDE, 0xBA, 0xDE, 0x9A, 0xDE, 0x7A, 0xDE, 0x59, 0xDD, 0xF8, 0xD5, 0x97, 0xCD, 0x56, 0xCD, 0x35, 0xCD, 0x15, 0xCD, 0x15, 
	0xD6, 0xBB, 0xCE, 0xBB, 0xCE, 0x7A, 0xCE, 0x5A, 0xCE, 0x5A, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x9B, 0xD6, 0xDB, 0xDE, 0xFC, 0xD6, 0xDB, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0x9B, 0xCE, 0x9A, 0xCE, 0x9A, 0xCE, 0x9A, 0xCE, 0x9A, 0xCE, 0x9A, 0xD6, 0x9B, 0xD6, 0xBB, 0xD6, 0xDB, 0xDE, 0xDC, 0xDE, 0xFC, 0xDF, 0x1C, 0xDF, 0x1C, 0xDE, 0xFC, 0xDE, 0xFC, 0xD6, 0xDB, 0xD6, 0xBA, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 
	0x9A, 0xD6, 0xBA, 0xD6, 0xBB, 0xD6, 0xDB, 0xDE, 0xFC, 0xDE, 0xFC, 0xDE, 0xFC, 0xDE, 0xFC, 0xDF, 0x1C, 0xE7, 0x3D, 0xE7, 0x5D, 0xEF, 0x7D, 0xEF, 0x7D, 0xEF, 0x7D, 0xEF, 0x7D, 0xE7, 0x5D, 0xE7, 0x3C, 0xE7, 0x3C, 0xDF, 0x1C, 0xDE, 0xFB, 0xDE, 0xBA, 0xD6, 0x7A, 0xD6, 0x59, 0xCE, 0x18, 0xCD, 0xF8, 0xCD, 0xD7, 0xC5, 0xB7, 0xC5, 0xD7, 0xCD, 0xF8, 0xCE, 0x18, 0xCE, 0x59, 0xCE, 0x59, 0xD6, 0x79, 0xD6, 0x79, 
	0xDE, 0x79, 0xDE, 0x59, 0xD6, 0x18, 0xD5, 0xB8, 0xCD, 0x97, 0xCD, 0x76, 0xCD, 0x56, 0xCD, 0x36, 0xCE, 0x9A, 0xCE, 0x9A, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x9A, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0xBB, 0xD6, 0x9B, 0xCE, 0x9A, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x9A, 0xD6, 0x9B, 0xCE, 0x9A, 0xCE, 0x7A, 0xCE, 0x5A, 0xCE, 0x9A, 0xD6, 0x9B, 0xD6, 0xBB, 0xDE, 0xFC, 0xDE, 
	0xFC, 0xDF, 0x1C, 0xDE, 0xFC, 0xDE, 0xFC, 0xDE, 0xFB, 0xD6, 0xBB, 0xCE, 0x9A, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x7A, 0xCE, 0x9A, 0xD6, 0xBB, 0xDE, 0xFC, 0xDE, 0xFC, 0xDE, 0xFC, 0xDE, 0xFC, 0xDF, 0x1C, 0xE7, 0x3D, 0xE7, 0x5D, 0xEF, 0x7D, 0xEF, 0x9E, 0xEF, 0x9E, 0xEF, 0x9E, 0xEF, 0x7D, 0xE7, 0x5D, 0xDF, 0x1C, 0xDE, 0xDB, 0xD6, 0xBA, 0xD6, 0x9A, 0xD6, 0x59, 0xCE, 0x38, 0xCD, 0xF7, 0xC5, 0xB7, 0xC5, 0x96, 
	0xBD, 0x75, 0xBD, 0x75, 0xBD, 0x96, 0xC5, 0xB6, 0xC5, 0xD7, 0xC5, 0xF7, 0xC6, 0x18, 0xCE, 0x38, 0xD6, 0x39, 0xDE, 0x59, 0xD6, 0x19, 0xD5, 0xF8, 0xD5, 0xB8, 0xD5, 0x97, 0xCD, 0x97, 0xCD, 0x76};











//16x15
const DATA_FLASH uint8_t wifiIcon[] = {

1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,
1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,
1,1,1,0,0,0,1,1,1,1,0,0,0,1,1,1,
1,1,0,0,1,1,1,1,1,1,1,1,0,0,1,1,
1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,1,
0,0,1,1,0,0,0,0,0,0,0,0,1,1,0,0,
1,1,1,0,0,0,1,1,1,1,0,0,0,1,1,1,
1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,
1,1,0,0,1,1,0,0,0,0,1,1,0,0,1,1,
1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,
1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,
1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,
1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,

};
const DATA_FLASH uint8_t wifiAnimation01[]={
1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1

};
const DATA_FLASH uint8_t wifiAnimation02[]={
1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,
1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,
1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,
1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,

};
const DATA_FLASH uint8_t wifiAnimation03[]={
1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,
1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,
1,1,1,0,0,0,1,1,1,1,0,0,0,1,1,1,
1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,
1,1,0,0,1,1,1,1,1,1,1,1,0,0,1,1,

};
const DATA_FLASH uint8_t wifiAnimation04[]={
1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,
1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,
1,1,1,0,0,0,1,1,1,1,0,0,0,1,1,1,
1,1,0,0,1,1,1,1,1,1,1,1,0,0,1,1,
1,0,0,1,1,1,1,1,1,1,1,1,1,0,0,1,
1,0,0,1,1,1,1,1,1,1,1,1,1,0,0,1,
};

//7x7
const DATA_FLASH uint8_t connectedIcon[]={
 1,1,0,1,0,1,1,
 1,1,0,1,0,0,1,
 1,1,0,1,0,0,0,
 0,1,0,1,0,1,0,
 0,0,0,1,0,1,1,
 1,0,0,1,0,1,1,
 1,1,0,1,0,1,1,
};
//2x7
const DATA_FLASH uint8_t disconnectedIcon[]={
0,0,
0,0,
0,0,
0,0,
1,1,
0,0,
0,0,

};
const DATA_FLASH uint8_t noWifiIcon[]={
    1,0,0,1,0,0,1,
    1,1,0,0,0,1,1,
    1,1,1,0,1,1,1,
    1,1,0,0,0,1,1,
    1,0,0,1,0,0,1,
    1,1,1,1,1,1,1,
    1,1,1,1,1,1,1

};
//w-11, h-17
const DATA_FLASH uint8_t bleIcon[]={

    1,1,1,1,0,0,1,1,1,1,1,
    1,1,1,1,0,0,0,1,1,1,1,
    1,1,1,1,0,1,0,0,1,1,1,
    0,1,1,1,0,1,1,0,0,1,1,
    0,0,1,1,0,1,1,0,0,1,1,
    1,0,0,1,0,1,0,0,1,1,1,
    1,1,0,0,0,0,0,1,1,1,1,
    1,1,0,0,0,0,1,1,1,1,1,
    1,0,0,1,0,0,0,1,1,1,1,
    0,0,1,1,0,1,0,0,1,1,1,
    0,1,1,1,0,1,1,0,0,1,1,
    1,1,1,1,0,1,1,0,0,1,1,
    1,1,1,1,0,1,0,0,1,1,1,
    1,1,1,1,0,0,0,1,1,1,1,
    1,1,1,1,0,0,1,1,1,1,1,

};

const DATA_FLASH uint8_t secondicon[]={
    0,0,0,0,0,
    0,0,0,0,0,
    0,0,0,0,0,
    0,0,0,0,0,
    0,0,0,0,0
};

//----------------------time icon------------7segment----------------------------------------32*6/
const DATA_FLASH uint32_t a[]={

    0b00111111111111111111111111111100,
    0b00011111111111111111111111111000,
    0b00001111111111111111111111110000,
    0b00000111111111111111111111100000,
    0b00000011111111111111111111000000,
    0b00000001111111111111111110000000
};
//8*26
const DATA_FLASH uint8_t b[]={
    0b00000010,
    0b00000110,
    0b00001110,
    0b00011110,
    0b00111110,
    0b01111110,
    0b01111110,
    0b01111110,
    0b01111110,
    0b01111110,
    0b01111110,
    0b01111110,
    0b01111110,
    0b01111110,
    0b01111110,
    0b01111110,
    0b01111110,
    0b01111110,
    0b01111110,
    0b01111110,
    0b01111110,
    0b01111110,
    0b01111110,
    0b00111110,
    0b00011100,
    0b00001000


};
//6*26
const DATA_FLASH uint8_t c[]={
    0b00001000,
    0b00011100,
    0b00111110,
    0b01111110,
    0b01111110,
    0b01111110,
    0b01111110,
    0b01111110,
    0b01111110,
    0b01111110,
    0b01111110,
    0b01111110,
    0b01111110,
    0b01111110,
    0b01111110,
    0b01111110,
    0b01111110,
    0b01111110,
    0b01111110,
    0b01111110,
    0b01111110,
    0b00111110,
    0b00011110,
    0b00001110,
    0b00000110,
    0b00000010

};
//30*6
const DATA_FLASH uint32_t d[]={

    0b00000001111111111111111110000000,
    0b00000011111111111111111111000000,
    0b00000111111111111111111111100000,
    0b00001111111111111111111111110000,
    0b00011111111111111111111111111000,
    0b00111111111111111111111111111100

};
//6*26
const DATA_FLASH uint8_t e[]={
    0b00010000,
    0b00111000,
    0b01111100,
    0b01111110,
    0b01111110,
    0b01111110,
    0b01111110,
    0b01111110,
    0b01111110,
    0b01111110,
    0b01111110,
    0b01111110,
    0b01111110,
    0b01111110,
    0b01111110,
    0b01111110,
    0b01111110,
    0b01111110,
    0b01111110,
    0b01111110,
    0b01111110,
    0b01111100,
    0b01111000,
    0b01110000,
    0b01100000,
    0b01000000

};
//6*26
const DATA_FLASH uint8_t f[]={
    0b01000000,
    0b01100000,
    0b01110000,
    0b01111000,
    0b01111100,
    0b01111110,
    0b01111110,
    0b01111110,
    0b01111110,
    0b01111110,
    0b01111110,
    0b01111110,
    0b01111110,
    0b01111110,
    0b01111110,
    0b01111110,
    0b01111110,
    0b01111110,
    0b01111110,
    0b01111110,
    0b01111110,
    0b01111110,
    0b01111110,
    0b01111100,
    0b00111000,
    0b00010000

};
//27*6
const DATA_FLASH DATA_FLASH uint32_t g[]={
0b00000111111111111111111110000000,
0b00001111111111111111111111000000,
0b00011111111111111111111111100000,
0b00011111111111111111111111100000,
0b00001111111111111111111111000000,
0b00000111111111111111111110000000
};
const  uint32_t *segment_table1[]={
    ['a']=a,
    ['d']=d,
    ['g']=g

};
const  uint8_t *segment_table2[]={
    ['b']=b,
    ['c']=c,
    ['e']=e,
    ['f']=f
};

//------------------------------------------------------------------------
/*******************************************************************************
 * Description: Characters size 1
 * 
 ******************************************************************************/

const DATA_FLASH uint16_t charSignNeg[] = { // "-"

    0b0000000000000000,
    0b0000000000000000,
    0b0000000000000000,
    0b0000000000000000,
    0b1111100000000000,
    0b1111100000000000,
    0b0000000000000000,
    0b0000000000000000,
    0b0000000000000000,
    0b0000000000000000

};
const DATA_FLASH uint16_t dot[]={


    0b0000000000000000,
    0b0000000000000000,
    0b0000000000000000,
    0b0000000000000000,
    0b0000000000000000,
    0b0000000000000000,
    0b0000000000000000,
    0b0000000000000000,
    0b0110000000000000,
    0b0110000000000000
};
const DATA_FLASH uint16_t space1[]={

    0b0000000000000000,
    0b0000000000000000,
    0b0000000000000000,
    0b0000000000000000,
    0b0000000000000000,
    0b0000000000000000,
    0b0000000000000000,
    0b0000000000000000,
    0b0000000000000000,
    0b0000000000000000

};

const DATA_FLASH uint16_t char_0[] = {

    0b0011100000000000,
    0b0110110000000000,
    0b1100011000000000,
    0b1100011000000000,
    0b1100011000000000,
    0b1100011000000000,
    0b1100011000000000,
    0b1100011000000000,
    0b0110110000000000,
    0b0011100000000000


};
const DATA_FLASH uint16_t char_1[]={

    0b0001100000000000,
    0b0111100000000000,  
    0b1101100000000000,   
    0b0001100000000000,  
    0b0001100000000000, 
    0b0001100000000000,   
    0b0001100000000000, 
    0b0001100000000000,  
    0b0111111000000000,   
    0b0111111000000000
};

const DATA_FLASH uint16_t char_2[]={

    0b0111110000000000,
    0b1100011000000000,
    0b1100011000000000,
    0b1100011000000000,
    0b0000110000000000,
    0b0001100000000000,
    0b0011000000000000,
    0b0110000000000000,
    0b1100011000000000,
    0b1111111000000000

};
const DATA_FLASH uint16_t char_3[]={
    0b0111110000000000,
    0b1100011000000000,
    0b1100011000000000,
    0b0000110000000000,
    0b0011100000000000,
    0b0000111000000000,
    0b1100011000000000,
    0b1100011000000000,
    0b0110110000000000,
    0b0111110000000000

};

const DATA_FLASH uint16_t char_4[]={

    0b0001110000000000,
    0b0011110000000000,
    0b0110110000000000,
    0b0110110000000000,
    0b1100110000000000,
    0b1100110000000000,
    0b1111111000000000,
    0b0000110000000000,
    0b0000110000000000,
    0b0011111000000000

};
const DATA_FLASH uint16_t char_5[]={

    0b1111111100000000,
    0b1100001100000000,
    0b1100000000000000,
    0b1100000000000000,
    0b1111110000000000,
    0b1100011000000000,
    0b0000001100000000,
    0b0000001100000000,
    0b1100011000000000,
    0b1111110000000000

};
const DATA_FLASH uint16_t char_6[]={

    0b0011110000000000,
    0b0110000000000000,
    0b1100000000000000,
    0b1100000000000000,
    0b1111110000000000,
    0b1100011000000000,
    0b1100011000000000,
    0b1100011000000000,
    0b1100011000000000,
    0b0111110000000000
};

const DATA_FLASH uint16_t char_7[]={

    0b1111111000000000,
    0b1100011000000000,
    0b0000011000000000,
    0b0000011000000000,
    0b0000110000000000,
    0b0000110000000000,
    0b0000110000000000,
    0b0001100000000000,
    0b0001100000000000,
    0b0011000000000000  
};
const DATA_FLASH uint16_t char_8[]={

    0b0111110000000000,
    0b1100011000000000,
    0b1100011000000000,
    0b1100011000000000,
    0b0111110000000000,
    0b0111110000000000,
    0b1100011000000000,
    0b1100011000000000,
    0b1100011000000000,
    0b0111110000000000

};
const DATA_FLASH uint16_t char_9[]={
    0b0111110000000000,
    0b1100011000000000,
    0b1100011000000000,
    0b1100011000000000,
    0b1100011000000000,
    0b0111111000000000,
    0b0000011000000000,
    0b0000011000000000,
    0b0000110000000000,
    0b0011100000000000
};

const DATA_FLASH uint16_t char_A[]={
	0b0000110000000000,
    0b0001111000000000,
    0b0011111100000000,
    0b0011001100000000,
    0b0011001100000000,
    0b0110000110000000,
    0b0111111110000000,
    0b0110000110000000,
    0b1100000011000000,
    0b1100000011000000,

};
const DATA_FLASH uint16_t char_N[]={


    0b1100001100000000,
    0b1100001100000000,
    0b1110001100000000,
    0b1111001100000000,
    0b1101101100000000,
    0b1100111100000000,
    0b1100011100000000,
    0b1100001100000000,
    0b1100001100000000,
    0b1100001100000000
};
const DATA_FLASH uint16_t char_S[]={

    0b0111110000000000,
    0b1100011000000000,
    0b1100011000000000,
    0b1100000000000000,
    0b0110000000000000,
    0b0001111000000000,
    0b0000011000000000,
    0b1100011000000000,
    0b1100011000000000,
    0b0111110000000000

};

const DATA_FLASH uint16_t char_M[]={
    0b1110000011100000,
    0b1111000111100000,
    0b1101101101100000,
    0b1101101101100000,
    0b1100111001100000,
    0b1100111001100000,
    0b1100010001100000,
    0b1100000001100000,
    0b1100000001100000,
    0b1100000001100000,
};
const DATA_FLASH uint16_t char_P[]={
    0b0111111000000000,
    0b1100001100000000,
    0b1100000110000000,
    0b1100000110000000,
    0b1100001100000000,
    0b1111111000000000,
    0b1100000000000000,
    0b1100000000000000,
    0b1100000000000000,
	0b1100000000000000



};


const DATA_FLASH uint8_t table0len[]={

    ['0'] = 8,
    ['1'] = 8,
    ['2'] = 8,
    ['3'] = 8,
    ['4'] = 8,
    ['5'] = 8,
    ['6'] = 7,
    ['7'] = 8,
    ['8'] = 8,
    ['9'] = 8,

    ['-'] = 5,
    ['.'] = 3,
    [' '] = 2,

	['A'] = 10,
    ['N'] = 8,
	['M'] = 11,
	['P'] = 11,
    ['S'] = 8,

};

const  uint8_t tablehight[]={
    0,10,22
};

const uint8_t *font_table0[] = {

    ['0'] = char_0,
    ['1'] = char_1,
    ['2'] = char_2,
    ['3'] = char_3,
    ['4'] = char_4,
    ['5'] = char_5,
    ['6'] = char_6,
    ['7'] = char_7,
    ['8'] = char_8,
    ['9'] = char_9,

    ['-'] = charSignNeg,
    ['.'] = dot,
    [' '] = space1,

	['A'] = char_A,
    ['N'] = char_N,
    ['S'] = char_S,
	['M'] = char_M,
	['P'] = char_P



    // ['0'] = char_0,
    // ['0'] = char_0,
    // ['0'] = char_0,
};
/*******************************************************************************
 * Description: Characters size 2
 ******************************************************************************/

const DATA_FLASH uint16_t zero_s2[]={
    
	// @462 '0' (9 pixels wide)
	0x00000, //          
	0x0000, //          
	0x1E00, //    ####  
	0x7F00, //  ####### 
	0x6300, //  ##   ## 
	0xE380, // ###   ###
	0xC180, // ##     ##
	0xC180, // ##     ##
	0xC180, // ##     ##
	// 0xC180, // ##     ##
	0xC180, // ##     ##
	0xC180, // ##     ##
	0xC180, // ##     ##
	0xE380, // ###   ###
	0x6300, //  ##   ## 
	0x7F00, //  ####### 
	0x3C00, //   ####   
	0x0000, //          
	0x0000, //          
	0x0000, //          
	0x0000, //          
	0x0000 //  
};     
const DATA_FLASH uint16_t one_s2[]={

	// @506 '1' (9 pixels wide)
	0x0000, //          
	0x0000, //          
	0x0C00, //     ##   
	0x1C00, //    ###   
	0x3C00, //   ####   
	0x6C00, //  ## ##   
	0xCC00, // ##  ##   
	0x0C00, //     ##   
	0x0C00, //     ##   
	// 0x0C00, //     ##   
	0x0C00, //     ##   
	0x0C00, //     ##   
	0x0C00, //     ##   
	0x0C00, //     ##   
	0x0C00, //     ##   
	0x7F80, //  ########
	0x7F80, //  ########
	0x0000, //          
	0x0000, //          
	0x0000, //          
	0x0000, //          
	0x0000 //          
};
const DATA_FLASH uint16_t two_s2[]={

	// @550 '2' (8 pixels wide)
	0x0000, //         
	0x0000, //         
	0x7C00, //  #####  
	0xFE00, // ####### 
	0x4700, //  #   ###
	0x0300, //       ##
	0x0300, //       ##
	0x0300, //       ##
	// 0x0600, //      ## 
	0x0600, //      ## 
	0x0C00, //     ##  
	0x0C00, //     ##  
	0x1800, //    ##   
	0x3000, //   ##    
	0x6000, //  ##     
	0xFF00, // ########
	0xFF00, // ########
	0x0000, //         
	0x0000, //         
	0x0000, //         
	0x0000, //         
	0x0000 //         
};
const DATA_FLASH uint16_t three_s2[]={

	// @572 '3' (8 pixels wide)
	0x0000, //         
	0x0000, //         
	0xFF00, // ########
	0xFF00, // ########
	0x0600, //      ## 
	0x0C00, //     ##  
	0x1C00, //    ###  
	0x1800, //    ##   
	0x3C00, //   ####  
	0x3E00, //   ##### 
	0x0700, //      ###
	// 0x0300, //       ##
	0x0300, //       ##
	0x0300, //       ##
	0x8600, // #    ## 
	0xFE00, // ####### 
	0x7800, //  ####   
	0x0000, //         
	0x0000, //         
	0x0000, //         
	0x0000, //         
	0x0000 //         
};
const DATA_FLASH uint16_t four_s2[]={

	// @594 '4' (10 pixels wide)
	0x0000, //           
	0x0000, //           
	0x0300, //       ##  
	0x0700, //      ###  
	0x0F00, //     ####  
	0x0F00, //     ####  
	0x1B00, //    ## ##  
	0x1B00, //    ## ##  
	0x3300, //   ##  ##  
	0x7300, //  ###  ##  
	// 0x6300, //  ##   ##  
	0xFFC0, // ##########
	0xFFC0, // ##########
	0x0300, //       ##  
	0x0300, //       ##  
	0x0300, //       ##  
	0x0300, //       ##  
	0x0000, //           
	0x0000, //           
	0x0000, //           
	0x0000, //           
	0x0000 //           
};
const DATA_FLASH uint16_t five_s2[]={

	// @638 '5' (8 pixels wide)
	0x0000, //         
	0x0000, //         
	0x7F00, //  #######
	0x7F00, //  #######
	0x6000, //  ##     
	0x6000, //  ##     
	0x6000, //  ##     
	0x6000, //  ##     
	0x7C00, //  #####  
	0x7E00, //  ###### 
	0x0700, //      ###
	// 0x0300, //       ##
	0x0300, //       ##
	0x0300, //       ##
	0x0700, //      ###
	0xFE00, // ####### 
	0xF800, // #####   
	0x0000, //         
	0x0000, //         
	0x0000, //         
	0x0000, //         
	0x0000 //         
};
const DATA_FLASH uint16_t six_s2[]={

	// @660 '6' (9 pixels wide)
	0x0000, //          
	0x0000, //          
	0x0600, //      ##  
	0x1E00, //    ####  
	0x3800, //   ###    
	0x3000, //   ##     
	0x6000, //  ##      
	0x6000, //  ##      
	0xDE00, // ## ####  
	0xFF00, // ######## 
	0xE380, // ###   ###
	0xC180, // ##     ##
	// 0xC100, // ##     ##
	0xC180, // ##     ##
	0xE380, // ###   ###
	0x7F00, //  ####### 
	0x3E00, //   #####  
	0x0000, //          
	0x0000, //          
	0x0000, //          
	0x0000, //          
	0x0000 //          
};
const DATA_FLASH uint16_t seven_s2[]={

	// @704 '7' (9 pixels wide)
	0x0000, //          
	0x0000, //          
	0xFF80, // #########
	0xFF80, // #########
	0x0300, //       ## 
	0x0300, //       ## 
	0x0700, //      ### 
	0x0600, //      ##  
	// 0x0600, //      ##  
	0x0C00, //     ##   
	0x0C00, //     ##   
	0x1800, //    ##    
	0x1800, //    ##    
	0x3800, //   ###    
	0x3000, //   ##     
	0x3000, //   ##     
	0x6000, //  ##      
	0x0000, //          
	0x0000, //          
	0x0000, //          
	0x0000, //          
	0x0000 //          
};
const DATA_FLASH uint16_t eight_s2[]={

	// @748 '8' (9 pixels wide)
	0x0000, //          
	0x0000, //          
	0x3E00, //   #####  
	0x7F00, //  ####### 
	0xE380, // ###   ###
	0xC180, // ##     ##
	0xC180, // ##     ##
	0x6300, //  ##   ## 
	0x3E00, //   #####  
	0x3E00, //   #####  
	0x7700, //  ### ### 
	0xE380, // ###   ###
	// 0xC180, // ##     ##
	0xC180, // ##     ##
	0xE380, // ###   ###
	0x7F00, //  ####### 
	0x3E00, //   #####  
	0x0000, //          
	0x0000, //          
	0x0000, //          
	0x0000, //          
	0x0000 //          
};
const DATA_FLASH uint16_t nine_s2[]={

	// @792 '9' (9 pixels wide)
	0x0000, //          
	0x0000, //          
	0x3E00, //   #####  
	0x7F00, //  ####### 
	0xE380, // ###   ###
	0xC180, // ##     ##
	// 0xC180, // ##     ##
	0xC180, // ##     ##
	0xE380, // ###   ###
	0x7F80, //  ########
	0x3D80, //   #### ##
	0x0300, //       ## 
	0x0300, //       ## 
	0x0600, //      ##  
	0x0E00, //     ###  
	0x3C00, //   ####   
	0x3000, //   ##     
	0x0000, //          
	0x0000, //          
	0x0000, //          
	0x0000, //          
	0x0000, //    
};

const DATA_FLASH uint16_t A_s2[]={

	// @1100 'A' (12 pixels wide)
	0x0000, //             
	0x0000, //             
	0x0600, //      ##     
	0x0600, //      ##     
	0x0600, //      ##     
	0x0F00, //     ####    
	0x0F00, //     ####    
	0x0900, //     #  #    
	0x1980, //    ##  ##   
	0x1980, //    ##  ##   
	0x30C0, //   ##    ##  
	0x3FC0, //   ########  
	0x3FC0, //   ########  
	0x6060, //  ##      ## 
	0x6060, //  ##      ## 
	0x6060, //  ##      ## 
	0xC030, // ##        ##
	0x0000, //             
	0x0000, //             
	0x0000, //             
	0x0000, //             
	0x0000, //             
};
const DATA_FLASH uint16_t B_s2[]={

	// @1144 'B' (9 pixels wide)
	0x0000, //          
	0x0000, //          
	0xFC00, // ######   
	0xFE00, // #######  
	0xC700, // ##   ### 
	0xC300, // ##    ## 
	0xC300, // ##    ## 
	0xC600, // ##   ##  
	0xFC00, // ######   
	0xFF00, // ######## 
	0xC380, // ##    ###
	0xC180, // ##     ##
	0xC180, // ##     ##
	0xC180, // ##     ##
	0xC380, // ##    ###
	0xFF00, // ######## 
	0xFC00, // ######   
	0x0000, //          
	0x0000, //          
	0x0000, //          
	0x0000, //          
	0x0000, //          
};
const DATA_FLASH uint16_t C_s2[]={

	// @1188 'C' (10 pixels wide)
	0x0000, //           
	0x0000, //           
	0x0F80, //     ##### 
	0x3FC0, //   ########
	0x7040, //  ###     #
	0x6000, //  ##       
	0xE000, // ###       
	0xC000, // ##        
	0xC000, // ##        
	0xC000, // ##        
	0xC000, // ##        
	0xC000, // ##        
	0xE000, // ###       
	0x6000, //  ##       
	0x7840, //  ####    #
	0x3FC0, //   ########
	0x0F80, //     ##### 
	0x0000, //           
	0x0000, //           
	0x0000, //           
	0x0000, //           
	0x0000, //           
};
const DATA_FLASH uint16_t D_s2[]={

	// @1232 'D' (11 pixels wide)
	0x0000, //            
	0x0000, //            
	0xFE00, // #######    
	0xFF80, // #########  
	0xC1C0, // ##     ### 
	0xC0C0, // ##      ## 
	0xC0E0, // ##      ###
	0xC060, // ##       ##
	0xC060, // ##       ##
	0xC060, // ##       ##
	0xC060, // ##       ##
	0xC060, // ##       ##
	0xC0E0, // ##      ###
	0xC0C0, // ##      ## 
	0xC380, // ##    ###  
	0xFF80, // #########  
	0xFE00, // #######    
	0x0000, //            
	0x0000, //            
	0x0000, //            
	0x0000, //            
	0x0000, //            
};
const DATA_FLASH uint16_t E_s2[]={

	// @1276 'E' (8 pixels wide)
	0x0000, //         
	0x0000, //         
	0xFF00, // ########
	0xFF00, // ########
	0xC000, // ##      
	0xC000, // ##      
	0xC000, // ##      
	0xC000, // ##      
	0xFE00, // ####### 
	0xFE00, // ####### 
	0xC000, // ##      
	0xC000, // ##      
	0xC000, // ##      
	0xC000, // ##      
	0xC000, // ##      
	0xFF00, // ########
	0xFF00, // ########
	0x0000, //         
	0x0000, //         
	0x0000, //         
	0x0000, //         
	0x0000 //         
};
const DATA_FLASH uint16_t F_s2[]={

	// @1298 'F' (8 pixels wide)
	0x0000, //         
	0x0000, //         
	0xFF00, // ########
	0xFF00, // ########
	0xC000, // ##      
	0xC000, // ##      
	0xC000, // ##      
	0xC000, // ##      
	0xFF00, // ########
	0xFF00, // ########
	0xC000, // ##      
	// 0xC000, // ##      
	0xC000, // ##      
	0xC000, // ##      
	0xC000, // ##      
	0xC000, // ##      
	0xC000, // ##      
	0x0000, //         
	0x0000, //         
	0x0000, //         
	0x0000, //         
	0x0000 //         
};
const DATA_FLASH uint16_t G_s2[]={

	// @1320 'G' (11 pixels wide)
	0x0000, //            
	0x0000, //            
	0x0FC0, //     ###### 
	0x1FE0, //    ########
	0x3820, //   ###     #
	0x6000, //  ##        
	0xE000, // ###        
	0xC000, // ##         
	0xC000, // ##         
	0xC000, // ##         
	0xC3E0, // ##    #####
	0xC3E0, // ##    #####
	0xE060, // ###      ##
	0x6060, //  ##      ##
	0x7060, //  ###     ##
	0x3FE0, //   #########
	0x0FC0, //     ###### 
	0x0000, //            
	0x0000, //            
	0x0000, //            
	0x0000, //            
	0x0000 //            
};
const DATA_FLASH uint16_t H_s2[]={

	// @1364 'H' (10 pixels wide)
	0x0000, //           
	0x0000, //           
	0xC0C0, // ##      ##
	0xC0C0, // ##      ##
	0xC0C0, // ##      ##
	0xC0C0, // ##      ##
	0xC0C0, // ##      ##
	0xC0C0, // ##      ##
	0xFFC0, // ##########
	0xFFC0, // ##########
	0xC0C0, // ##      ##
	0xC0C0, // ##      ##
	0xC0C0, // ##      ##
	0xC0C0, // ##      ##
	0xC0C0, // ##      ##
	0xC0C0, // ##      ##
	0xC0C0, // ##      ##
	0x0000, //           
	0x0000, //           
	0x0000, //           
	0x0000, //           
	0x0000 //           
};
const DATA_FLASH uint16_t I_s2[]={

	// @1408 'I' (2 pixels wide)
	0x0000, //   
	0x00000, //   
	0xC000, // ##
	0xC000, // ##
	0xC000, // ##
	0xC000, // ##
	0xC000, // ##
	0xC000, // ##
	0xC000, // ##
	0xC000, // ##
	0xC000, // ##
	0xC000, // ##
	0xC000, // ##
	0xC000, // ##
	0xC000, // ##
	0xC000, // ##
	0xC000, // ##
	0x0000, //   
	0x0000, //   
	0x0000, //   
	0x0000, //   
	0x0000, //   
};
const DATA_FLASH uint16_t J_s2[]={

	// @1430 'J' (5 pixels wide)
	0x00, //      
	0x00, //      
	0x18, //    ##
	0x18, //    ##
	0x18, //    ##
	0x18, //    ##
	0x18, //    ##
	0x18, //    ##
	0x18, //    ##
	0x18, //    ##
	0x18, //    ##
	0x18, //    ##
	0x18, //    ##
	0x18, //    ##
	0x18, //    ##
	0xF8, // #####
	0xF0, // #### 
	0x00, //      
	0x00, //      
	0x00, //      
	0x00, //      
	0x00, //      
};
const DATA_FLASH uint16_t K_s2[]={

	// @1452 'K' (11 pixels wide)
	0x00, 0x00, //            
	0x00, 0x00, //            
	0xC1, 0xC0, // ##     ### 
	0xC3, 0x80, // ##    ###  
	0xC3, 0x00, // ##    ##   
	0xC7, 0x00, // ##   ###   
	0xCE, 0x00, // ##  ###    
	0xDC, 0x00, // ## ###     
	0xD8, 0x00, // ## ##      
	0xF0, 0x00, // ####       
	0xFC, 0x00, // ######     
	0xDC, 0x00, // ## ###     
	0xCE, 0x00, // ##  ###    
	0xC7, 0x00, // ##   ###   
	0xC3, 0x80, // ##    ###  
	0xC1, 0xC0, // ##     ### 
	0xC0, 0xE0, // ##      ###
	0x00, 0x00, //            
	0x00, 0x00, //            
	0x00, 0x00, //            
	0x00, 0x00, //            
	0x00, 0x00, //            
};
const DATA_FLASH uint16_t L_s2[]={

	// @1496 'L' (9 pixels wide)
	0x00, 0x00, //          
	0x00, 0x00, //          
	0xC0, 0x00, // ##       
	0xC0, 0x00, // ##       
	0xC0, 0x00, // ##       
	0xC0, 0x00, // ##       
	0xC0, 0x00, // ##       
	0xC0, 0x00, // ##       
	0xC0, 0x00, // ##       
	0xC0, 0x00, // ##       
	0xC0, 0x00, // ##       
	0xC0, 0x00, // ##       
	0xC0, 0x00, // ##       
	0xC0, 0x00, // ##       
	0xC0, 0x00, // ##       
	0xFF, 0x80, // #########
	0xFF, 0x80, // #########
	0x00, 0x00, //          
	0x00, 0x00, //          
	0x00, 0x00, //          
	0x00, 0x00, //          
	0x00, 0x00, //          
};
const DATA_FLASH uint16_t M_s2[]={

	// @1540 'M' (13 pixels wide)
	0x0000, //              
	0x0000, //              
	0xC018, // ##         ##
	0xE038, // ###       ###
	// 0xF078, // ####     ####
	0xF078, // ####     ####
	0xF8F8, // #####   #####
	0xD8D8, // ## ##   ## ##
	0xCDD8, // ##  ## ### ##
	0xCD98, // ##  ## ##  ##
	0xC718, // ##   ###   ##
	0xC718, // ##   ###   ##
	0xC218, // ##    #    ##
	0xC018, // ##         ##
	0xC018, // ##         ##
	0xC018, // ##         ##
	0xC018, // ##         ##
	0x0000, //              
	0x0000, //              
	0x0000, //              
	0x0000, //              
	0x0000, //              
};
const DATA_FLASH uint16_t N_s2[]={

	// @1584 'N' (10 pixels wide)
	0x0000, //           
	0x0000, //           
	0xC0C0, // ##      ##
	0xE0C0, // ###     ##
	0xE0C0, // ###     ##
	0xF0C0, // ####    ##
	0xF8C0, // #####   ##
	0xD8C0, // ## ##   ##
	0xDCC0, // ## ###  ##
	0xCCC0, // ##  ##  ##
	0xCEC0, // ##  ### ##
	0xC6C0, // ##   ## ##
	0xC3C0, // ##    ####
	0xC3C0, // ##    ####
	0xC1C0, // ##     ###
	0xC1C0, // ##     ###
	0xC0C0, // ##      ##
	0x0000, //           
	0x0000, //           
	0x0000, //           
	0x0000, //           
	0x0000 //           
};
const DATA_FLASH uint16_t O_s2[]={

	// @1628 'O' (12 pixels wide)
	0x00, 0x00, //             
	0x00, 0x00, //             
	0x1F, 0x80, //    ######   
	0x3F, 0xC0, //   ########  
	0x70, 0xE0, //  ###    ### 
	0x60, 0x60, //  ##      ## 
	0xC0, 0x70, // ##       ###
	0xC0, 0x30, // ##        ##
	0xC0, 0x30, // ##        ##
	0xC0, 0x30, // ##        ##
	0xC0, 0x30, // ##        ##
	0xC0, 0x30, // ##        ##
	0xE0, 0x30, // ###       ##
	0x60, 0x60, //  ##      ## 
	0x70, 0xE0, //  ###    ### 
	0x3F, 0xC0, //   ########  
	0x1F, 0x80, //    ######   
	0x00, 0x00, //             
	0x00, 0x00, //             
	0x00, 0x00, //             
	0x00, 0x00, //             
	0x00, 0x00, //             
};
const DATA_FLASH uint16_t P_s2[]={

	// @1672 'P' (9 pixels wide)
	0x00, 0x00, //          
	0x00, 0x00, //          
	0xFC, 0x00, // ######   
	0xFF, 0x00, // ######## 
	0xC3, 0x80, // ##    ###
	0xC1, 0x80, // ##     ##
	0xC1, 0x80, // ##     ##
	0xC1, 0x80, // ##     ##
	0xC1, 0x80, // ##     ##
	0xC3, 0x00, // ##    ## 
	0xFF, 0x00, // ######## 
	0xFC, 0x00, // ######   
	0xC0, 0x00, // ##       
	0xC0, 0x00, // ##       
	0xC0, 0x00, // ##       
	0xC0, 0x00, // ##       
	0xC0, 0x00, // ##       
	0x00, 0x00, //          
	0x00, 0x00, //          
	0x00, 0x00, //          
	0x00, 0x00, //          
	0x00, 0x00, //          
};
const DATA_FLASH uint16_t Q_s2[]={

	// @1716 'Q' (13 pixels wide)
	0x00, 0x00, //              
	0x00, 0x00, //              
	0x1F, 0x80, //    ######    
	0x3F, 0xC0, //   ########   
	0x70, 0xE0, //  ###    ###  
	0x60, 0x60, //  ##      ##  
	0xC0, 0x70, // ##       ### 
	0xC0, 0x30, // ##        ## 
	0xC0, 0x30, // ##        ## 
	0xC0, 0x30, // ##        ## 
	0xC0, 0x30, // ##        ## 
	0xC0, 0x30, // ##        ## 
	0xE0, 0x30, // ###       ## 
	0x60, 0x60, //  ##      ##  
	0x70, 0xE0, //  ###    ###  
	0x3F, 0xC0, //   ########   
	0x1F, 0x80, //    ######    
	0x00, 0x00, //              
	0x1F, 0x00, //    #####     
	0x1F, 0xF8, //    ##########
	0x01, 0xF8, //        ######
	0x00, 0x00, //              
};
const DATA_FLASH uint16_t R_s2[]={

	// @1760 'R' (10 pixels wide)
	0x00, 0x00, //           
	0x00, 0x00, //           
	0xFE, 0x00, // #######   
	0xFF, 0x00, // ########  
	0xC3, 0x80, // ##    ### 
	0xC1, 0x80, // ##     ## 
	0xC1, 0x80, // ##     ## 
	0xC1, 0x80, // ##     ## 
	0xC3, 0x00, // ##    ##  
	0xFF, 0x00, // ########  
	0xFC, 0x00, // ######    
	0xCC, 0x00, // ##  ##    
	0xCE, 0x00, // ##  ###   
	0xC7, 0x00, // ##   ###  
	0xC3, 0x00, // ##    ##  
	0xC3, 0x80, // ##    ### 
	0xC1, 0xC0, // ##     ###
	0x00, 0x00, //           
	0x00, 0x00, //           
	0x00, 0x00, //           
	0x00, 0x00, //           
	0x00, 0x00, //           
};
const DATA_FLASH uint16_t S_s2[]={

	// @1804 'S' (9 pixels wide)
	0x0000, //          
	0x0000, //          
	0x3F00, //   ###### 
	0x7F80, //  ########
	0xE080, // ###     #
	0xC000, // ##       
	0xC000, // ##       
	0xE000, // ###      
	0x7800, //  ####    
	// 0x3E00, //   #####  
	0x0F00, //     #### 
	0x0380, //       ###
	0x0180, //        ##
	0x0180, //        ##
	0x8380, // #     ###
	0xFF00, // ######## 
	0x7E00, //  ######  
	0x0000, //          
	0x0000, //          
	0x0000, //          
	0x0000, //          
	0x0000, //          
};
const DATA_FLASH uint16_t T_s2[]={

	// @1848 'T' (12 pixels wide)
	0x0000, //             
	0x0000, //             
	0xFFF0, // ############
	0xFFF0, // ############
	0x0600, //      ##     
	0x0600, //      ##     
	0x0600, //      ##     
	0x0600, //      ##     
	0x0600, //      ##     
	// 0x0600, //      ##     
	0x0600, //      ##     
	0x0600, //      ##     
	0x0600, //      ##     
	0x0600, //      ##     
	0x0600, //      ##     
	0x0600, //      ##     
	0x0600, //      ##     
	0x0000, //             
	0x0000, //             
	0x0000, //             
	0x0000, //             
	0x0000//             
};
const DATA_FLASH uint16_t U_s2[]={

	// @1892 'U' (10 pixels wide)
	0x00, 0x00, //           
	0x00, 0x00, //           
	0xC0, 0xC0, // ##      ##
	0xC0, 0xC0, // ##      ##
	0xC0, 0xC0, // ##      ##
	0xC0, 0xC0, // ##      ##
	0xC0, 0xC0, // ##      ##
	0xC0, 0xC0, // ##      ##
	0xC0, 0xC0, // ##      ##
	0xC0, 0xC0, // ##      ##
	0xC0, 0xC0, // ##      ##
	0xC0, 0xC0, // ##      ##
	0xC0, 0xC0, // ##      ##
	0xC0, 0xC0, // ##      ##
	0xE1, 0xC0, // ###    ###
	0x7F, 0x80, //  ######## 
	0x3F, 0x00, //   ######  
	0x00, 0x00, //           
	0x00, 0x00, //           
	0x00, 0x00, //           
	0x00, 0x00, //           
	0x00, 0x00, //           
};
const DATA_FLASH uint16_t V_s2[]={

	// @1936 'V' (12 pixels wide)
	0x00, 0x00, //             
	0x00, 0x00, //             
	0xE0, 0x70, // ###      ###
	0x60, 0x60, //  ##      ## 
	0x70, 0x60, //  ###     ## 
	0x70, 0xE0, //  ###    ### 
	0x30, 0xC0, //   ##    ##  
	0x39, 0xC0, //   ###  ###  
	0x39, 0xC0, //   ###  ###  
	0x19, 0x80, //    ##  ##   
	0x1F, 0x80, //    ######   
	0x0F, 0x00, //     ####    
	0x0F, 0x00, //     ####    
	0x0F, 0x00, //     ####    
	0x06, 0x00, //      ##     
	0x06, 0x00, //      ##     
	0x06, 0x00, //      ##     
	0x00, 0x00, //             
	0x00, 0x00, //             
	0x00, 0x00, //             
	0x00, 0x00, //             
	0x00, 0x00, //             
};
const DATA_FLASH uint16_t W_s2[]={

	// @1980 'W' (17 pixels wide)
	0x0000, //                  
	0x0000, //                  
	0x6083,  //  ##     #     ##
	0x61C3,  //  ##    ###    ## 
	0x61C3,  //  ##    ###    ## 
	0x6143,  //  ##    # #    ## 
	0x7367,  //  ###  ## ##  ### 
	0x3367,  //   ##  ## ##  ### 
	0x3366,  //   ##  ## ##  ##  
	0x3776,  //   ## ### ### ##  
	0x3E3E,  //   #####   #####  
	// 0x1E3C,  //    ####   ####   
	0x1E3C,  //    ####   ####   
	0x1C1C,  //    ###     ###   
	0x1C1C,  //    ###     ###   
	0x0C18,  //     ##     ##    
	0x0808,  //     #       #    
	0x0000,  //                  
	0x0000,  //                  
	0x0000,  //                  
	0x0000,  //                  
	0x0000 //                  
};
const DATA_FLASH uint16_t X_s2[]={

	// @2046 'X' (11 pixels wide)
	0x00, 0x00, //            
	0x00, 0x00, //            
	0xE0, 0xE0, // ###     ###
	0x71, 0xC0, //  ###   ### 
	0x71, 0xC0, //  ###   ### 
	0x3B, 0x80, //   ### ###  
	0x3B, 0x80, //   ### ###  
	0x1B, 0x00, //    ## ##   
	0x0E, 0x00, //     ###    
	0x0E, 0x00, //     ###    
	0x1F, 0x00, //    #####   
	0x1B, 0x00, //    ## ##   
	0x3B, 0x80, //   ### ###  
	0x3B, 0x80, //   ### ###  
	0x71, 0xC0, //  ###   ### 
	0x61, 0xC0, //  ##    ### 
	0xE0, 0xE0, // ###     ###
	0x00, 0x00, //            
	0x00, 0x00, //            
	0x00, 0x00, //            
	0x00, 0x00, //            
	0x00, 0x00, //            
};
const DATA_FLASH uint16_t Y_s2[]={

	// @2090 'Y' (12 pixels wide)
	0x00, 0x00, //             
	0x00, 0x00, //             
	0xE0, 0x70, // ###      ###
	0x70, 0x60, //  ###     ## 
	0x70, 0xE0, //  ###    ### 
	0x39, 0xC0, //   ###  ###  
	0x39, 0xC0, //   ###  ###  
	0x1F, 0x80, //    ######   
	0x0F, 0x00, //     ####    
	0x0F, 0x00, //     ####    
	0x06, 0x00, //      ##     
	0x06, 0x00, //      ##     
	0x06, 0x00, //      ##     
	0x06, 0x00, //      ##     
	0x06, 0x00, //      ##     
	0x06, 0x00, //      ##     
	0x06, 0x00, //      ##     
	0x00, 0x00, //             
	0x00, 0x00, //             
	0x00, 0x00, //             
	0x00, 0x00, //             
	0x00, 0x00, //             
};
const DATA_FLASH uint16_t Z_s2[]={

	// @2134 'Z' (10 pixels wide)
	0x00, 0x00, //           
	0x00, 0x00, //           
	0xFF, 0xC0, // ##########
	0xFF, 0xC0, // ##########
	0x01, 0xC0, //        ###
	0x03, 0x80, //       ### 
	0x03, 0x00, //       ##  
	0x07, 0x00, //      ###  
	0x0E, 0x00, //     ###   
	0x0C, 0x00, //     ##    
	0x1C, 0x00, //    ###    
	0x38, 0x00, //   ###     
	0x30, 0x00, //   ##      
	0x70, 0x00, //  ###      
	0xE0, 0x00, // ###       
	0xFF, 0xC0, // ##########
	0xFF, 0xC0, // ##########
	0x00, 0x00, //           
	0x00, 0x00, //           
	0x00, 0x00, //           
	0x00, 0x00, //           
	0x00, 0x00, //           

};


const DATA_FLASH uint16_t a_s2[]={

	// @2354 'a' (8 pixels wide)
	0x0000, //         
	0x0000, //         
	0x0000, //         
	0x0000, //         
	0x0000, //         
	0x0000, //         
	0x3E00, //   ##### 
	0x7F00, //  #######
	0x4300, //  #    ##
	0x0300, //       ##
	0x3F00, //   ######
	0x7F00, //  #######
	0xE300, // ###   ##
	// 0xC300, // ##    ##
	0xC700, // ##   ###
	0xFF00, // ########
	0x7B00, //  #### ##
	0x0000, //         
	0x0000, //         
	0x0000, //         
	0x0000, //         
	0x0000, //         
};
const DATA_FLASH uint16_t b_s2[]={

	// @2376 'b' (9 pixels wide)
	0x0000, //          
	0x0000, //          
	0xC000, // ##       
	0xC000, // ##       
	0xC000, // ##       
	0xC000, // ##       
	0xDE00, // ## ####  
	0xFF00, // ######## 
	0xE380, // ###   ###
	0xC180, // ##     ##
	0xC180, // ##     ##
	0xC180, // ##     ##
	// 0xC180, // ##     ##
	0xC180, // ##     ##
	0xC300, // ##    ## 
	0xFF00, // ######## 
	0x7C00, //  #####   
	0x0000, //          
	0x0000, //          
	0x0000, //          
	0x0000, //          
	0x0000, //          
};
const DATA_FLASH uint16_t c_s2[]={

	// @2420 'c' (8 pixels wide)
	0x0000, //         
	0x0000, //         
	0x0000, //         
	0x0000, //         
	0x0000, //         
	0x0000, //         
	0x3E00, //   ##### 
	0x7F00, //  #######
	0x6100, //  ##    #
	0xC000, // ##      
	0xC000, // ##      
	// 0xC000, // ##      
	0xC000, // ##      
	0xC000, // ##      
	0xE100, // ###    #
	0x7F00, //  #######
	0x3E00, //   ##### 
	0x0000, //         
	0x0000, //         
	0x0000, //         
	0x0000, //         
	0x0000, //         
};
const DATA_FLASH uint16_t d_s2[]={

	// @2442 'd' (9 pixels wide)
	0x0000, //          
	0x0000, //          
	0x0180, //        ##
	0x0180, //        ##
	0x0180, //        ##
	0x0180, //        ##
	0x3F80, //   #######
	0x7F80, //  ########
	0x6180, //  ##    ##
	0xC180, // ##     ##
	// 0xC180, // ##     ##
	0xC180, // ##     ##
	0xC180, // ##     ##
	0xC180, // ##     ##
	0xE380, // ###   ###
	0x7F80, //  ########
	0x3C80, //   ####  #
	0x0000, //          
	0x0000, //          
	0x0000, //          
	0x0000, //          
	0x0000, //          
};
const DATA_FLASH uint16_t e_s2[]={

	// @2486 'e' (9 pixels wide)
	0x0000, //          
	0x0000, //          
	0x0000, //          
	0x0000, //          
	0x0000, //          
	0x0000, //          
	0x3E00, //   #####  
	0x7F00, //  ####### 
	0x6380, //  ##   ###
	0xC180, // ##     ##
	0xFF80, // #########
	0xFF80, // #########
	0xC000, // ##       
	// 0xC000, // ##       
	0x6100, //  ##    # 
	0x7F80, //  ########
	0x1F00, //    ##### 
	0x0000, //          
	0x0000, //          
	0x0000, //          
	0x0000, //          
	0x0000, //          
};
const DATA_FLASH uint16_t f_s2[]={

	// @2530 'f' (7 pixels wide)
	0x0000, //        
	0x0000, //        
	0x1E00, //    ####
	0x3E00, //   #####
	0x3000, //   ##   
	0x3000, //   ##   
	0xFE00, // #######
	0xFE00, // #######
	0x3000, //   ##   
	0x3000, //   ##   
	0x3000, //   ##   
	// 0x3000, //   ##   
	0x3000, //   ##   
	0x3000, //   ##   
	0x3000, //   ##   
	0x3000, //   ##   
	0x3000, //   ##   
	0x0000, //        
	0x0000, //        
	0x0000, //        
	0x0000, //        
	0x0000, //        
};
const DATA_FLASH uint16_t g_s2[]={

	// @2552 'g' (9 pixels wide)
	0x0000, //          
	0x0000, //          
	0x0000, //          
	0x0000, //          
	0x0000, //          
	0x0000, //          
	0x1F80, //    ######
	0x7F80, //  ########
	0x6180, //  ##    ##
	0xC180, // ##     ##
	// 0xC180, // ##     ##
	0xC180, // ##     ##
	0xC180, // ##     ##
	0xC180, // ##     ##
	0xE380, // ###   ###
	0x7F80, //  ########
	0x3D80, //   #### ##
	0x0180, //        ##
	0x4380, //  #    ###
	0x7F00, //  ####### 
	0x3E00, //   #####  
	0x0000, //          
};
const DATA_FLASH uint16_t h_s2[]={

	// @2596 'h' (9 pixels wide)
	0x0000, //         
	0x0000, //         
	0xC000, // ##      
	0xC000, // ##      
	0xC000, // ##      
	0xC000, // ##      
	0xDC00, // ## ###  
	0xFE00, // ####### 
	0xE700, // ###  ###
	0xC300, // ##    ##
	0xC300, // ##    ##
	// 0xC300, // ##    ##
	0xC300, // ##    ##
	0xC300, // ##    ##
	0xC300, // ##    ##
	0xC300, // ##    ##
	0xC300, // ##    ##
	0x0000, //         
	0x0000, //         
	0x0000, //         
	0x0000, //         
	0x0000, //         
};
const DATA_FLASH uint16_t i_s2[]={

	// @2618 'i' (2 pixels wide)
	0x0000, //   
	0x0000, //   
	0xC000, // ##
	0xC000, // ##
	0x0000, //   
	0x0000, //   
	0xC000, // ##
	0xC000, // ##
	0xC000, // ##
	0xC000, // ##
	0xC000, // ##
	// 0xC000, // ##
	0xC000, // ##
	0xC000, // ##
	0xC000, // ##
	0xC000, // ##
	0xC000, // ##
	0x0000, //   
	0x0000, //   
	0x0000, //   
	0x0000, //   
	0x0000, //   
};
const DATA_FLASH uint16_t j_s2[]={

	// @2640 'j' (4 pixels wide)
	0x0000, //     
	0x0000, //     
	0x3000, //   ##
	0x3000, //   ##
	0x0000, //     
	0x0000, //     
	0x3000, //   ##
	0x3000, //   ##
	0x3000, //   ##
	0x3000, //   ##
	// 0x3000, //   ##
	0x3000, //   ##
	0x3000, //   ##
	0x3000, //   ##
	0x3000, //   ##
	0x3000, //   ##
	0x3000, //   ##
	0x3000, //   ##
	0x3000, //   ##
	0xF000, // ####
	0xE000, // ### 
	0x0000, //     
};
const DATA_FLASH uint16_t k_s2[]={

	// @2662 'k' (9 pixels wide)
	0x00, 0x00, //          
	0x00, 0x00, //          
	0xC0, 0x00, // ##       
	0xC0, 0x00, // ##       
	0xC0, 0x00, // ##       
	0xC0, 0x00, // ##       
	0xC3, 0x80, // ##    ###
	0xC7, 0x00, // ##   ### 
	0xCE, 0x00, // ##  ###  
	// 0xCE, 0x00, // ##  ###  
	0xDC, 0x00, // ## ###   
	0xF0, 0x00, // ####     
	0xFC, 0x00, // ######   
	0xDC, 0x00, // ## ###   
	0xCE, 0x00, // ##  ###  
	0xC7, 0x00, // ##   ### 
	0xC3, 0x80, // ##    ###
	0x00, 0x00, //          
	0x00, 0x00, //          
	0x00, 0x00, //          
	0x00, 0x00, //          
	0x00, 0x00, //          
};
const DATA_FLASH uint16_t l_s2[]={

	// @2706 'l' (4 pixels wide)
	0x00, //     
	0x00, //     
	0xC0, // ##  
	0xC0, // ##  
	0xC0, // ##  
	0xC0, // ##  
	0xC0, // ##  
	0xC0, // ##  
	0xC0, // ##  
	0xC0, // ##  
	// 0xC0, // ##  
	0xC0, // ##  
	0xC0, // ##  
	0xC0, // ##  
	0xC0, // ##  
	0xF0, // ####
	0x70, //  ###
	0x00, //     
	0x00, //     
	0x00, //     
	0x00, //     
	0x00, //     
};
const DATA_FLASH uint16_t m_s2[]={

	// @2728 'm' (14 pixels wide)
	0x00, 0x00, //               
	0x00, 0x00, //               
	0x00, 0x00, //               
	0x00, 0x00, //               
	0x00, 0x00, //               
	0x00, 0x00, //               
	0xDC, 0x78, // ## ###   #### 
	0xFE, 0xFC, // ####### ######
	0xE7, 0x8C, // ###  ####   ##
	0xC3, 0x0C, // ##    ##    ##
	0xC3, 0x0C, // ##    ##    ##
	// 0xC3, 0x0C, // ##    ##    ##
	0xC3, 0x0C, // ##    ##    ##
	0xC3, 0x0C, // ##    ##    ##
	0xC3, 0x0C, // ##    ##    ##
	0xC3, 0x0C, // ##    ##    ##
	0xC3, 0x0C, // ##    ##    ##
	0x00, 0x00, //               
	0x00, 0x00, //               
	0x00, 0x00, //               
	0x00, 0x00, //               
	0x00, 0x00, //               
};
const DATA_FLASH uint16_t n_s2[]={

	// @2772 'n' (8 pixels wide)
	0x0000, //         
	0x0000, //         
	0x0000, //         
	0x0000, //         
	0x0000, //         
	0x0000, //         
	0xDC00, // ## ###  
	0xFE00, // ####### 
	0xE700, // ###  ###
	0xC300, // ##    ##
	0xC300, // ##    ##
	// 0xC300, // ##    ##
	0xC300, // ##    ##
	0xC300, // ##    ##
	0xC300, // ##    ##
	0xC300, // ##    ##
	0xC300, // ##    ##
	0x0000, //         
	0x0000, //         
	0x0000, //         
	0x0000, //         
	0x0000, //         
};
const DATA_FLASH uint16_t o_s2[]={

	// @2794 'o' (9 pixels wide)
	0x0000, //          
	0x0000, //          
	0x0000, //          
	0x0000, //          
	0x0000, //          
	0x0000, //          
	0x3E00, //   #####  
	0x7F00, //  ####### 
	0x6300, //  ##   ## 
	0xC180, // ##     ##
	0xC180, // ##     ##
	// 0xC180, // ##     ##
	0xC180, // ##     ##
	0xC180, // ##     ##
	0x6300, //  ##   ## 
	0x7F00, //  ####### 
	0x3E00, //   #####  
	0x0000, //          
	0x0000, //          
	0x0000, //          
	0x0000, //          
	0x0000 //          
};
const DATA_FLASH uint16_t p_s2[]={

	// @2838 'p' (9 pixels wide)
	0x00, 0x00, //          
	0x00, 0x00, //          
	0x00, 0x00, //          
	0x00, 0x00, //          
	0x00, 0x00, //          
	0x00, 0x00, //          
	0x9E, 0x00, // #  ####  
	0xFF, 0x00, // ######## 
	0xE3, 0x80, // ###   ###
	0xC1, 0x80, // ##     ##
	// 0xC1, 0x80, // ##     ##
	0xC1, 0x80, // ##     ##
	0xC1, 0x80, // ##     ##
	0xC1, 0x80, // ##     ##
	0xC3, 0x00, // ##    ## 
	0xFF, 0x00, // ######## 
	0xFC, 0x00, // ######   
	0xC0, 0x00, // ##       
	0xC0, 0x00, // ##       
	0xC0, 0x00, // ##       
	0xC0, 0x00, // ##       
	0x00, 0x00, //          
};
const DATA_FLASH uint16_t q_s2[]={

	// @2882 'q' (9 pixels wide)
	0x00, 0x00, //          
	0x00, 0x00, //          
	0x00, 0x00, //          
	0x00, 0x00, //          
	0x00, 0x00, //          
	0x00, 0x00, //          
	0x1F, 0x80, //    ######
	0x7F, 0x80, //  ########
	0x61, 0x80, //  ##    ##
	0xC1, 0x80, // ##     ##
	// 0xC1, 0x80, // ##     ##
	0xC1, 0x80, // ##     ##
	0xC1, 0x80, // ##     ##
	0xC1, 0x80, // ##     ##
	0xE3, 0x80, // ###   ###
	0x7F, 0x80, //  ########
	0x3D, 0x80, //   #### ##
	0x01, 0x80, //        ##
	0x01, 0x80, //        ##
	0x01, 0x80, //        ##
	0x01, 0x80, //        ##
	0x00, 0x00, //          
};
const DATA_FLASH uint16_t r_s2[]={

	// @2926 'r' (6 pixels wide)
	0x0000, //       
	0x0000, //       
	0x0000, //       
	0x0000, //       
	0x0000, //       
	0x0000, //       
	0xDC00, // ## ###
	0xFC00, // ######
	0xE000, // ###   
	0xC000, // ##    
	// 0xC000, // ##    
	0xC000, // ##    
	0xC000, // ##    
	0xC000, // ##    
	0xC000, // ##    
	0xC000, // ##    
	0xC000, // ##    
	0x0000, //       
	0x0000, //       
	0x0000, //       
	0x0000, //       
	0x0000, //       
};
const DATA_FLASH uint16_t s_s2[]={

	// @2948 's' (7 pixels wide)
	0x0000, //        
	0x0000, //        
	0x0000, //        
	0x0000, //        
	0x0000, //        
	0x0000, //        
	0x7C00, //  ##### 
	0xFE00, // #######
	0xC200, // ##    #
	0xC000, // ##     
	0xF000, // ####   
	0x7C00, //  ##### 
	0x1E00, //    ####
	0x0600, //      ##
	0x8600, // #    ##
	0xFE00, // #######
	0x7C00, //  ##### 
	0x0000, //        
	0x0000, //        
	0x0000, //        
	0x0000, //        
	0x0000 //        
};
const DATA_FLASH uint16_t t_s2[]={

	// @2970 't' (7 pixels wide)
	0x0000, //        
	0x0000, //        
	0x0000, //        
	0x0000, //        
	0x3000, //   ##   
	0x3000, //   ##   
	0xFE00, // #######
	0xFE00, // #######
	0x3000, //   ##   
	0x3000, //   ##   
	0x3000, //   ##   
	// 0x3000, //   ##   
	0x3000, //   ##   
	0x3000, //   ##   
	0x3200, //   ##  #
	0x3E00, //   #####
	0x1C00, //    ### 
	0x0000, //        
	0x0000, //        
	0x0000, //        
	0x0000, //        
	0x0000, //        
};
const DATA_FLASH uint16_t u_s2[]={

	// @2992 'u' (8 pixels wide)
	0x0000, //         
	0x0000, //         
	0x0000, //         
	0x0000, //         
	0x0000, //         
	0x0000, //         
	0xC300, // ##    ##
	0xC300, // ##    ##
	0xC300, // ##    ##
	0xC300, // ##    ##
	0xC300, // ##    ##
	// 0xC300, // ##    ##
	0xC300, // ##    ##
	0xC300, // ##    ##
	0xE700, // ###  ###
	0x7F00, //  #######
	0x3900, //   ###  #
	0x0000, //         
	0x0000, //         
	0x0000, //         
	0x0000, //         
	0x0000, //         
};
const DATA_FLASH uint16_t v_s2[]={

	// @3014 'v' (10 pixels wide)
	0x0000, //           
	0x0000, //           
	0x0000, //           
	0x0000, //           
	0x0000, //           
	0x0000, //           
	0xE1C0, // ###    ###
	0x6180, //  ##    ## 
	0x6180, //  ##    ## 
	0x7380, //  ###  ### 
	// 0x3300, //   ##  ##  
	0x3B00, //   ### ##  
	0x1F00, //    #####  
	0x1E00, //    ####   
	0x1E00, //    ####   
	0x0C00, //     ##    
	0x0C00, //     ##    
	0x0000, //           
	0x0000, //           
	0x0000, //           
	0x0000, //           
	0x0000  //           
};
const DATA_FLASH uint16_t w_s2[]={

	// @3058 'w' (16 pixels wide)
	0x0000, //                 
	0x0000, //                 
	0x0000, //                 
	0x0000, //                 
	0x0000, //                 
	0x0000, //                 
	0xE183, // ###    ##     ##
	0xE3C7, // ###   ####   ###
	0x63C6, //  ##   ####   ## 
	0x73C6, //  ###  ####   ## 
	// 0x76EE, //  ### ## ### ### 
	0x366C, //   ## ##  ## ##  
	0x366C, //   ## ##  ## ##  
	0x3E7C, //   #####  #####  
	0x1C38, //    ###    ###   
	0x1C38, //    ###    ###   
	0x1C38, //    ###    ###   
	0x0000, //                 
	0x0000, //                 
	0x0000, //                 
	0x0000, //                 
	0x0000, //                 
};
const DATA_FLASH uint16_t x_s2[]={

	// @3102 'x' (10 pixels wide)
	0x0000, //           
	0x0000, //           
	0x0000, //           
	0x0000, //           
	0x0000, //           
	0x0000, //           
	0xE1C0, // ###    ###
	0x7380, //  ###  ### 
	0x3F00, //   ######  
	0x1E00, //    ####   
	0x1E00, //    ####   
	// 0x0C00, //     ##    
	0x1E00, //    ####   
	0x3F00, //   ######  
	0x3F00, //   ######  
	0x7380, //  ###  ### 
	0xE1C0, // ###    ###
	0x0000, //           
	0x0000, //           
	0x0000, //           
	0x0000, //           
	0x0000, //           
};
const DATA_FLASH uint16_t y_s2[]={

	// @3146 'y' (10 pixels wide)
	0x0000, //           
	0x0000, //           
	0x0000, //           
	0x0000, //           
	0x0000, //           
	0x0000, //           
	0xE1C0, // ###    ###
	0x61C0, //  ##    ###
	0x7180, //  ###   ## 
	0x7180, //  ###   ## 
	0x3380, //   ##  ### 
	0x3B00, //   ### ##  
	0x1B00, //    ## ##  
	0x1B00, //    ## ##  
	0x1E00, //    ####   
	0x0E00, //     ###   
	0x0E00, //     ###   
	0x0C00, //     ##    
	0x1C00, //    ###    
	0x7800, //  ####     
	0x7000, //  ###      
	0x0000, //           
};
const DATA_FLASH uint16_t z_s2[]={

	// @3190 'z' (7 pixels wide)
	0x0000, //        
	0x0000, //        
	0x0000, //        
	0x0000, //        
	0x0000, //        
	0x0000, //        
	0xFE00, // #######
	0xFE00, // #######
	0x0E00, //     ###
	0x1C00, //    ### 
	0x1800, //    ##  
	// 0x3800, //   ###  
	0x3000, //   ##   
	0x7000, //  ###   
	0xE000, // ###    
	0xFE00, // #######
	0xFE00, // #######
	0x0000, //        
	0x0000, //        
	0x0000, //        
	0x0000, //        
	0x0000, //        
};

const DATA_FLASH uint16_t signedNeg[]={

    0x0000, //      
	0x0000, //      
	0x0000, //      
	0x0000, //      
	0x0000, //      
	0x0000, //      
	// 0x0000, //      
	0x0000, //      
	0x0000, //      
	0x0000, //      
	0xFE00, // ######
	0xFE00, // ######
	0x0000, //      
	0x0000, //      
	0x0000, //      
	0x0000, //      
	0x0000, //      
	0x0000, //      
	0x0000, //      
	0x0000, //      
	0x0000, //      
	0x0000 //   

};

const DATA_FLASH uint16_t space[]={

	0x0000, //   
	0x0000, //   
	0x0000, //   
	0x0000, //   
	0x0000, //   
	0x0000, //   
	0x0000, //   
	0x0000, //   
	0x0000, //   
	0x0000, //   
	0x0000, //   
	0x0000, //   
	0x0000, //   
	0x0000, //   
	0x0000, //   
	0x0000, //   
	0x0000, //   
	0x0000, //   
	0x0000, //   
	0x0000, //   
	0x0000, //   
	0x0000  //  

};


const uint8_t table1len[]={


    ['-'] = 5,
    [' '] = 2,


    ['0'] = 9,
    ['1'] = 9,
    ['2'] = 8,
    ['3'] = 8,
    ['4'] = 10,
    ['5'] = 8,
    ['6'] = 9,
    ['7'] = 9,
    ['8'] = 9,
    ['9'] = 9,

    // ['A'] = 12,
    // ['B'] = 9,
    // ['C'] = 10,
    // ['D'] = 11,
    // ['E'] = 8,
    ['F'] = 8,
    // ['G'] = 11,
    // ['H'] = 10,
    // ['I'] = 2,
    // ['J'] = 5,
    // ['K'] = 11,
    // ['L'] = 9,
    ['M'] = 13,
    // ['N'] = 10,
    // ['O'] = 12,
    // ['P'] = 9,
    // ['Q'] = 13,
    // ['R'] = 10,
    ['S'] = 9,
    ['T'] = 12,
    // ['U'] = 10,
    // ['V'] = 12,
    ['W'] = 17,
    // ['X'] = 11,
    // ['Y'] = 12,
    // ['Z'] = 10,


//    "Sun", "Mon", "Tue", "Wed", "Thu", "Fri" ,"Sat"

    ['a'] = 8,
    // ['b'] = 9,
    // ['c'] = 8,
    ['d'] = 9,
    ['e'] = 9,
    // ['f'] = 7,
    // ['g'] = 9,
    ['h'] = 9,
    ['i'] = 2,
    // ['j'] = 4,
    // ['k'] = 9,
    // ['l'] = 4,
    // ['m'] = 14,
    ['n'] = 8,
    ['o'] = 9,
    // ['p'] = 9,
    // ['q'] = 9,
    ['r'] = 6,
    // ['s'] = 7,
    ['t'] = 7,
    ['u'] = 8,
    // ['v'] = 10,
    // ['w'] = 16,
    // ['x'] = 10,
    // ['y'] = 10,
    // ['z'] = 7

};
const uint16_t *font_table1[] = {

    ['-'] = signedNeg,
    [' '] = space,

    ['0'] = zero_s2,
    ['1'] = one_s2,
    ['2'] = two_s2,
    ['3'] = three_s2,
    ['4'] = four_s2,
    ['5'] = five_s2,
    ['6'] = six_s2,
    ['7'] = seven_s2,
    ['8'] = eight_s2,
    ['9'] = nine_s2,

    // ['A'] = A_s2,
    // ['B'] = b_s2,
    // ['C'] = C_s2,
    // ['D'] = D_s2,
    // ['E'] = E_s2,
    ['F'] = F_s2,
    // ['G'] = G_s2,
    // ['H'] = H_s2,
    // ['I'] = I_s2,
    // ['J'] = J_s2,
    // ['K'] = K_s2,
    // ['L'] = L_s2,
    ['M'] = M_s2,
    // ['N'] = N_s2,
    // ['O'] = O_s2,
    // ['P'] = P_s2,
    // ['Q'] = Q_s2,
    // ['R'] = R_s2,
    ['S'] = S_s2,
    ['T'] = T_s2,
    // ['U'] = U_s2,
    // ['V'] = V_s2,
    ['W'] = W_s2,
    // ['X'] = X_s2,
    // ['Y'] = Y_s2,
    // ['Z'] = Z_s2,


//    "Sun", "Mon", "Tue", "Wed", "Thu", "Fri" ,"Sat"
    ['a'] = a_s2,
    // ['b'] = b_s2,
    // ['c'] = c_s2,
    ['d'] = d_s2,
    ['e'] = e_s2,
    // ['f'] = f_s2,
    // ['g'] = g_s2,
    ['h'] = h_s2,
    ['i'] = i_s2,
    // ['j'] = j_s2,
    // ['k'] = k_s2,
    // ['l'] = l_s2,
    // ['m'] = m_s2,
    ['n'] = n_s2,
    ['o'] = o_s2,
    // ['p'] = p_s2,
    // ['q'] = q_s2,
    ['r'] = r_s2,
    // ['s'] = s_s2,
    ['t'] = t_s2,
    ['u'] = u_s2,
    // ['v'] = v_s2,
    ['w'] = w_s2,
    // ['x'] = x_s2,
    // ['y'] = y_s2,
    // ['z'] = z_s2


};


#ifdef __cplusplus
}
#endif

